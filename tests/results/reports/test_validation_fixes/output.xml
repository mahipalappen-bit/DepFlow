<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20250923 10:44:37.567" rpa="false" schemaversion="4">
<suite id="s1" name="02 Dependency Crud Tests" source="/Users/mmoola/Cursor/Dependency Management App/tests/test_suites/02_dependency_crud_tests.robot">
<kw name="Test Mode Suite Setup" library="depflow_keywords" type="SETUP">
<doc>Setup using test mode authentication</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 10:44:37.783" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 10:44:37.782" endtime="20250923 10:44:40.633"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 10:44:40.635" endtime="20250923 10:44:41.014"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 10:44:41.014" endtime="20250923 10:44:41.015"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:44:41.015" endtime="20250923 10:44:41.046"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:44:44.047" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 10:44:41.046" endtime="20250923 10:44:44.047"/>
</kw>
<status status="PASS" starttime="20250923 10:44:37.782" endtime="20250923 10:44:44.047"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:44:44.048" endtime="20250923 10:44:44.053"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:44:45.055" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:44:44.054" endtime="20250923 10:44:45.055"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:44:45.059" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:44:45.055" endtime="20250923 10:44:45.081"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:44:47.083" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:44:45.081" endtime="20250923 10:44:47.083"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:44:47.083" endtime="20250923 10:44:47.107"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:44:47.107" endtime="20250923 10:44:47.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:44:47.118" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:44:47.118" endtime="20250923 10:44:47.118"/>
</kw>
<status status="PASS" starttime="20250923 10:44:44.048" endtime="20250923 10:44:47.118"/>
</kw>
<status status="PASS" starttime="20250923 10:44:44.048" endtime="20250923 10:44:47.118"/>
</kw>
<status status="PASS" starttime="20250923 10:44:37.782" endtime="20250923 10:44:47.118"/>
</kw>
<test id="s1-t1" name="TC017 - Validate Required Field - Name" line="82">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:44:47.120" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:44:47.120" endtime="20250923 10:44:47.125"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:44:48.126" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:44:47.125" endtime="20250923 10:44:48.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:44:48.127" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:44:48.127" endtime="20250923 10:44:48.127"/>
</kw>
<status status="PASS" starttime="20250923 10:44:47.120" endtime="20250923 10:44:48.127"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:44:48.128" endtime="20250923 10:44:48.135"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:44:49.137" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:44:48.135" endtime="20250923 10:44:49.137"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:44:49.138" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:44:49.137" endtime="20250923 10:44:49.147"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:44:51.149" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:44:49.147" endtime="20250923 10:44:51.149"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:44:51.149" endtime="20250923 10:44:51.160"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:44:51.160" endtime="20250923 10:44:51.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:44:51.168" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:44:51.167" endtime="20250923 10:44:51.168"/>
</kw>
<status status="PASS" starttime="20250923 10:44:48.127" endtime="20250923 10:44:51.168"/>
</kw>
<status status="PASS" starttime="20250923 10:44:48.127" endtime="20250923 10:44:51.168"/>
</kw>
<status status="PASS" starttime="20250923 10:44:47.120" endtime="20250923 10:44:51.168"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:44:51.168" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:44:51.168" endtime="20250923 10:44:51.203"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:44:51.203" endtime="20250923 10:44:51.427"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:44:51.427" endtime="20250923 10:44:51.440"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:44:51.440" endtime="20250923 10:44:51.449"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:44:51.450" endtime="20250923 10:44:51.458"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 10:44:51.458" endtime="20250923 10:44:51.473"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 10:44:51.473" endtime="20250923 10:44:51.483"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:44:52.485" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:44:51.483" endtime="20250923 10:44:52.485"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>Test description without name</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:44:52.485" level="INFO">Typing text 'Test description without name' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:44:52.485" endtime="20250923 10:44:52.592"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:44:52.592" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:44:52.592" endtime="20250923 10:44:52.635"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:44:52.636" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:44:52.635" endtime="20250923 10:44:52.684"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:44:52.696" level="INFO">Element 'id:addDependencyModal' is displayed.</msg>
<status status="PASS" starttime="20250923 10:44:52.684" endtime="20250923 10:44:52.697"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:44:52.701" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:44:52.699" endtime="20250923 10:44:52.713"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:44:53.715" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:44:52.713" endtime="20250923 10:44:53.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:44:53.715" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:44:53.715" endtime="20250923 10:44:53.715"/>
</kw>
<status status="PASS" starttime="20250923 10:44:52.698" endtime="20250923 10:44:53.715"/>
</kw>
<status status="PASS" starttime="20250923 10:44:52.697" endtime="20250923 10:44:53.716"/>
</kw>
<doc>Test that name field is required for dependency creation</doc>
<tag>crud</tag>
<tag>negative</tag>
<tag>validation</tag>
<status status="PASS" starttime="20250923 10:44:47.118" endtime="20250923 10:44:53.716"/>
</test>
<test id="s1-t2" name="TC018 - Validate Required Field - Description" line="106">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:44:53.718" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:44:53.718" endtime="20250923 10:44:53.724"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:44:54.725" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:44:53.724" endtime="20250923 10:44:54.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:44:54.726" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:44:54.725" endtime="20250923 10:44:54.726"/>
</kw>
<status status="PASS" starttime="20250923 10:44:53.717" endtime="20250923 10:44:54.726"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:44:54.726" endtime="20250923 10:44:54.735"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:44:55.737" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:44:54.735" endtime="20250923 10:44:55.737"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:44:55.738" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:44:55.737" endtime="20250923 10:44:55.748"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:44:57.750" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:44:55.748" endtime="20250923 10:44:57.751"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:44:57.751" endtime="20250923 10:44:57.766"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:44:57.766" endtime="20250923 10:44:57.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:44:57.776" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:44:57.776" endtime="20250923 10:44:57.776"/>
</kw>
<status status="PASS" starttime="20250923 10:44:54.726" endtime="20250923 10:44:57.776"/>
</kw>
<status status="PASS" starttime="20250923 10:44:54.726" endtime="20250923 10:44:57.776"/>
</kw>
<status status="PASS" starttime="20250923 10:44:53.717" endtime="20250923 10:44:57.776"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:44:57.776" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:44:57.776" endtime="20250923 10:44:57.801"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:44:57.801" endtime="20250923 10:44:58.029"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:44:58.029" endtime="20250923 10:44:58.038"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:44:58.038" endtime="20250923 10:44:58.046"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:44:58.047" endtime="20250923 10:44:58.054"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 10:44:58.055" endtime="20250923 10:44:58.065"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 10:44:58.065" endtime="20250923 10:44:58.074"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 10:44:58.074" endtime="20250923 10:44:58.085"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:44:59.087" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:44:58.085" endtime="20250923 10:44:59.087"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>Test Name</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:44:59.088" level="INFO">Typing text 'Test Name' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:44:59.087" endtime="20250923 10:44:59.117"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>Short</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:44:59.118" level="INFO">Typing text 'Short' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:44:59.117" endtime="20250923 10:44:59.146"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:44:59.146" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:44:59.146" endtime="20250923 10:44:59.170"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:44:59.171" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:44:59.170" endtime="20250923 10:44:59.198"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:44:59.478" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:44:59.478" level="FAIL">The element 'id:addDependencyModal' should be visible, but it is not.</msg>
<status status="FAIL" starttime="20250923 10:44:59.198" endtime="20250923 10:44:59.483"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:44:59.484" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:44:59.483" endtime="20250923 10:44:59.488"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:45:00.490" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:44:59.488" endtime="20250923 10:45:00.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:45:00.490" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:45:00.490" endtime="20250923 10:45:00.490"/>
</kw>
<status status="PASS" starttime="20250923 10:44:59.483" endtime="20250923 10:45:00.490"/>
</kw>
<status status="PASS" starttime="20250923 10:44:59.483" endtime="20250923 10:45:00.490"/>
</kw>
<doc>Test that description field validation works</doc>
<tag>crud</tag>
<tag>negative</tag>
<tag>validation</tag>
<status status="FAIL" starttime="20250923 10:44:53.716" endtime="20250923 10:45:00.490">The element 'id:addDependencyModal' should be visible, but it is not.</status>
</test>
<test id="s1-t3" name="TC019 - Edit Existing Dependency" line="132">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:45:00.493" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:45:00.492" endtime="20250923 10:45:00.501"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:45:01.502" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:45:00.501" endtime="20250923 10:45:01.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:45:01.503" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:45:01.502" endtime="20250923 10:45:01.503"/>
</kw>
<status status="PASS" starttime="20250923 10:45:00.492" endtime="20250923 10:45:01.503"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:45:01.504" endtime="20250923 10:45:01.509"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:45:02.511" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:45:01.509" endtime="20250923 10:45:02.511"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:45:02.514" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:45:02.511" endtime="20250923 10:45:02.524"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:45:04.526" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:45:02.524" endtime="20250923 10:45:04.527"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:45:04.528" endtime="20250923 10:45:04.547"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:45:04.547" endtime="20250923 10:45:04.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:45:04.556" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:45:04.556" endtime="20250923 10:45:04.556"/>
</kw>
<status status="PASS" starttime="20250923 10:45:01.503" endtime="20250923 10:45:04.556"/>
</kw>
<status status="PASS" starttime="20250923 10:45:01.503" endtime="20250923 10:45:04.556"/>
</kw>
<status status="PASS" starttime="20250923 10:45:00.492" endtime="20250923 10:45:04.556"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${original_name}</var>
<arg>EditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:45:04.557" level="INFO">${timestamp} = 20250923_104504</msg>
<status status="PASS" starttime="20250923 10:45:04.556" endtime="20250923 10:45:04.557"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:45:04.557" level="INFO">${unique_name} = EditTest_20250923_104504</msg>
<status status="PASS" starttime="20250923 10:45:04.557" endtime="20250923 10:45:04.557"/>
</kw>
<msg timestamp="20250923 10:45:04.557" level="INFO">${original_name} = EditTest_20250923_104504</msg>
<status status="PASS" starttime="20250923 10:45:04.556" endtime="20250923 10:45:04.558"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${original_desc}</var>
<arg>Original description for edit test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:45:04.558" level="INFO">${original_desc} = Original description for edit test</msg>
<status status="PASS" starttime="20250923 10:45:04.558" endtime="20250923 10:45:04.558"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${original_name}</arg>
<arg>${original_desc}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:45:04.559" endtime="20250923 10:45:04.567"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:45:04.567" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:45:04.567" endtime="20250923 10:45:04.593"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:45:04.594" endtime="20250923 10:45:04.608"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:45:04.608" endtime="20250923 10:45:04.619"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:45:04.620" endtime="20250923 10:45:04.633"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:45:04.633" endtime="20250923 10:45:04.643"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:45:04.644" level="INFO">Typing text 'EditTest_20250923_104504' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:45:04.644" endtime="20250923 10:45:04.697"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:45:04.698" level="INFO">Typing text 'Original description for edit test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:45:04.697" endtime="20250923 10:45:04.748"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:45:04.748" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:45:04.748" endtime="20250923 10:45:04.777"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:45:04.778" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:45:04.777" endtime="20250923 10:45:04.806"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:45:04.807" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:45:04.806" endtime="20250923 10:45:04.825"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:45:04.825" endtime="20250923 10:45:04.826"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:45:04.826" endtime="20250923 10:45:04.835"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:45:04.835" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:45:04.835" endtime="20250923 10:45:04.863"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:45:04.863" endtime="20250923 10:45:04.871"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:45:06.872" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:45:04.871" endtime="20250923 10:45:06.873"/>
</kw>
<status status="PASS" starttime="20250923 10:45:04.558" endtime="20250923 10:45:06.873"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_name}</var>
<arg>${original_name}_EDITED</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:45:06.873" level="INFO">${new_name} = EditTest_20250923_104504_EDITED</msg>
<status status="PASS" starttime="20250923 10:45:06.873" endtime="20250923 10:45:06.873"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_desc}</var>
<arg>Updated description after edit</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:45:06.874" level="INFO">${new_desc} = Updated description after edit</msg>
<status status="PASS" starttime="20250923 10:45:06.874" endtime="20250923 10:45:06.874"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_team}</var>
<arg>Data Collection</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:45:06.874" level="INFO">${new_team} = Data Collection</msg>
<status status="PASS" starttime="20250923 10:45:06.874" endtime="20250923 10:45:06.874"/>
</kw>
<kw name="Edit Dependency" library="depflow_keywords">
<arg>${original_name}</arg>
<arg>${new_name}</arg>
<arg>${new_desc}</arg>
<arg>${new_team}</arg>
<doc>Edits an existing dependency with updated div-based selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:45:06.878" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'EditTest_20250923_104504')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:45:06.877" endtime="20250923 10:45:06.878"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:45:06.878" endtime="20250923 10:45:06.894"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${edit_button}</var>
<arg>${dependency_row}//button[@class='btn-edit']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:45:06.894" level="INFO">${edit_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'EditTest_20250923_104504')]/ancestor::div[@class='dependency-row']//button[@class='btn-edit']</msg>
<status status="PASS" starttime="20250923 10:45:06.894" endtime="20250923 10:45:06.894"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:45:06.895" endtime="20250923 10:45:06.906"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:45:06.906" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'EditTest_20250923_104504')]/ancestor::div[@class='dependency-row']//button[@class='btn-edit']'.</msg>
<status status="PASS" starttime="20250923 10:45:06.906" endtime="20250923 10:45:06.943"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:45:06.943" endtime="20250923 10:45:06.955"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${EDIT_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:45:06.955" endtime="20250923 10:45:06.965"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${EDIT_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:45:06.965" endtime="20250923 10:45:06.975"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${EDIT_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:45:06.975" endtime="20250923 10:45:06.985"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 10:45:06.985" endtime="20250923 10:45:06.998"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 10:45:06.998" endtime="20250923 10:45:07.008"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 10:45:07.008" endtime="20250923 10:45:07.018"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:45:08.019" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:45:07.018" endtime="20250923 10:45:08.020"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_name}' != '${EMPTY}'</arg>
<arg>Clear Element Text And Input</arg>
<arg>${EDIT_NAME_FIELD}</arg>
<arg>${new_name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Clear Element Text And Input" library="depflow_keywords">
<arg>${EDIT_NAME_FIELD}</arg>
<arg>${new_name}</arg>
<doc>Clears element text and inputs new text</doc>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${element}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 10:45:08.023" endtime="20250923 10:45:08.045"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:45:08.046" level="INFO">Typing text 'EditTest_20250923_104504_EDITED' into text field 'id:editName'.</msg>
<status status="PASS" starttime="20250923 10:45:08.045" endtime="20250923 10:45:08.084"/>
</kw>
<status status="PASS" starttime="20250923 10:45:08.023" endtime="20250923 10:45:08.084"/>
</kw>
<status status="PASS" starttime="20250923 10:45:08.020" endtime="20250923 10:45:08.084"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_description}' != '${EMPTY}'</arg>
<arg>Clear Element Text And Input</arg>
<arg>${EDIT_DESCRIPTION_FIELD}</arg>
<arg>${new_description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Clear Element Text And Input" library="depflow_keywords">
<arg>${EDIT_DESCRIPTION_FIELD}</arg>
<arg>${new_description}</arg>
<doc>Clears element text and inputs new text</doc>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${element}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 10:45:08.085" endtime="20250923 10:45:08.097"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:45:08.098" level="INFO">Typing text 'Updated description after edit' into text field 'id:editDescription'.</msg>
<status status="PASS" starttime="20250923 10:45:08.097" endtime="20250923 10:45:08.130"/>
</kw>
<status status="PASS" starttime="20250923 10:45:08.085" endtime="20250923 10:45:08.130"/>
</kw>
<status status="PASS" starttime="20250923 10:45:08.084" endtime="20250923 10:45:08.130"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_team}' != '${EMPTY}'</arg>
<arg>Select From List By Label</arg>
<arg>${EDIT_TEAM_SELECT}</arg>
<arg>${new_team}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${EDIT_TEAM_SELECT}</arg>
<arg>${new_team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:45:08.131" level="INFO">Selecting options from selection list 'id:editTeam' by label Data Collection.</msg>
<status status="PASS" starttime="20250923 10:45:08.131" endtime="20250923 10:45:08.162"/>
</kw>
<status status="PASS" starttime="20250923 10:45:08.130" endtime="20250923 10:45:08.162"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_status}' != '${EMPTY}'</arg>
<arg>Select From List By Value</arg>
<arg>${EDIT_STATUS_SELECT}</arg>
<arg>${new_status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:45:08.162" endtime="20250923 10:45:08.163"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_priority}' != '${EMPTY}'</arg>
<arg>Select From List By Value</arg>
<arg>${EDIT_PRIORITY_SELECT}</arg>
<arg>${new_priority}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:45:08.163" endtime="20250923 10:45:08.163"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:45:08.164" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-submit')]'.</msg>
<msg timestamp="20250923 10:45:18.547" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:45:18.547" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000105443418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x000000010543b3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000104f64ec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x0000000104fad42c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000104fa2220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000104fa1cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000104fed604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x0000000104fa00d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000105407b08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x000000010540ad20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x00000001053e8e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x000000010540b5cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x00000001053da59c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x000000010542a9f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x000000010542ab70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x000000010543b000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 10:45:08.163" endtime="20250923 10:45:18.599"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 10:45:18.599" endtime="20250923 10:45:18.599"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 10:45:18.599" endtime="20250923 10:45:18.599"/>
</kw>
<status status="FAIL" starttime="20250923 10:45:06.874" endtime="20250923 10:45:18.600"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${new_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 10:45:18.600" endtime="20250923 10:45:18.600"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${original_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 10:45:18.600" endtime="20250923 10:45:18.600"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<status status="NOT RUN" starttime="20250923 10:45:18.600" endtime="20250923 10:45:18.600"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:45:18.601" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:45:18.600" endtime="20250923 10:45:18.606"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:45:19.607" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:45:18.606" endtime="20250923 10:45:19.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:45:19.607" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:45:19.607" endtime="20250923 10:45:19.607"/>
</kw>
<status status="PASS" starttime="20250923 10:45:18.600" endtime="20250923 10:45:19.607"/>
</kw>
<status status="PASS" starttime="20250923 10:45:18.600" endtime="20250923 10:45:19.607"/>
</kw>
<doc>Test editing an existing dependency</doc>
<tag>crud</tag>
<tag>edit</tag>
<tag>update</tag>
<status status="FAIL" starttime="20250923 10:45:00.491" endtime="20250923 10:45:19.607">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000105443418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x000000010543b3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000104f64ec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x0000000104fad42c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000104fa2220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000104fa1cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000104fed604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x0000000104fa00d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000105407b08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x000000010540ad20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x00000001053e8e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x000000010540b5cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x00000001053da59c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x000000010542a9f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x000000010542ab70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x000000010543b000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</status>
</test>
<kw name="Test Mode Suite Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:45:19.611" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:45:19.609" endtime="20250923 10:45:19.616"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:45:20.618" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:45:19.616" endtime="20250923 10:45:20.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:45:20.620" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:45:20.620" endtime="20250923 10:45:20.620"/>
</kw>
<status status="PASS" starttime="20250923 10:45:19.609" endtime="20250923 10:45:20.620"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 10:45:20.621" endtime="20250923 10:45:20.762"/>
</kw>
<status status="PASS" starttime="20250923 10:45:20.620" endtime="20250923 10:45:20.762"/>
</kw>
<status status="PASS" starttime="20250923 10:45:19.609" endtime="20250923 10:45:20.762"/>
</kw>
<doc>Dependency CRUD Operations Test Suite for DepFlow Application</doc>
<status status="FAIL" starttime="20250923 10:44:37.568" endtime="20250923 10:45:20.762"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="2" skip="0">crud</stat>
<stat pass="0" fail="1" skip="0">edit</stat>
<stat pass="1" fail="1" skip="0">negative</stat>
<stat pass="0" fail="1" skip="0">update</stat>
<stat pass="1" fail="1" skip="0">validation</stat>
</tag>
<suite>
<stat pass="1" fail="2" skip="0" id="s1" name="02 Dependency Crud Tests">02 Dependency Crud Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
