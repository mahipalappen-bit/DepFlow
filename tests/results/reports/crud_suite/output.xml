<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20250923 07:33:36.183" rpa="false" schemaversion="4">
<suite id="s1" name="02 Dependency Crud Tests" source="/Users/mmoola/Cursor/Dependency Management App/tests/test_suites/02_dependency_crud_tests.robot">
<kw name="Test Mode Suite Setup" library="depflow_keywords" type="SETUP">
<doc>Setup using test mode authentication</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:33:36.375" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:33:36.375" endtime="20250923 07:33:38.219"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:33:38.220" endtime="20250923 07:33:38.622"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:33:38.623" endtime="20250923 07:33:38.626"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:33:38.626" endtime="20250923 07:33:38.639"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:33:41.641" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:33:38.639" endtime="20250923 07:33:41.641"/>
</kw>
<status status="PASS" starttime="20250923 07:33:36.375" endtime="20250923 07:33:41.641"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:33:41.642" endtime="20250923 07:33:41.652"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:33:42.654" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:33:41.652" endtime="20250923 07:33:42.654"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:33:42.656" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:33:42.655" endtime="20250923 07:33:42.681"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:33:44.684" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:33:42.681" endtime="20250923 07:33:44.684"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:33:44.684" endtime="20250923 07:33:44.709"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:33:44.709" endtime="20250923 07:33:44.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:33:44.720" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:33:44.720" endtime="20250923 07:33:44.720"/>
</kw>
<status status="PASS" starttime="20250923 07:33:41.642" endtime="20250923 07:33:44.720"/>
</kw>
<status status="PASS" starttime="20250923 07:33:41.642" endtime="20250923 07:33:44.720"/>
</kw>
<status status="PASS" starttime="20250923 07:33:36.375" endtime="20250923 07:33:44.720"/>
</kw>
<test id="s1-t1" name="TC013 - Verify Dashboard Elements Present" line="27">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:33:44.721" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:33:44.721" endtime="20250923 07:33:44.726"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:33:45.727" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:33:44.727" endtime="20250923 07:33:45.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:33:45.728" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:33:45.728" endtime="20250923 07:33:45.728"/>
</kw>
<status status="PASS" starttime="20250923 07:33:44.721" endtime="20250923 07:33:45.728"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:33:45.729" endtime="20250923 07:33:45.737"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:33:46.738" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:33:45.737" endtime="20250923 07:33:46.738"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:33:46.740" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:33:46.739" endtime="20250923 07:33:46.750"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:33:48.752" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:33:46.751" endtime="20250923 07:33:48.752"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:33:48.752" endtime="20250923 07:33:48.763"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:33:48.763" endtime="20250923 07:33:48.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:33:48.771" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:33:48.771" endtime="20250923 07:33:48.771"/>
</kw>
<status status="PASS" starttime="20250923 07:33:45.728" endtime="20250923 07:33:48.771"/>
</kw>
<status status="PASS" starttime="20250923 07:33:45.728" endtime="20250923 07:33:48.771"/>
</kw>
<status status="PASS" starttime="20250923 07:33:44.721" endtime="20250923 07:33:48.771"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:33:48.777" level="INFO">Current page contains element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:33:48.771" endtime="20250923 07:33:48.777"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${TOTAL_COUNT}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:33:48.783" level="INFO">Current page contains element 'id:totalCount'.</msg>
<status status="PASS" starttime="20250923 07:33:48.777" endtime="20250923 07:33:48.783"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${SEARCH_INPUT}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:33:48.787" level="INFO">Current page contains element 'id:searchInput'.</msg>
<status status="PASS" starttime="20250923 07:33:48.783" endtime="20250923 07:33:48.787"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${DEPENDENCY_TABLE}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:33:59.029" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:33:59.030" level="FAIL">Page should have contained element 'xpath://table[contains(@class, 'table')]' but did not.</msg>
<status status="FAIL" starttime="20250923 07:33:48.787" endtime="20250923 07:33:59.044"/>
</kw>
<kw name="Verify DepFlow Dashboard Logo Present" library="depflow_keywords">
<doc>Verifies DepFlow logo is present on dashboard page</doc>
<status status="NOT RUN" starttime="20250923 07:33:59.045" endtime="20250923 07:33:59.045"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:33:59.046" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:33:59.045" endtime="20250923 07:33:59.050"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:00.051" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:33:59.050" endtime="20250923 07:34:00.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:34:00.052" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:34:00.052" endtime="20250923 07:34:00.052"/>
</kw>
<status status="PASS" starttime="20250923 07:33:59.045" endtime="20250923 07:34:00.052"/>
</kw>
<status status="PASS" starttime="20250923 07:33:59.045" endtime="20250923 07:34:00.052"/>
</kw>
<doc>Verify all dashboard elements are present after login</doc>
<tag>dashboard</tag>
<tag>smoke</tag>
<tag>ui</tag>
<status status="FAIL" starttime="20250923 07:33:44.720" endtime="20250923 07:34:00.052">Page should have contained element 'xpath://table[contains(@class, 'table')]' but did not.</status>
</test>
<test id="s1-t2" name="TC014 - Open Add Dependency Modal" line="37">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:34:00.054" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:34:00.054" endtime="20250923 07:34:00.060"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:01.062" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:34:00.060" endtime="20250923 07:34:01.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:34:01.063" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:34:01.063" endtime="20250923 07:34:01.063"/>
</kw>
<status status="PASS" starttime="20250923 07:34:00.054" endtime="20250923 07:34:01.064"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:34:01.065" endtime="20250923 07:34:01.073"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:02.074" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:34:01.074" endtime="20250923 07:34:02.075"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:34:02.077" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:34:02.075" endtime="20250923 07:34:02.086"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:04.088" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:34:02.086" endtime="20250923 07:34:04.088"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:34:04.089" endtime="20250923 07:34:04.105"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:34:04.105" endtime="20250923 07:34:04.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:34:04.116" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:34:04.115" endtime="20250923 07:34:04.116"/>
</kw>
<status status="PASS" starttime="20250923 07:34:01.064" endtime="20250923 07:34:04.116"/>
</kw>
<status status="PASS" starttime="20250923 07:34:01.064" endtime="20250923 07:34:04.116"/>
</kw>
<status status="PASS" starttime="20250923 07:34:00.053" endtime="20250923 07:34:04.116"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:34:04.116" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:34:04.116" endtime="20250923 07:34:04.119"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:34:04.119" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:34:04.119" endtime="20250923 07:34:04.121"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:34:04.122" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:34:04.122" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:34:04.122" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:34:04.122" endtime="20250923 07:34:04.130"/>
</kw>
<status status="PASS" starttime="20250923 07:34:04.121" endtime="20250923 07:34:04.130"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:05.132" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:34:04.130" endtime="20250923 07:34:05.132"/>
</kw>
<status status="PASS" starttime="20250923 07:34:04.116" endtime="20250923 07:34:05.132"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:06.134" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:34:05.132" endtime="20250923 07:34:06.134"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:34:06.135" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:34:06.134" endtime="20250923 07:34:06.182"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:34:16.584" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:34:16.584" level="FAIL">Element 'id:addEditModal' not visible after 10 seconds.</msg>
<status status="FAIL" starttime="20250923 07:34:06.182" endtime="20250923 07:34:16.586"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:34:16.586" endtime="20250923 07:34:16.586"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:34:16.586" endtime="20250923 07:34:16.586"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:34:16.586" endtime="20250923 07:34:16.586"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:34:16.586" endtime="20250923 07:34:16.586"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:34:16.586" endtime="20250923 07:34:16.586"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${CANCEL_BUTTON}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:34:16.586" endtime="20250923 07:34:16.586"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:34:16.587" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:34:16.587" endtime="20250923 07:34:16.591"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:17.592" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:34:16.591" endtime="20250923 07:34:17.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:34:17.593" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:34:17.592" endtime="20250923 07:34:17.593"/>
</kw>
<status status="PASS" starttime="20250923 07:34:16.587" endtime="20250923 07:34:17.593"/>
</kw>
<status status="PASS" starttime="20250923 07:34:16.587" endtime="20250923 07:34:17.593"/>
</kw>
<doc>Test opening the Add Dependency modal</doc>
<tag>modal</tag>
<tag>smoke</tag>
<tag>ui</tag>
<status status="FAIL" starttime="20250923 07:34:00.053" endtime="20250923 07:34:17.593">Element 'id:addEditModal' not visible after 10 seconds.</status>
</test>
<test id="s1-t3" name="TC015 - Add New Dependency Successfully" line="52">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:34:17.595" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:34:17.595" endtime="20250923 07:34:17.600"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:18.602" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:34:17.600" endtime="20250923 07:34:18.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:34:18.602" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:34:18.602" endtime="20250923 07:34:18.602"/>
</kw>
<status status="PASS" starttime="20250923 07:34:17.594" endtime="20250923 07:34:18.603"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:34:18.603" endtime="20250923 07:34:18.612"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:19.613" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:34:18.612" endtime="20250923 07:34:19.613"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:34:19.614" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:34:19.613" endtime="20250923 07:34:19.624"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:21.626" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:34:19.624" endtime="20250923 07:34:21.626"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:34:21.626" endtime="20250923 07:34:21.641"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:34:21.641" endtime="20250923 07:34:21.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:34:21.652" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:34:21.651" endtime="20250923 07:34:21.652"/>
</kw>
<status status="PASS" starttime="20250923 07:34:18.603" endtime="20250923 07:34:21.652"/>
</kw>
<status status="PASS" starttime="20250923 07:34:18.603" endtime="20250923 07:34:21.652"/>
</kw>
<status status="PASS" starttime="20250923 07:34:17.594" endtime="20250923 07:34:21.652"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>CreateTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:34:21.652" level="INFO">${timestamp} = 20250923_073421</msg>
<status status="PASS" starttime="20250923 07:34:21.652" endtime="20250923 07:34:21.652"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:34:21.652" level="INFO">${unique_name} = CreateTest_20250923_073421</msg>
<status status="PASS" starttime="20250923 07:34:21.652" endtime="20250923 07:34:21.652"/>
</kw>
<msg timestamp="20250923 07:34:21.652" level="INFO">${unique_name} = CreateTest_20250923_073421</msg>
<status status="PASS" starttime="20250923 07:34:21.652" endtime="20250923 07:34:21.652"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency created by Robot Framework automation</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:34:21.653" level="INFO">${description} = Test dependency created by Robot Framework automation</msg>
<status status="PASS" starttime="20250923 07:34:21.653" endtime="20250923 07:34:21.653"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${TEST_DEP_STATUS}</arg>
<arg>${TEST_DEP_PRIORITY}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:34:21.654" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:34:21.654" endtime="20250923 07:34:21.678"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:34:32.071" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:34:32.072" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:34:21.679" endtime="20250923 07:34:32.072"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:32.072" endtime="20250923 07:34:32.072"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:32.072" endtime="20250923 07:34:32.072"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:32.072" endtime="20250923 07:34:32.072"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:32.072" endtime="20250923 07:34:32.072"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:32.072" endtime="20250923 07:34:32.072"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:34:32.072" endtime="20250923 07:34:32.072"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:32.072" endtime="20250923 07:34:32.072"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:34:32.072" endtime="20250923 07:34:32.072"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:34:32.072" endtime="20250923 07:34:32.072"/>
</kw>
<status status="FAIL" starttime="20250923 07:34:21.653" endtime="20250923 07:34:32.073"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the table</doc>
<status status="NOT RUN" starttime="20250923 07:34:32.073" endtime="20250923 07:34:32.073"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<status status="NOT RUN" starttime="20250923 07:34:32.073" endtime="20250923 07:34:32.073"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${unique_name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:32.073" endtime="20250923 07:34:32.073"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${description}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:32.073" endtime="20250923 07:34:32.073"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${TEST_DEP_TEAM}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:32.073" endtime="20250923 07:34:32.073"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:34:32.073" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:34:32.073" endtime="20250923 07:34:32.079"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:33.080" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:34:32.079" endtime="20250923 07:34:33.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:34:33.081" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:34:33.081" endtime="20250923 07:34:33.081"/>
</kw>
<status status="PASS" starttime="20250923 07:34:32.073" endtime="20250923 07:34:33.081"/>
</kw>
<status status="PASS" starttime="20250923 07:34:32.073" endtime="20250923 07:34:33.081"/>
</kw>
<doc>Test successful creation of a new dependency</doc>
<tag>create</tag>
<tag>crud</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20250923 07:34:17.593" endtime="20250923 07:34:33.081">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t4" name="TC016 - Add Dependency With Minimal Required Fields" line="70">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:34:33.085" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:34:33.084" endtime="20250923 07:34:33.091"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:34.092" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:34:33.091" endtime="20250923 07:34:34.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:34:34.093" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:34:34.093" endtime="20250923 07:34:34.093"/>
</kw>
<status status="PASS" starttime="20250923 07:34:33.084" endtime="20250923 07:34:34.094"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:34:34.095" endtime="20250923 07:34:34.106"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:35.107" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:34:34.106" endtime="20250923 07:34:35.107"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:34:35.108" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:34:35.107" endtime="20250923 07:34:35.117"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:37.119" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:34:35.117" endtime="20250923 07:34:37.119"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:34:37.119" endtime="20250923 07:34:37.132"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:34:37.132" endtime="20250923 07:34:37.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:34:37.142" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:34:37.142" endtime="20250923 07:34:37.142"/>
</kw>
<status status="PASS" starttime="20250923 07:34:34.095" endtime="20250923 07:34:37.142"/>
</kw>
<status status="PASS" starttime="20250923 07:34:34.095" endtime="20250923 07:34:37.143"/>
</kw>
<status status="PASS" starttime="20250923 07:34:33.083" endtime="20250923 07:34:37.143"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>MinimalTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:34:37.143" level="INFO">${timestamp} = 20250923_073437</msg>
<status status="PASS" starttime="20250923 07:34:37.143" endtime="20250923 07:34:37.143"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:34:37.143" level="INFO">${unique_name} = MinimalTest_20250923_073437</msg>
<status status="PASS" starttime="20250923 07:34:37.143" endtime="20250923 07:34:37.143"/>
</kw>
<msg timestamp="20250923 07:34:37.143" level="INFO">${unique_name} = MinimalTest_20250923_073437</msg>
<status status="PASS" starttime="20250923 07:34:37.143" endtime="20250923 07:34:37.143"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Minimal test dependency with required fields only</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:34:37.144" level="INFO">${description} = Minimal test dependency with required fields only</msg>
<status status="PASS" starttime="20250923 07:34:37.143" endtime="20250923 07:34:37.144"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:34:37.145" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:34:37.145" endtime="20250923 07:34:37.167"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:34:47.602" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-4.png"&gt;&lt;img src="selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:34:47.602" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:34:37.168" endtime="20250923 07:34:47.602"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:47.603" endtime="20250923 07:34:47.603"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:47.603" endtime="20250923 07:34:47.603"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:47.603" endtime="20250923 07:34:47.603"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:47.603" endtime="20250923 07:34:47.603"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:47.603" endtime="20250923 07:34:47.603"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:34:47.603" endtime="20250923 07:34:47.603"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:34:47.603" endtime="20250923 07:34:47.603"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:34:47.603" endtime="20250923 07:34:47.603"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:34:47.603" endtime="20250923 07:34:47.603"/>
</kw>
<status status="FAIL" starttime="20250923 07:34:37.144" endtime="20250923 07:34:47.603"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the table</doc>
<status status="NOT RUN" starttime="20250923 07:34:47.604" endtime="20250923 07:34:47.604"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<status status="NOT RUN" starttime="20250923 07:34:47.604" endtime="20250923 07:34:47.604"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:34:47.604" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:34:47.604" endtime="20250923 07:34:47.609"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:48.610" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:34:47.609" endtime="20250923 07:34:48.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:34:48.611" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:34:48.610" endtime="20250923 07:34:48.611"/>
</kw>
<status status="PASS" starttime="20250923 07:34:47.604" endtime="20250923 07:34:48.611"/>
</kw>
<status status="PASS" starttime="20250923 07:34:47.604" endtime="20250923 07:34:48.611"/>
</kw>
<doc>Test creating dependency with only required fields</doc>
<tag>create</tag>
<tag>crud</tag>
<tag>minimal</tag>
<status status="FAIL" starttime="20250923 07:34:33.082" endtime="20250923 07:34:48.611">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t5" name="TC017 - Validate Required Field - Name" line="82">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:34:48.614" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:34:48.613" endtime="20250923 07:34:48.619"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:49.620" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:34:48.619" endtime="20250923 07:34:49.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:34:49.621" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:34:49.621" endtime="20250923 07:34:49.621"/>
</kw>
<status status="PASS" starttime="20250923 07:34:48.613" endtime="20250923 07:34:49.621"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:34:49.622" endtime="20250923 07:34:49.631"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:50.633" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:34:49.631" endtime="20250923 07:34:50.633"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:34:50.634" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:34:50.634" endtime="20250923 07:34:50.643"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:34:52.644" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:34:50.643" endtime="20250923 07:34:52.644"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:34:52.644" endtime="20250923 07:34:52.659"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:34:52.659" endtime="20250923 07:34:52.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:34:52.669" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:34:52.669" endtime="20250923 07:34:52.669"/>
</kw>
<status status="PASS" starttime="20250923 07:34:49.621" endtime="20250923 07:34:52.669"/>
</kw>
<status status="PASS" starttime="20250923 07:34:49.621" endtime="20250923 07:34:52.669"/>
</kw>
<status status="PASS" starttime="20250923 07:34:48.612" endtime="20250923 07:34:52.669"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:34:52.670" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:34:52.670" endtime="20250923 07:34:52.693"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:35:03.152" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-5.png"&gt;&lt;img src="selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:35:03.153" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:34:52.693" endtime="20250923 07:35:03.154"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>Test description without name</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:03.154" endtime="20250923 07:35:03.154"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:03.154" endtime="20250923 07:35:03.155"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:03.155" endtime="20250923 07:35:03.155"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:35:03.155" endtime="20250923 07:35:03.155"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:35:03.157" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:35:03.156" endtime="20250923 07:35:03.163"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:04.165" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:35:03.163" endtime="20250923 07:35:04.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:35:04.166" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:35:04.165" endtime="20250923 07:35:04.166"/>
</kw>
<status status="PASS" starttime="20250923 07:35:03.156" endtime="20250923 07:35:04.166"/>
</kw>
<status status="PASS" starttime="20250923 07:35:03.156" endtime="20250923 07:35:04.166"/>
</kw>
<doc>Test that name field is required for dependency creation</doc>
<tag>crud</tag>
<tag>negative</tag>
<tag>validation</tag>
<status status="FAIL" starttime="20250923 07:34:48.612" endtime="20250923 07:35:04.166">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t6" name="TC018 - Validate Required Field - Description" line="98">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:35:04.168" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:35:04.167" endtime="20250923 07:35:04.173"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:05.175" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:35:04.173" endtime="20250923 07:35:05.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:35:05.176" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:35:05.176" endtime="20250923 07:35:05.177"/>
</kw>
<status status="PASS" starttime="20250923 07:35:04.167" endtime="20250923 07:35:05.177"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:35:05.178" endtime="20250923 07:35:05.187"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:06.188" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:35:05.187" endtime="20250923 07:35:06.188"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:35:06.193" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:35:06.189" endtime="20250923 07:35:06.203"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:08.205" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:35:06.203" endtime="20250923 07:35:08.205"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:35:08.205" endtime="20250923 07:35:08.220"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:35:08.220" endtime="20250923 07:35:08.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:35:08.231" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:35:08.231" endtime="20250923 07:35:08.231"/>
</kw>
<status status="PASS" starttime="20250923 07:35:05.177" endtime="20250923 07:35:08.231"/>
</kw>
<status status="PASS" starttime="20250923 07:35:05.177" endtime="20250923 07:35:08.231"/>
</kw>
<status status="PASS" starttime="20250923 07:35:04.167" endtime="20250923 07:35:08.231"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:35:08.231" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:35:08.231" endtime="20250923 07:35:08.259"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:35:18.628" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-6.png"&gt;&lt;img src="selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:35:18.628" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:35:08.259" endtime="20250923 07:35:18.628"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>Test Name</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:18.628" endtime="20250923 07:35:18.628"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>Short</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:18.628" endtime="20250923 07:35:18.628"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:18.628" endtime="20250923 07:35:18.628"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:18.628" endtime="20250923 07:35:18.628"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:35:18.628" endtime="20250923 07:35:18.628"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:35:18.629" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:35:18.629" endtime="20250923 07:35:18.633"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:19.634" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:35:18.633" endtime="20250923 07:35:19.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:35:19.635" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:35:19.634" endtime="20250923 07:35:19.635"/>
</kw>
<status status="PASS" starttime="20250923 07:35:18.629" endtime="20250923 07:35:19.635"/>
</kw>
<status status="PASS" starttime="20250923 07:35:18.628" endtime="20250923 07:35:19.635"/>
</kw>
<doc>Test that description field validation works</doc>
<tag>crud</tag>
<tag>negative</tag>
<tag>validation</tag>
<status status="FAIL" starttime="20250923 07:35:04.166" endtime="20250923 07:35:19.635">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t7" name="TC019 - Edit Existing Dependency" line="115">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:35:19.637" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:35:19.636" endtime="20250923 07:35:19.642"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:20.643" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:35:19.642" endtime="20250923 07:35:20.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:35:20.644" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:35:20.643" endtime="20250923 07:35:20.644"/>
</kw>
<status status="PASS" starttime="20250923 07:35:19.636" endtime="20250923 07:35:20.644"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:35:20.645" endtime="20250923 07:35:20.650"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:21.652" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:35:20.650" endtime="20250923 07:35:21.652"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:35:21.653" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:35:21.653" endtime="20250923 07:35:21.664"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:23.665" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:35:21.664" endtime="20250923 07:35:23.665"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:35:23.666" endtime="20250923 07:35:23.684"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:35:23.684" endtime="20250923 07:35:23.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:35:23.695" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:35:23.694" endtime="20250923 07:35:23.695"/>
</kw>
<status status="PASS" starttime="20250923 07:35:20.644" endtime="20250923 07:35:23.695"/>
</kw>
<status status="PASS" starttime="20250923 07:35:20.644" endtime="20250923 07:35:23.695"/>
</kw>
<status status="PASS" starttime="20250923 07:35:19.636" endtime="20250923 07:35:23.695"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${original_name}</var>
<arg>EditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:35:23.695" level="INFO">${timestamp} = 20250923_073523</msg>
<status status="PASS" starttime="20250923 07:35:23.695" endtime="20250923 07:35:23.695"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:35:23.696" level="INFO">${unique_name} = EditTest_20250923_073523</msg>
<status status="PASS" starttime="20250923 07:35:23.695" endtime="20250923 07:35:23.696"/>
</kw>
<msg timestamp="20250923 07:35:23.696" level="INFO">${original_name} = EditTest_20250923_073523</msg>
<status status="PASS" starttime="20250923 07:35:23.695" endtime="20250923 07:35:23.696"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${original_desc}</var>
<arg>Original description for edit test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:35:23.696" level="INFO">${original_desc} = Original description for edit test</msg>
<status status="PASS" starttime="20250923 07:35:23.696" endtime="20250923 07:35:23.696"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${original_name}</arg>
<arg>${original_desc}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:35:23.697" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:35:23.697" endtime="20250923 07:35:23.721"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:35:34.132" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-7.png"&gt;&lt;img src="selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:35:34.132" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:35:23.722" endtime="20250923 07:35:34.132"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<status status="FAIL" starttime="20250923 07:35:23.696" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_name}</var>
<arg>${original_name}_EDITED</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_desc}</var>
<arg>Updated description after edit</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_team}</var>
<arg>Data Collection</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Edit Dependency" library="depflow_keywords">
<arg>${original_name}</arg>
<arg>${new_name}</arg>
<arg>${new_desc}</arg>
<arg>${new_team}</arg>
<doc>Edits an existing dependency</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${new_name}</arg>
<doc>Verifies that a dependency exists in the table</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${original_name}</arg>
<doc>Verifies that a dependency does not exist in the table</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<status status="NOT RUN" starttime="20250923 07:35:34.133" endtime="20250923 07:35:34.133"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:35:34.134" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:35:34.134" endtime="20250923 07:35:34.137"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:35.139" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:35:34.138" endtime="20250923 07:35:35.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:35:35.140" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:35:35.140" endtime="20250923 07:35:35.140"/>
</kw>
<status status="PASS" starttime="20250923 07:35:34.134" endtime="20250923 07:35:35.140"/>
</kw>
<status status="PASS" starttime="20250923 07:35:34.133" endtime="20250923 07:35:35.140"/>
</kw>
<doc>Test editing an existing dependency</doc>
<tag>crud</tag>
<tag>edit</tag>
<tag>update</tag>
<status status="FAIL" starttime="20250923 07:35:19.635" endtime="20250923 07:35:35.140">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t8" name="TC020 - Delete Dependency Successfully" line="136">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:35:35.143" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:35:35.142" endtime="20250923 07:35:35.148"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:36.151" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:35:35.148" endtime="20250923 07:35:36.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:35:36.151" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:35:36.151" endtime="20250923 07:35:36.151"/>
</kw>
<status status="PASS" starttime="20250923 07:35:35.142" endtime="20250923 07:35:36.151"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:35:36.152" endtime="20250923 07:35:36.159"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:37.162" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:35:36.160" endtime="20250923 07:35:37.162"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:35:37.163" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:35:37.162" endtime="20250923 07:35:37.173"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:39.174" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:35:37.173" endtime="20250923 07:35:39.174"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:35:39.174" endtime="20250923 07:35:39.189"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:35:39.189" endtime="20250923 07:35:39.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:35:39.199" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:35:39.199" endtime="20250923 07:35:39.199"/>
</kw>
<status status="PASS" starttime="20250923 07:35:36.152" endtime="20250923 07:35:39.199"/>
</kw>
<status status="PASS" starttime="20250923 07:35:36.151" endtime="20250923 07:35:39.199"/>
</kw>
<status status="PASS" starttime="20250923 07:35:35.142" endtime="20250923 07:35:39.199"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>DeleteTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:35:39.200" level="INFO">${timestamp} = 20250923_073539</msg>
<status status="PASS" starttime="20250923 07:35:39.200" endtime="20250923 07:35:39.200"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:35:39.200" level="INFO">${unique_name} = DeleteTest_20250923_073539</msg>
<status status="PASS" starttime="20250923 07:35:39.200" endtime="20250923 07:35:39.200"/>
</kw>
<msg timestamp="20250923 07:35:39.200" level="INFO">${dep_name} = DeleteTest_20250923_073539</msg>
<status status="PASS" starttime="20250923 07:35:39.199" endtime="20250923 07:35:39.200"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency created for deletion test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:35:39.200" level="INFO">${description} = Dependency created for deletion test</msg>
<status status="PASS" starttime="20250923 07:35:39.200" endtime="20250923 07:35:39.200"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:35:39.202" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:35:39.201" endtime="20250923 07:35:39.226"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:35:49.641" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-8.png"&gt;&lt;img src="selenium-screenshot-8.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:35:49.641" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:35:39.226" endtime="20250923 07:35:49.641"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:49.642" endtime="20250923 07:35:49.642"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:49.642" endtime="20250923 07:35:49.642"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:49.642" endtime="20250923 07:35:49.642"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:49.642" endtime="20250923 07:35:49.642"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:49.642" endtime="20250923 07:35:49.642"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:35:49.642" endtime="20250923 07:35:49.642"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:35:49.642" endtime="20250923 07:35:49.642"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:35:49.642" endtime="20250923 07:35:49.642"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:35:49.642" endtime="20250923 07:35:49.642"/>
</kw>
<status status="FAIL" starttime="20250923 07:35:39.200" endtime="20250923 07:35:49.642"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with confirmation dialog handling</doc>
<status status="NOT RUN" starttime="20250923 07:35:49.642" endtime="20250923 07:35:49.642"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the table</doc>
<status status="NOT RUN" starttime="20250923 07:35:49.643" endtime="20250923 07:35:49.643"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:35:49.643" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:35:49.643" endtime="20250923 07:35:49.647"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:50.649" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:35:49.647" endtime="20250923 07:35:50.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:35:50.651" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:35:50.650" endtime="20250923 07:35:50.651"/>
</kw>
<status status="PASS" starttime="20250923 07:35:49.643" endtime="20250923 07:35:50.651"/>
</kw>
<status status="PASS" starttime="20250923 07:35:49.643" endtime="20250923 07:35:50.651"/>
</kw>
<doc>Test successful deletion of a dependency with confirmation</doc>
<tag>confirmation</tag>
<tag>crud</tag>
<tag>delete</tag>
<status status="FAIL" starttime="20250923 07:35:35.141" endtime="20250923 07:35:50.651">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t9" name="TC021 - Delete Dependency Cancel Confirmation" line="151">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:35:50.654" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:35:50.653" endtime="20250923 07:35:50.659"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:51.659" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:35:50.659" endtime="20250923 07:35:51.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:35:51.660" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:35:51.660" endtime="20250923 07:35:51.660"/>
</kw>
<status status="PASS" starttime="20250923 07:35:50.653" endtime="20250923 07:35:51.660"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:35:51.660" endtime="20250923 07:35:51.668"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:52.669" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:35:51.668" endtime="20250923 07:35:52.669"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:35:52.670" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:35:52.669" endtime="20250923 07:35:52.679"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:35:54.680" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:35:52.680" endtime="20250923 07:35:54.680"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:35:54.681" endtime="20250923 07:35:54.697"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:35:54.697" endtime="20250923 07:35:54.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:35:54.708" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:35:54.708" endtime="20250923 07:35:54.708"/>
</kw>
<status status="PASS" starttime="20250923 07:35:51.660" endtime="20250923 07:35:54.708"/>
</kw>
<status status="PASS" starttime="20250923 07:35:51.660" endtime="20250923 07:35:54.708"/>
</kw>
<status status="PASS" starttime="20250923 07:35:50.653" endtime="20250923 07:35:54.708"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>DeleteCancelTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:35:54.708" level="INFO">${timestamp} = 20250923_073554</msg>
<status status="PASS" starttime="20250923 07:35:54.708" endtime="20250923 07:35:54.709"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:35:54.709" level="INFO">${unique_name} = DeleteCancelTest_20250923_073554</msg>
<status status="PASS" starttime="20250923 07:35:54.709" endtime="20250923 07:35:54.709"/>
</kw>
<msg timestamp="20250923 07:35:54.709" level="INFO">${dep_name} = DeleteCancelTest_20250923_073554</msg>
<status status="PASS" starttime="20250923 07:35:54.708" endtime="20250923 07:35:54.709"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for delete cancel test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:35:54.709" level="INFO">${description} = Dependency for delete cancel test</msg>
<status status="PASS" starttime="20250923 07:35:54.709" endtime="20250923 07:35:54.709"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:35:54.710" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:35:54.710" endtime="20250923 07:35:54.734"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:36:05.107" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-9.png"&gt;&lt;img src="selenium-screenshot-9.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:36:05.107" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:35:54.734" endtime="20250923 07:36:05.107"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:05.107" endtime="20250923 07:36:05.107"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:05.107" endtime="20250923 07:36:05.107"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:05.107" endtime="20250923 07:36:05.107"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:05.107" endtime="20250923 07:36:05.107"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:05.107" endtime="20250923 07:36:05.107"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:36:05.107" endtime="20250923 07:36:05.107"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:05.107" endtime="20250923 07:36:05.107"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:36:05.108" endtime="20250923 07:36:05.108"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:36:05.108" endtime="20250923 07:36:05.108"/>
</kw>
<status status="FAIL" starttime="20250923 07:35:54.709" endtime="20250923 07:36:05.108"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-delete')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:36:05.108" endtime="20250923 07:36:05.108"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:05.108" endtime="20250923 07:36:05.108"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>DISMISS</arg>
<doc>Handles the current alert and returns its message.</doc>
<status status="NOT RUN" starttime="20250923 07:36:05.108" endtime="20250923 07:36:05.108"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:36:05.108" endtime="20250923 07:36:05.108"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency exists in the table</doc>
<status status="NOT RUN" starttime="20250923 07:36:05.108" endtime="20250923 07:36:05.108"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:36:05.109" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:36:05.108" endtime="20250923 07:36:05.112"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:06.112" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:36:05.112" endtime="20250923 07:36:06.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:36:06.112" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:36:06.112" endtime="20250923 07:36:06.113"/>
</kw>
<status status="PASS" starttime="20250923 07:36:05.108" endtime="20250923 07:36:06.113"/>
</kw>
<status status="PASS" starttime="20250923 07:36:05.108" endtime="20250923 07:36:06.113"/>
</kw>
<doc>Test canceling dependency deletion via confirmation dialog</doc>
<tag>cancel</tag>
<tag>confirmation</tag>
<tag>crud</tag>
<tag>delete</tag>
<status status="FAIL" starttime="20250923 07:35:50.652" endtime="20250923 07:36:06.113">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t10" name="TC022 - Cancel Add Dependency Operation" line="169">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:36:06.116" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:36:06.115" endtime="20250923 07:36:06.120"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:07.121" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:36:06.120" endtime="20250923 07:36:07.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:36:07.122" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:36:07.122" endtime="20250923 07:36:07.122"/>
</kw>
<status status="PASS" starttime="20250923 07:36:06.115" endtime="20250923 07:36:07.122"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:36:07.123" endtime="20250923 07:36:07.133"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:08.134" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:36:07.133" endtime="20250923 07:36:08.135"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:36:08.135" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:36:08.135" endtime="20250923 07:36:08.143"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:10.145" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:36:08.143" endtime="20250923 07:36:10.145"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:36:10.145" endtime="20250923 07:36:10.161"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:36:10.161" endtime="20250923 07:36:10.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:36:10.171" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:36:10.170" endtime="20250923 07:36:10.171"/>
</kw>
<status status="PASS" starttime="20250923 07:36:07.123" endtime="20250923 07:36:10.171"/>
</kw>
<status status="PASS" starttime="20250923 07:36:07.122" endtime="20250923 07:36:10.171"/>
</kw>
<status status="PASS" starttime="20250923 07:36:06.114" endtime="20250923 07:36:10.171"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:36:10.171" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:36:10.171" endtime="20250923 07:36:10.194"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:36:20.596" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-10.png"&gt;&lt;img src="selenium-screenshot-10.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:36:20.597" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:36:10.195" endtime="20250923 07:36:20.597"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>Cancelled Dependency</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:20.597" endtime="20250923 07:36:20.597"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>This should not be saved</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:20.597" endtime="20250923 07:36:20.597"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CANCEL_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:20.597" endtime="20250923 07:36:20.597"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:36:20.597" endtime="20250923 07:36:20.597"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>Cancelled Dependency</arg>
<doc>Verifies that a dependency does not exist in the table</doc>
<status status="NOT RUN" starttime="20250923 07:36:20.597" endtime="20250923 07:36:20.597"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:36:20.598" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:36:20.598" endtime="20250923 07:36:20.601"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:21.602" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:36:20.601" endtime="20250923 07:36:21.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:36:21.603" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:36:21.603" endtime="20250923 07:36:21.603"/>
</kw>
<status status="PASS" starttime="20250923 07:36:20.597" endtime="20250923 07:36:21.603"/>
</kw>
<status status="PASS" starttime="20250923 07:36:20.597" endtime="20250923 07:36:21.603"/>
</kw>
<doc>Test canceling the add dependency operation</doc>
<tag>cancel</tag>
<tag>crud</tag>
<tag>ui</tag>
<status status="FAIL" starttime="20250923 07:36:06.113" endtime="20250923 07:36:21.603">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t11" name="TC023 - Inline Edit Status Field" line="187">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:36:21.605" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:36:21.605" endtime="20250923 07:36:21.611"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:22.612" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:36:21.611" endtime="20250923 07:36:22.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:36:22.613" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:36:22.613" endtime="20250923 07:36:22.613"/>
</kw>
<status status="PASS" starttime="20250923 07:36:21.604" endtime="20250923 07:36:22.613"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:36:22.614" endtime="20250923 07:36:22.622"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:23.623" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:36:22.622" endtime="20250923 07:36:23.624"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:36:23.626" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:36:23.624" endtime="20250923 07:36:23.635"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:25.636" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:36:23.635" endtime="20250923 07:36:25.637"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:36:25.637" endtime="20250923 07:36:25.653"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:36:25.653" endtime="20250923 07:36:25.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:36:25.664" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:36:25.663" endtime="20250923 07:36:25.664"/>
</kw>
<status status="PASS" starttime="20250923 07:36:22.613" endtime="20250923 07:36:25.664"/>
</kw>
<status status="PASS" starttime="20250923 07:36:22.613" endtime="20250923 07:36:25.664"/>
</kw>
<status status="PASS" starttime="20250923 07:36:21.604" endtime="20250923 07:36:25.664"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>StatusEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:36:25.665" level="INFO">${timestamp} = 20250923_073625</msg>
<status status="PASS" starttime="20250923 07:36:25.665" endtime="20250923 07:36:25.665"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:36:25.665" level="INFO">${unique_name} = StatusEditTest_20250923_073625</msg>
<status status="PASS" starttime="20250923 07:36:25.665" endtime="20250923 07:36:25.665"/>
</kw>
<msg timestamp="20250923 07:36:25.665" level="INFO">${dep_name} = StatusEditTest_20250923_073625</msg>
<status status="PASS" starttime="20250923 07:36:25.665" endtime="20250923 07:36:25.665"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for status inline editing</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:36:25.666" level="INFO">${description} = Dependency for status inline editing</msg>
<status status="PASS" starttime="20250923 07:36:25.665" endtime="20250923 07:36:25.666"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:36:25.667" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:36:25.667" endtime="20250923 07:36:25.690"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:36:36.096" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-11.png"&gt;&lt;img src="selenium-screenshot-11.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:36:36.096" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:36:25.691" endtime="20250923 07:36:36.096"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.096" endtime="20250923 07:36:36.096"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.096" endtime="20250923 07:36:36.096"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.096" endtime="20250923 07:36:36.096"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.096" endtime="20250923 07:36:36.096"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.096" endtime="20250923 07:36:36.096"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.097" endtime="20250923 07:36:36.097"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.097" endtime="20250923 07:36:36.097"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.097" endtime="20250923 07:36:36.097"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.097" endtime="20250923 07:36:36.097"/>
</kw>
<status status="FAIL" starttime="20250923 07:36:25.666" endtime="20250923 07:36:36.097"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status_dropdown}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//select[contains(@class, 'status-dropdown')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.097" endtime="20250923 07:36:36.097"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${status_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.097" endtime="20250923 07:36:36.097"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${status_dropdown}</arg>
<arg>IN PROGRESS</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.097" endtime="20250923 07:36:36.097"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.097" endtime="20250923 07:36:36.097"/>
</kw>
<kw name="Get Selected List Label" library="SeleniumLibrary">
<var>${updated_status}</var>
<arg>${status_dropdown}</arg>
<doc>Returns the label of selected option from selection list ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.097" endtime="20250923 07:36:36.097"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${updated_status}</arg>
<arg>IN PROGRESS</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250923 07:36:36.097" endtime="20250923 07:36:36.097"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:36:36.098" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:36:36.098" endtime="20250923 07:36:36.101"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:37.104" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:36:36.102" endtime="20250923 07:36:37.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:36:37.105" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:36:37.105" endtime="20250923 07:36:37.105"/>
</kw>
<status status="PASS" starttime="20250923 07:36:36.098" endtime="20250923 07:36:37.105"/>
</kw>
<status status="PASS" starttime="20250923 07:36:36.097" endtime="20250923 07:36:37.105"/>
</kw>
<doc>Test inline editing of status field via dropdown</doc>
<tag>crud</tag>
<tag>inline_edit</tag>
<tag>status</tag>
<tag>update</tag>
<status status="FAIL" starttime="20250923 07:36:21.604" endtime="20250923 07:36:37.105">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t12" name="TC024 - Inline Edit Priority Field" line="206">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:36:37.108" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:36:37.107" endtime="20250923 07:36:37.112"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:38.113" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:36:37.112" endtime="20250923 07:36:38.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:36:38.114" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:36:38.114" endtime="20250923 07:36:38.114"/>
</kw>
<status status="PASS" starttime="20250923 07:36:37.107" endtime="20250923 07:36:38.114"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:36:38.115" endtime="20250923 07:36:38.124"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:39.124" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:36:38.124" endtime="20250923 07:36:39.125"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:36:39.125" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:36:39.125" endtime="20250923 07:36:39.134"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:41.136" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:36:39.134" endtime="20250923 07:36:41.136"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:36:41.137" endtime="20250923 07:36:41.147"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:36:41.147" endtime="20250923 07:36:41.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:36:41.158" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:36:41.158" endtime="20250923 07:36:41.158"/>
</kw>
<status status="PASS" starttime="20250923 07:36:38.115" endtime="20250923 07:36:41.158"/>
</kw>
<status status="PASS" starttime="20250923 07:36:38.115" endtime="20250923 07:36:41.158"/>
</kw>
<status status="PASS" starttime="20250923 07:36:37.107" endtime="20250923 07:36:41.158"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>PriorityEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:36:41.159" level="INFO">${timestamp} = 20250923_073641</msg>
<status status="PASS" starttime="20250923 07:36:41.159" endtime="20250923 07:36:41.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:36:41.159" level="INFO">${unique_name} = PriorityEditTest_20250923_073641</msg>
<status status="PASS" starttime="20250923 07:36:41.159" endtime="20250923 07:36:41.159"/>
</kw>
<msg timestamp="20250923 07:36:41.159" level="INFO">${dep_name} = PriorityEditTest_20250923_073641</msg>
<status status="PASS" starttime="20250923 07:36:41.158" endtime="20250923 07:36:41.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for priority inline editing</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:36:41.159" level="INFO">${description} = Dependency for priority inline editing</msg>
<status status="PASS" starttime="20250923 07:36:41.159" endtime="20250923 07:36:41.159"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>LOW</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:36:41.161" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:36:41.160" endtime="20250923 07:36:41.185"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:36:51.573" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-12.png"&gt;&lt;img src="selenium-screenshot-12.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:36:51.573" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:36:41.185" endtime="20250923 07:36:51.573"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.573" endtime="20250923 07:36:51.573"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.573" endtime="20250923 07:36:51.573"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.573" endtime="20250923 07:36:51.573"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.573" endtime="20250923 07:36:51.573"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.574" endtime="20250923 07:36:51.574"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.574" endtime="20250923 07:36:51.574"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.574" endtime="20250923 07:36:51.574"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.574" endtime="20250923 07:36:51.574"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.574" endtime="20250923 07:36:51.574"/>
</kw>
<status status="FAIL" starttime="20250923 07:36:41.159" endtime="20250923 07:36:51.574"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${priority_dropdown}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//select[contains(@class, 'priority-dropdown')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.574" endtime="20250923 07:36:51.574"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${priority_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.574" endtime="20250923 07:36:51.574"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${priority_dropdown}</arg>
<arg>HIGH</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.574" endtime="20250923 07:36:51.574"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.574" endtime="20250923 07:36:51.574"/>
</kw>
<kw name="Get Selected List Label" library="SeleniumLibrary">
<var>${updated_priority}</var>
<arg>${priority_dropdown}</arg>
<doc>Returns the label of selected option from selection list ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.574" endtime="20250923 07:36:51.574"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${updated_priority}</arg>
<arg>HIGH</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250923 07:36:51.574" endtime="20250923 07:36:51.574"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:36:51.575" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:36:51.575" endtime="20250923 07:36:51.578"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:52.579" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:36:51.578" endtime="20250923 07:36:52.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:36:52.580" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:36:52.579" endtime="20250923 07:36:52.580"/>
</kw>
<status status="PASS" starttime="20250923 07:36:51.575" endtime="20250923 07:36:52.580"/>
</kw>
<status status="PASS" starttime="20250923 07:36:51.574" endtime="20250923 07:36:52.580"/>
</kw>
<doc>Test inline editing of priority field via dropdown</doc>
<tag>crud</tag>
<tag>inline_edit</tag>
<tag>priority</tag>
<tag>update</tag>
<status status="FAIL" starttime="20250923 07:36:37.106" endtime="20250923 07:36:52.580">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t13" name="TC025 - RBAC Admin Can Edit Any Dependency" line="225">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:36:52.583" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:36:52.582" endtime="20250923 07:36:52.587"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:53.589" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:36:52.587" endtime="20250923 07:36:53.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:36:53.591" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:36:53.590" endtime="20250923 07:36:53.591"/>
</kw>
<status status="PASS" starttime="20250923 07:36:52.582" endtime="20250923 07:36:53.591"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:36:53.592" endtime="20250923 07:36:53.600"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:54.603" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:36:53.600" endtime="20250923 07:36:54.603"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:36:54.603" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:36:54.603" endtime="20250923 07:36:54.611"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:36:56.614" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:36:54.612" endtime="20250923 07:36:56.614"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:36:56.614" endtime="20250923 07:36:56.628"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:36:56.628" endtime="20250923 07:36:56.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:36:56.638" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:36:56.638" endtime="20250923 07:36:56.638"/>
</kw>
<status status="PASS" starttime="20250923 07:36:53.592" endtime="20250923 07:36:56.638"/>
</kw>
<status status="PASS" starttime="20250923 07:36:53.591" endtime="20250923 07:36:56.638"/>
</kw>
<status status="PASS" starttime="20250923 07:36:52.582" endtime="20250923 07:36:56.638"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>AdminEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:36:56.638" level="INFO">${timestamp} = 20250923_073656</msg>
<status status="PASS" starttime="20250923 07:36:56.638" endtime="20250923 07:36:56.638"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:36:56.639" level="INFO">${unique_name} = AdminEditTest_20250923_073656</msg>
<status status="PASS" starttime="20250923 07:36:56.638" endtime="20250923 07:36:56.639"/>
</kw>
<msg timestamp="20250923 07:36:56.639" level="INFO">${dep_name} = AdminEditTest_20250923_073656</msg>
<status status="PASS" starttime="20250923 07:36:56.638" endtime="20250923 07:36:56.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for admin RBAC test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:36:56.639" level="INFO">${description} = Dependency for admin RBAC test</msg>
<status status="PASS" starttime="20250923 07:36:56.639" endtime="20250923 07:36:56.639"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:36:56.640" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:36:56.640" endtime="20250923 07:36:56.663"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:37:07.037" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-13.png"&gt;&lt;img src="selenium-screenshot-13.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:37:07.038" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:36:56.664" endtime="20250923 07:37:07.038"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:37:07.038" endtime="20250923 07:37:07.038"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:37:07.038" endtime="20250923 07:37:07.038"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:37:07.038" endtime="20250923 07:37:07.038"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:37:07.039" endtime="20250923 07:37:07.039"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:37:07.039" endtime="20250923 07:37:07.039"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:37:07.039" endtime="20250923 07:37:07.039"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:37:07.039" endtime="20250923 07:37:07.039"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:37:07.039" endtime="20250923 07:37:07.039"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:37:07.039" endtime="20250923 07:37:07.039"/>
</kw>
<status status="FAIL" starttime="20250923 07:36:56.639" endtime="20250923 07:37:07.039"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${edit_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-edit')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:37:07.039" endtime="20250923 07:37:07.039"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:37:07.039" endtime="20250923 07:37:07.039"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_name}</var>
<arg>${dep_name}_AdminEdited</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:37:07.040" endtime="20250923 07:37:07.040"/>
</kw>
<kw name="Edit Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${new_name}</arg>
<doc>Edits an existing dependency</doc>
<status status="NOT RUN" starttime="20250923 07:37:07.040" endtime="20250923 07:37:07.040"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${new_name}</arg>
<doc>Verifies that a dependency exists in the table</doc>
<status status="NOT RUN" starttime="20250923 07:37:07.040" endtime="20250923 07:37:07.040"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:37:07.041" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:37:07.040" endtime="20250923 07:37:07.045"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:08.046" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:37:07.045" endtime="20250923 07:37:08.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:37:08.047" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:37:08.046" endtime="20250923 07:37:08.047"/>
</kw>
<status status="PASS" starttime="20250923 07:37:07.040" endtime="20250923 07:37:08.047"/>
</kw>
<status status="PASS" starttime="20250923 07:37:07.040" endtime="20250923 07:37:08.047"/>
</kw>
<doc>Test that admin users can edit any dependency</doc>
<tag>admin</tag>
<tag>crud</tag>
<tag>edit</tag>
<tag>rbac</tag>
<status status="FAIL" starttime="20250923 07:36:52.581" endtime="20250923 07:37:08.047">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t14" name="TC026 - RBAC Admin Can Delete Any Dependency" line="243">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:37:08.050" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:37:08.050" endtime="20250923 07:37:08.054"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:09.056" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:37:08.055" endtime="20250923 07:37:09.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:37:09.057" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:37:09.057" endtime="20250923 07:37:09.057"/>
</kw>
<status status="PASS" starttime="20250923 07:37:08.049" endtime="20250923 07:37:09.057"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:37:09.058" endtime="20250923 07:37:09.067"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:10.067" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:37:09.067" endtime="20250923 07:37:10.067"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:37:10.068" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:37:10.068" endtime="20250923 07:37:10.078"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:12.079" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:37:10.078" endtime="20250923 07:37:12.079"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:37:12.079" endtime="20250923 07:37:12.090"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:37:12.090" endtime="20250923 07:37:12.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:37:12.101" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:37:12.101" endtime="20250923 07:37:12.101"/>
</kw>
<status status="PASS" starttime="20250923 07:37:09.058" endtime="20250923 07:37:12.101"/>
</kw>
<status status="PASS" starttime="20250923 07:37:09.057" endtime="20250923 07:37:12.101"/>
</kw>
<status status="PASS" starttime="20250923 07:37:08.049" endtime="20250923 07:37:12.101"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>AdminDeleteTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:37:12.102" level="INFO">${timestamp} = 20250923_073712</msg>
<status status="PASS" starttime="20250923 07:37:12.102" endtime="20250923 07:37:12.102"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:37:12.102" level="INFO">${unique_name} = AdminDeleteTest_20250923_073712</msg>
<status status="PASS" starttime="20250923 07:37:12.102" endtime="20250923 07:37:12.102"/>
</kw>
<msg timestamp="20250923 07:37:12.102" level="INFO">${dep_name} = AdminDeleteTest_20250923_073712</msg>
<status status="PASS" starttime="20250923 07:37:12.101" endtime="20250923 07:37:12.102"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for admin delete RBAC test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:37:12.102" level="INFO">${description} = Dependency for admin delete RBAC test</msg>
<status status="PASS" starttime="20250923 07:37:12.102" endtime="20250923 07:37:12.102"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:37:12.103" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:37:12.103" endtime="20250923 07:37:12.125"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:37:22.573" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-14.png"&gt;&lt;img src="selenium-screenshot-14.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:37:22.576" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:37:12.125" endtime="20250923 07:37:22.576"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:37:22.578" endtime="20250923 07:37:22.578"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:37:22.578" endtime="20250923 07:37:22.578"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:37:22.578" endtime="20250923 07:37:22.578"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:37:22.578" endtime="20250923 07:37:22.578"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:37:22.578" endtime="20250923 07:37:22.578"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:37:22.579" endtime="20250923 07:37:22.579"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:37:22.579" endtime="20250923 07:37:22.579"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:37:22.579" endtime="20250923 07:37:22.579"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:37:22.579" endtime="20250923 07:37:22.579"/>
</kw>
<status status="FAIL" starttime="20250923 07:37:12.102" endtime="20250923 07:37:22.579"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-delete')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:37:22.579" endtime="20250923 07:37:22.579"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:37:22.580" endtime="20250923 07:37:22.580"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with confirmation dialog handling</doc>
<status status="NOT RUN" starttime="20250923 07:37:22.580" endtime="20250923 07:37:22.580"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the table</doc>
<status status="NOT RUN" starttime="20250923 07:37:22.580" endtime="20250923 07:37:22.580"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:37:22.586" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:37:22.585" endtime="20250923 07:37:22.634"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:23.640" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:37:22.635" endtime="20250923 07:37:23.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:37:23.643" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:37:23.642" endtime="20250923 07:37:23.643"/>
</kw>
<status status="PASS" starttime="20250923 07:37:22.581" endtime="20250923 07:37:23.643"/>
</kw>
<status status="PASS" starttime="20250923 07:37:22.580" endtime="20250923 07:37:23.643"/>
</kw>
<doc>Test that admin users can delete any dependency</doc>
<tag>admin</tag>
<tag>crud</tag>
<tag>delete</tag>
<tag>rbac</tag>
<status status="FAIL" starttime="20250923 07:37:08.048" endtime="20250923 07:37:23.643">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t15" name="TC027 - RBAC User Can Only Edit Own Dependencies" line="260">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:37:23.646" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:37:23.645" endtime="20250923 07:37:23.653"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:24.654" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:37:23.653" endtime="20250923 07:37:24.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:37:24.655" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:37:24.655" endtime="20250923 07:37:24.655"/>
</kw>
<status status="PASS" starttime="20250923 07:37:23.645" endtime="20250923 07:37:24.655"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:37:24.656" endtime="20250923 07:37:24.666"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:25.668" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:37:24.666" endtime="20250923 07:37:25.668"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:37:25.669" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:37:25.668" endtime="20250923 07:37:25.683"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:27.684" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:37:25.684" endtime="20250923 07:37:27.684"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:37:27.684" endtime="20250923 07:37:27.699"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:37:27.699" endtime="20250923 07:37:27.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:37:27.708" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:37:27.708" endtime="20250923 07:37:27.708"/>
</kw>
<status status="PASS" starttime="20250923 07:37:24.656" endtime="20250923 07:37:27.709"/>
</kw>
<status status="PASS" starttime="20250923 07:37:24.655" endtime="20250923 07:37:27.709"/>
</kw>
<status status="PASS" starttime="20250923 07:37:23.645" endtime="20250923 07:37:27.709"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:37:27.709" endtime="20250923 07:37:27.720"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:37:27.720" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-logout')]'.</msg>
<status status="PASS" starttime="20250923 07:37:27.720" endtime="20250923 07:37:27.801"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<msg timestamp="20250923 07:37:38.061" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-15.png"&gt;&lt;img src="selenium-screenshot-15.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:37:38.061" level="FAIL">Element 'id:userPanel' still visible after 10 seconds.</msg>
<status status="FAIL" starttime="20250923 07:37:27.801" endtime="20250923 07:37:38.061"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20250923 07:37:38.061" endtime="20250923 07:37:38.061"/>
</kw>
<status status="FAIL" starttime="20250923 07:37:27.709" endtime="20250923 07:37:38.061"/>
</kw>
<kw name="Login To DepFlow" library="depflow_keywords">
<arg>${USER_USERNAME}</arg>
<arg>${USER_PASSWORD}</arg>
<doc>Logs into DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 07:37:38.061" endtime="20250923 07:37:38.061"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 07:37:38.061" endtime="20250923 07:37:38.061"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>UserEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<status status="NOT RUN" starttime="20250923 07:37:38.062" endtime="20250923 07:37:38.062"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency created by regular user</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:37:38.062" endtime="20250923 07:37:38.062"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<status status="NOT RUN" starttime="20250923 07:37:38.062" endtime="20250923 07:37:38.062"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${edit_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-edit')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:37:38.062" endtime="20250923 07:37:38.062"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:37:38.062" endtime="20250923 07:37:38.062"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 07:37:38.062" endtime="20250923 07:37:38.062"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<status status="NOT RUN" starttime="20250923 07:37:38.062" endtime="20250923 07:37:38.062"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 07:37:38.062" endtime="20250923 07:37:38.062"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:37:38.063" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:37:38.062" endtime="20250923 07:37:38.066"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:39.066" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:37:38.066" endtime="20250923 07:37:39.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:37:39.067" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:37:39.066" endtime="20250923 07:37:39.067"/>
</kw>
<status status="PASS" starttime="20250923 07:37:38.062" endtime="20250923 07:37:39.067"/>
</kw>
<status status="PASS" starttime="20250923 07:37:38.062" endtime="20250923 07:37:39.067"/>
</kw>
<doc>Test that regular users can only edit dependencies they created</doc>
<tag>crud</tag>
<tag>edit</tag>
<tag>rbac</tag>
<tag>restriction</tag>
<tag>user</tag>
<status status="FAIL" starttime="20250923 07:37:23.644" endtime="20250923 07:37:39.067">Element 'id:userPanel' still visible after 10 seconds.</status>
</test>
<test id="s1-t16" name="TC028 - RBAC User Can Only Delete Own Dependencies" line="283">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:37:39.069" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:37:39.068" endtime="20250923 07:37:39.072"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:40.073" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:37:39.072" endtime="20250923 07:37:40.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:37:40.074" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:37:40.074" endtime="20250923 07:37:40.074"/>
</kw>
<status status="PASS" starttime="20250923 07:37:39.068" endtime="20250923 07:37:40.075"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:37:40.075" endtime="20250923 07:37:40.083"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:41.084" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:37:40.083" endtime="20250923 07:37:41.084"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:37:41.085" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:37:41.084" endtime="20250923 07:37:41.095"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:43.096" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:37:41.095" endtime="20250923 07:37:43.096"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:37:43.097" endtime="20250923 07:37:43.112"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:37:43.112" endtime="20250923 07:37:43.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:37:43.123" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:37:43.122" endtime="20250923 07:37:43.123"/>
</kw>
<status status="PASS" starttime="20250923 07:37:40.075" endtime="20250923 07:37:43.123"/>
</kw>
<status status="PASS" starttime="20250923 07:37:40.075" endtime="20250923 07:37:43.123"/>
</kw>
<status status="PASS" starttime="20250923 07:37:39.068" endtime="20250923 07:37:43.123"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:37:43.123" endtime="20250923 07:37:43.133"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:37:43.134" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-logout')]'.</msg>
<status status="PASS" starttime="20250923 07:37:43.134" endtime="20250923 07:37:43.163"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<msg timestamp="20250923 07:37:53.438" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-16.png"&gt;&lt;img src="selenium-screenshot-16.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:37:53.438" level="FAIL">Element 'id:userPanel' still visible after 10 seconds.</msg>
<status status="FAIL" starttime="20250923 07:37:43.163" endtime="20250923 07:37:53.438"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20250923 07:37:53.439" endtime="20250923 07:37:53.439"/>
</kw>
<status status="FAIL" starttime="20250923 07:37:43.123" endtime="20250923 07:37:53.439"/>
</kw>
<kw name="Login To DepFlow" library="depflow_keywords">
<arg>${USER_USERNAME}</arg>
<arg>${USER_PASSWORD}</arg>
<doc>Logs into DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 07:37:53.439" endtime="20250923 07:37:53.439"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 07:37:53.439" endtime="20250923 07:37:53.439"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>UserDeleteTest</arg>
<doc>Generates unique test data for test runs</doc>
<status status="NOT RUN" starttime="20250923 07:37:53.439" endtime="20250923 07:37:53.439"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for user delete RBAC test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:37:53.439" endtime="20250923 07:37:53.439"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<status status="NOT RUN" starttime="20250923 07:37:53.439" endtime="20250923 07:37:53.439"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-delete')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:37:53.439" endtime="20250923 07:37:53.439"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:37:53.440" endtime="20250923 07:37:53.440"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with confirmation dialog handling</doc>
<status status="NOT RUN" starttime="20250923 07:37:53.440" endtime="20250923 07:37:53.440"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the table</doc>
<status status="NOT RUN" starttime="20250923 07:37:53.440" endtime="20250923 07:37:53.440"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 07:37:53.440" endtime="20250923 07:37:53.440"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<status status="NOT RUN" starttime="20250923 07:37:53.440" endtime="20250923 07:37:53.440"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 07:37:53.440" endtime="20250923 07:37:53.440"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:37:53.441" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:37:53.440" endtime="20250923 07:37:53.444"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:54.445" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:37:53.444" endtime="20250923 07:37:54.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:37:54.445" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:37:54.445" endtime="20250923 07:37:54.445"/>
</kw>
<status status="PASS" starttime="20250923 07:37:53.440" endtime="20250923 07:37:54.445"/>
</kw>
<status status="PASS" starttime="20250923 07:37:53.440" endtime="20250923 07:37:54.445"/>
</kw>
<doc>Test that regular users can only delete dependencies they created</doc>
<tag>crud</tag>
<tag>delete</tag>
<tag>rbac</tag>
<tag>restriction</tag>
<tag>user</tag>
<status status="FAIL" starttime="20250923 07:37:39.067" endtime="20250923 07:37:54.445">Element 'id:userPanel' still visible after 10 seconds.</status>
</test>
<test id="s1-t17" name="TC029 - Status Badge Color Verification" line="310">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:37:54.446" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:37:54.446" endtime="20250923 07:37:54.449"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:55.450" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:37:54.449" endtime="20250923 07:37:55.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:37:55.451" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:37:55.450" endtime="20250923 07:37:55.451"/>
</kw>
<status status="PASS" starttime="20250923 07:37:54.446" endtime="20250923 07:37:55.451"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:37:55.451" endtime="20250923 07:37:55.455"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:56.457" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:37:55.455" endtime="20250923 07:37:56.457"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:37:56.458" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:37:56.458" endtime="20250923 07:37:56.467"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:37:58.469" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:37:56.468" endtime="20250923 07:37:58.469"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:37:58.470" endtime="20250923 07:37:58.484"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:37:58.485" endtime="20250923 07:37:58.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:37:58.494" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:37:58.494" endtime="20250923 07:37:58.494"/>
</kw>
<status status="PASS" starttime="20250923 07:37:55.451" endtime="20250923 07:37:58.494"/>
</kw>
<status status="PASS" starttime="20250923 07:37:55.451" endtime="20250923 07:37:58.494"/>
</kw>
<status status="PASS" starttime="20250923 07:37:54.446" endtime="20250923 07:37:58.494"/>
</kw>
<for flavor="IN">
<var>${status}</var>
<value>@{STATUSES}</value>
<iter>
<var name="${status}">NOT STARTED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>StatusColor_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:37:58.496" level="INFO">${timestamp} = 20250923_073758</msg>
<status status="PASS" starttime="20250923 07:37:58.496" endtime="20250923 07:37:58.496"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:37:58.496" level="INFO">${unique_name} = StatusColor_NOT_STARTED_20250923_073758</msg>
<status status="PASS" starttime="20250923 07:37:58.496" endtime="20250923 07:37:58.496"/>
</kw>
<msg timestamp="20250923 07:37:58.496" level="INFO">${dep_name} = StatusColor_NOT_STARTED_20250923_073758</msg>
<status status="PASS" starttime="20250923 07:37:58.495" endtime="20250923 07:37:58.496"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Testing ${status} status color</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:37:58.496" level="INFO">${description} = Testing NOT STARTED status color</msg>
<status status="PASS" starttime="20250923 07:37:58.496" endtime="20250923 07:37:58.496"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:37:58.498" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:37:58.497" endtime="20250923 07:37:58.523"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:38:08.941" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-17.png"&gt;&lt;img src="selenium-screenshot-17.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:38:08.941" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:37:58.523" endtime="20250923 07:38:08.941"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:08.942" endtime="20250923 07:38:08.942"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:08.942" endtime="20250923 07:38:08.942"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:08.942" endtime="20250923 07:38:08.942"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:08.942" endtime="20250923 07:38:08.942"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:08.942" endtime="20250923 07:38:08.942"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:38:08.942" endtime="20250923 07:38:08.942"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:08.942" endtime="20250923 07:38:08.942"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:38:08.942" endtime="20250923 07:38:08.942"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:38:08.942" endtime="20250923 07:38:08.942"/>
</kw>
<status status="FAIL" starttime="20250923 07:37:58.496" endtime="20250923 07:38:08.942"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status_badge}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//span[contains(@class, 'status-badge')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:38:08.942" endtime="20250923 07:38:08.942"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${status_badge}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:38:08.942" endtime="20250923 07:38:08.942"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with confirmation dialog handling</doc>
<status status="NOT RUN" starttime="20250923 07:38:08.942" endtime="20250923 07:38:08.942"/>
</kw>
<status status="FAIL" starttime="20250923 07:37:58.495" endtime="20250923 07:38:08.942"/>
</iter>
<status status="FAIL" starttime="20250923 07:37:58.494" endtime="20250923 07:38:08.942"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:38:08.943" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:38:08.943" endtime="20250923 07:38:08.946"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:09.947" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:38:08.946" endtime="20250923 07:38:09.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:38:09.948" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:38:09.948" endtime="20250923 07:38:09.948"/>
</kw>
<status status="PASS" starttime="20250923 07:38:08.943" endtime="20250923 07:38:09.948"/>
</kw>
<status status="PASS" starttime="20250923 07:38:08.942" endtime="20250923 07:38:09.948"/>
</kw>
<doc>Test that status badges display with correct colors</doc>
<tag>colors</tag>
<tag>crud</tag>
<tag>status</tag>
<tag>ui</tag>
<status status="FAIL" starttime="20250923 07:37:54.445" endtime="20250923 07:38:09.948">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t18" name="TC030 - Priority Badge Color Verification" line="327">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:38:09.951" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:38:09.950" endtime="20250923 07:38:09.955"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:10.958" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:38:09.955" endtime="20250923 07:38:10.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:38:10.959" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:38:10.958" endtime="20250923 07:38:10.959"/>
</kw>
<status status="PASS" starttime="20250923 07:38:09.950" endtime="20250923 07:38:10.959"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:38:10.960" endtime="20250923 07:38:10.968"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:11.969" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:38:10.968" endtime="20250923 07:38:11.969"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:38:11.969" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:38:11.969" endtime="20250923 07:38:11.975"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:13.977" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:38:11.976" endtime="20250923 07:38:13.978"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:38:13.978" endtime="20250923 07:38:13.992"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:38:13.992" endtime="20250923 07:38:14.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:38:14.002" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:38:14.001" endtime="20250923 07:38:14.002"/>
</kw>
<status status="PASS" starttime="20250923 07:38:10.959" endtime="20250923 07:38:14.002"/>
</kw>
<status status="PASS" starttime="20250923 07:38:10.959" endtime="20250923 07:38:14.002"/>
</kw>
<status status="PASS" starttime="20250923 07:38:09.950" endtime="20250923 07:38:14.002"/>
</kw>
<for flavor="IN">
<var>${priority}</var>
<value>@{PRIORITIES}</value>
<iter>
<var name="${priority}">HIGH</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>PriorityColor_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:38:14.002" level="INFO">${timestamp} = 20250923_073814</msg>
<status status="PASS" starttime="20250923 07:38:14.002" endtime="20250923 07:38:14.002"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:38:14.003" level="INFO">${unique_name} = PriorityColor_HIGH_20250923_073814</msg>
<status status="PASS" starttime="20250923 07:38:14.002" endtime="20250923 07:38:14.003"/>
</kw>
<msg timestamp="20250923 07:38:14.003" level="INFO">${dep_name} = PriorityColor_HIGH_20250923_073814</msg>
<status status="PASS" starttime="20250923 07:38:14.002" endtime="20250923 07:38:14.003"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Testing ${priority} priority color</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:38:14.003" level="INFO">${description} = Testing HIGH priority color</msg>
<status status="PASS" starttime="20250923 07:38:14.003" endtime="20250923 07:38:14.003"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:38:14.004" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:38:14.004" endtime="20250923 07:38:14.029"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:38:24.463" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-18.png"&gt;&lt;img src="selenium-screenshot-18.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:38:24.463" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:38:14.029" endtime="20250923 07:38:24.463"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:24.463" endtime="20250923 07:38:24.463"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:24.464" endtime="20250923 07:38:24.464"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:24.464" endtime="20250923 07:38:24.464"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:24.464" endtime="20250923 07:38:24.464"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:24.464" endtime="20250923 07:38:24.464"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:38:24.464" endtime="20250923 07:38:24.464"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:24.464" endtime="20250923 07:38:24.464"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:38:24.464" endtime="20250923 07:38:24.464"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:38:24.464" endtime="20250923 07:38:24.464"/>
</kw>
<status status="FAIL" starttime="20250923 07:38:14.003" endtime="20250923 07:38:24.464"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${priority_badge}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//span[contains(@class, 'priority-badge')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:38:24.464" endtime="20250923 07:38:24.464"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${priority_badge}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:38:24.464" endtime="20250923 07:38:24.464"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with confirmation dialog handling</doc>
<status status="NOT RUN" starttime="20250923 07:38:24.464" endtime="20250923 07:38:24.464"/>
</kw>
<status status="FAIL" starttime="20250923 07:38:14.002" endtime="20250923 07:38:24.464"/>
</iter>
<status status="FAIL" starttime="20250923 07:38:14.002" endtime="20250923 07:38:24.464"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:38:24.465" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:38:24.465" endtime="20250923 07:38:24.470"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:25.473" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:38:24.470" endtime="20250923 07:38:25.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:38:25.476" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:38:25.474" endtime="20250923 07:38:25.476"/>
</kw>
<status status="PASS" starttime="20250923 07:38:24.465" endtime="20250923 07:38:25.476"/>
</kw>
<status status="PASS" starttime="20250923 07:38:24.464" endtime="20250923 07:38:25.476"/>
</kw>
<doc>Test that priority badges display with correct colors</doc>
<tag>colors</tag>
<tag>crud</tag>
<tag>priority</tag>
<tag>ui</tag>
<status status="FAIL" starttime="20250923 07:38:09.949" endtime="20250923 07:38:25.476">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t19" name="TC022 - Add Dependency With All Teams" line="344">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:38:25.481" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:38:25.481" endtime="20250923 07:38:25.502"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:26.504" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:38:25.502" endtime="20250923 07:38:26.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:38:26.505" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:38:26.504" endtime="20250923 07:38:26.505"/>
</kw>
<status status="PASS" starttime="20250923 07:38:25.481" endtime="20250923 07:38:26.505"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:38:26.506" endtime="20250923 07:38:26.515"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:27.516" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:38:26.515" endtime="20250923 07:38:27.516"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:38:27.517" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:38:27.517" endtime="20250923 07:38:27.525"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:29.525" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:38:27.525" endtime="20250923 07:38:29.525"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:38:29.525" endtime="20250923 07:38:29.539"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:38:29.539" endtime="20250923 07:38:29.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:38:29.546" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:38:29.546" endtime="20250923 07:38:29.546"/>
</kw>
<status status="PASS" starttime="20250923 07:38:26.506" endtime="20250923 07:38:29.546"/>
</kw>
<status status="PASS" starttime="20250923 07:38:26.505" endtime="20250923 07:38:29.546"/>
</kw>
<status status="PASS" starttime="20250923 07:38:25.480" endtime="20250923 07:38:29.546"/>
</kw>
<for flavor="IN">
<var>${team}</var>
<value>@{TEAMS}</value>
<iter>
<var name="${team}">Quality flow</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:38:29.548" level="INFO">${timestamp} = 20250923_073829</msg>
<status status="PASS" starttime="20250923 07:38:29.547" endtime="20250923 07:38:29.548"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:38:29.548" level="INFO">${unique_name} = Team_Quality_flow_20250923_073829</msg>
<status status="PASS" starttime="20250923 07:38:29.548" endtime="20250923 07:38:29.548"/>
</kw>
<msg timestamp="20250923 07:38:29.548" level="INFO">${unique_name} = Team_Quality_flow_20250923_073829</msg>
<status status="PASS" starttime="20250923 07:38:29.547" endtime="20250923 07:38:29.548"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:38:29.548" level="INFO">${description} = Test dependency for Quality flow team</msg>
<status status="PASS" starttime="20250923 07:38:29.548" endtime="20250923 07:38:29.548"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:38:29.549" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:38:29.549" endtime="20250923 07:38:29.573"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:38:39.970" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-19.png"&gt;&lt;img src="selenium-screenshot-19.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:38:39.970" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:38:29.573" endtime="20250923 07:38:39.971"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:39.971" endtime="20250923 07:38:39.971"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:39.971" endtime="20250923 07:38:39.971"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:39.971" endtime="20250923 07:38:39.971"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:39.971" endtime="20250923 07:38:39.971"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:39.971" endtime="20250923 07:38:39.971"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:38:39.971" endtime="20250923 07:38:39.971"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:39.971" endtime="20250923 07:38:39.971"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:38:39.971" endtime="20250923 07:38:39.971"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:38:39.971" endtime="20250923 07:38:39.971"/>
</kw>
<status status="FAIL" starttime="20250923 07:38:29.548" endtime="20250923 07:38:39.971"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the table</doc>
<status status="NOT RUN" starttime="20250923 07:38:39.971" endtime="20250923 07:38:39.971"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:38:39.971" endtime="20250923 07:38:39.971"/>
</kw>
<status status="FAIL" starttime="20250923 07:38:29.546" endtime="20250923 07:38:39.971"/>
</iter>
<status status="FAIL" starttime="20250923 07:38:29.546" endtime="20250923 07:38:39.971"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:38:39.972" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:38:39.972" endtime="20250923 07:38:39.976"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:40.976" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:38:39.976" endtime="20250923 07:38:40.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:38:40.977" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:38:40.977" endtime="20250923 07:38:40.977"/>
</kw>
<status status="PASS" starttime="20250923 07:38:39.972" endtime="20250923 07:38:40.977"/>
</kw>
<status status="PASS" starttime="20250923 07:38:39.971" endtime="20250923 07:38:40.977"/>
</kw>
<doc>Test creating dependencies for all available teams</doc>
<tag>comprehensive</tag>
<tag>crud</tag>
<tag>teams</tag>
<status status="FAIL" starttime="20250923 07:38:25.479" endtime="20250923 07:38:40.977">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t20" name="TC023 - Add Dependency With All Status Options" line="357">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:38:40.979" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:38:40.978" endtime="20250923 07:38:40.983"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:41.985" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:38:40.984" endtime="20250923 07:38:41.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:38:41.985" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:38:41.985" endtime="20250923 07:38:41.985"/>
</kw>
<status status="PASS" starttime="20250923 07:38:40.978" endtime="20250923 07:38:41.985"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:38:41.986" endtime="20250923 07:38:41.993"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:42.994" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:38:41.993" endtime="20250923 07:38:42.994"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:38:42.995" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:38:42.995" endtime="20250923 07:38:43.005"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:45.009" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:38:43.006" endtime="20250923 07:38:45.009"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:38:45.009" endtime="20250923 07:38:45.022"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:38:45.022" endtime="20250923 07:38:45.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:38:45.033" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:38:45.032" endtime="20250923 07:38:45.033"/>
</kw>
<status status="PASS" starttime="20250923 07:38:41.986" endtime="20250923 07:38:45.033"/>
</kw>
<status status="PASS" starttime="20250923 07:38:41.985" endtime="20250923 07:38:45.033"/>
</kw>
<status status="PASS" starttime="20250923 07:38:40.978" endtime="20250923 07:38:45.033"/>
</kw>
<for flavor="IN">
<var>${status}</var>
<value>@{STATUSES}</value>
<iter>
<var name="${status}">NOT STARTED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Status_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:38:45.034" level="INFO">${timestamp} = 20250923_073845</msg>
<status status="PASS" starttime="20250923 07:38:45.034" endtime="20250923 07:38:45.034"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:38:45.034" level="INFO">${unique_name} = Status_NOT_STARTED_20250923_073845</msg>
<status status="PASS" starttime="20250923 07:38:45.034" endtime="20250923 07:38:45.034"/>
</kw>
<msg timestamp="20250923 07:38:45.034" level="INFO">${unique_name} = Status_NOT_STARTED_20250923_073845</msg>
<status status="PASS" starttime="20250923 07:38:45.033" endtime="20250923 07:38:45.034"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${status} status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:38:45.034" level="INFO">${description} = Test dependency with NOT STARTED status</msg>
<status status="PASS" starttime="20250923 07:38:45.034" endtime="20250923 07:38:45.034"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:38:45.036" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:38:45.035" endtime="20250923 07:38:45.059"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:38:55.451" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-20.png"&gt;&lt;img src="selenium-screenshot-20.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:38:55.451" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:38:45.059" endtime="20250923 07:38:55.451"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:55.451" endtime="20250923 07:38:55.451"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:55.451" endtime="20250923 07:38:55.451"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:55.451" endtime="20250923 07:38:55.451"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:55.451" endtime="20250923 07:38:55.451"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:55.451" endtime="20250923 07:38:55.451"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:38:55.451" endtime="20250923 07:38:55.451"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:38:55.451" endtime="20250923 07:38:55.451"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:38:55.451" endtime="20250923 07:38:55.451"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:38:55.451" endtime="20250923 07:38:55.451"/>
</kw>
<status status="FAIL" starttime="20250923 07:38:45.035" endtime="20250923 07:38:55.451"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the table</doc>
<status status="NOT RUN" starttime="20250923 07:38:55.451" endtime="20250923 07:38:55.452"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:38:55.452" endtime="20250923 07:38:55.452"/>
</kw>
<status status="FAIL" starttime="20250923 07:38:45.033" endtime="20250923 07:38:55.452"/>
</iter>
<status status="FAIL" starttime="20250923 07:38:45.033" endtime="20250923 07:38:55.452"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:38:55.452" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:38:55.452" endtime="20250923 07:38:55.456"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:56.459" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:38:55.456" endtime="20250923 07:38:56.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:38:56.460" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:38:56.459" endtime="20250923 07:38:56.460"/>
</kw>
<status status="PASS" starttime="20250923 07:38:55.452" endtime="20250923 07:38:56.460"/>
</kw>
<status status="PASS" starttime="20250923 07:38:55.452" endtime="20250923 07:38:56.460"/>
</kw>
<doc>Test creating dependencies with all available statuses</doc>
<tag>comprehensive</tag>
<tag>crud</tag>
<tag>status</tag>
<status status="FAIL" starttime="20250923 07:38:40.978" endtime="20250923 07:38:56.460">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t21" name="TC024 - Add Dependency With All Priority Levels" line="370">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:38:56.461" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:38:56.460" endtime="20250923 07:38:56.463"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:57.465" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:38:56.463" endtime="20250923 07:38:57.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:38:57.466" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:38:57.465" endtime="20250923 07:38:57.466"/>
</kw>
<status status="PASS" starttime="20250923 07:38:56.460" endtime="20250923 07:38:57.466"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:38:57.466" endtime="20250923 07:38:57.474"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:38:58.475" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:38:57.474" endtime="20250923 07:38:58.475"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:38:58.475" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:38:58.475" endtime="20250923 07:38:58.485"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:00.488" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:38:58.485" endtime="20250923 07:39:00.488"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:39:00.488" endtime="20250923 07:39:00.503"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:39:00.503" endtime="20250923 07:39:00.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:39:00.513" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:39:00.513" endtime="20250923 07:39:00.513"/>
</kw>
<status status="PASS" starttime="20250923 07:38:57.466" endtime="20250923 07:39:00.513"/>
</kw>
<status status="PASS" starttime="20250923 07:38:57.466" endtime="20250923 07:39:00.513"/>
</kw>
<status status="PASS" starttime="20250923 07:38:56.460" endtime="20250923 07:39:00.513"/>
</kw>
<for flavor="IN">
<var>${priority}</var>
<value>@{PRIORITIES}</value>
<iter>
<var name="${priority}">HIGH</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Priority_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:39:00.514" level="INFO">${timestamp} = 20250923_073900</msg>
<status status="PASS" starttime="20250923 07:39:00.514" endtime="20250923 07:39:00.514"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:39:00.514" level="INFO">${unique_name} = Priority_HIGH_20250923_073900</msg>
<status status="PASS" starttime="20250923 07:39:00.514" endtime="20250923 07:39:00.514"/>
</kw>
<msg timestamp="20250923 07:39:00.514" level="INFO">${unique_name} = Priority_HIGH_20250923_073900</msg>
<status status="PASS" starttime="20250923 07:39:00.514" endtime="20250923 07:39:00.514"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${priority} priority</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:39:00.515" level="INFO">${description} = Test dependency with HIGH priority</msg>
<status status="PASS" starttime="20250923 07:39:00.514" endtime="20250923 07:39:00.515"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:39:00.517" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:39:00.516" endtime="20250923 07:39:00.539"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:39:10.935" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-21.png"&gt;&lt;img src="selenium-screenshot-21.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:39:10.935" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:39:00.539" endtime="20250923 07:39:10.935"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:10.935" endtime="20250923 07:39:10.935"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:10.935" endtime="20250923 07:39:10.935"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:10.935" endtime="20250923 07:39:10.935"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:10.935" endtime="20250923 07:39:10.935"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:10.935" endtime="20250923 07:39:10.935"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:39:10.935" endtime="20250923 07:39:10.935"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:10.935" endtime="20250923 07:39:10.935"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:39:10.935" endtime="20250923 07:39:10.935"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:39:10.935" endtime="20250923 07:39:10.935"/>
</kw>
<status status="FAIL" starttime="20250923 07:39:00.515" endtime="20250923 07:39:10.935"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the table</doc>
<status status="NOT RUN" starttime="20250923 07:39:10.935" endtime="20250923 07:39:10.935"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:39:10.935" endtime="20250923 07:39:10.935"/>
</kw>
<status status="FAIL" starttime="20250923 07:39:00.513" endtime="20250923 07:39:10.936"/>
</iter>
<status status="FAIL" starttime="20250923 07:39:00.513" endtime="20250923 07:39:10.936"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:39:10.936" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:39:10.936" endtime="20250923 07:39:10.940"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:11.941" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:39:10.940" endtime="20250923 07:39:11.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:39:11.942" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:39:11.942" endtime="20250923 07:39:11.942"/>
</kw>
<status status="PASS" starttime="20250923 07:39:10.936" endtime="20250923 07:39:11.942"/>
</kw>
<status status="PASS" starttime="20250923 07:39:10.936" endtime="20250923 07:39:11.942"/>
</kw>
<doc>Test creating dependencies with all priority levels</doc>
<tag>comprehensive</tag>
<tag>crud</tag>
<tag>priority</tag>
<status status="FAIL" starttime="20250923 07:38:56.460" endtime="20250923 07:39:11.942">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t22" name="TC025 - Verify Counter Updates After CRUD Operations" line="383">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:39:11.944" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:39:11.944" endtime="20250923 07:39:11.948"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:12.949" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:39:11.948" endtime="20250923 07:39:12.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:39:12.950" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:39:12.950" endtime="20250923 07:39:12.950"/>
</kw>
<status status="PASS" starttime="20250923 07:39:11.944" endtime="20250923 07:39:12.950"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:39:12.951" endtime="20250923 07:39:12.959"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:13.961" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:39:12.959" endtime="20250923 07:39:13.961"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:39:13.962" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:39:13.961" endtime="20250923 07:39:13.971"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:15.974" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:39:13.972" endtime="20250923 07:39:15.974"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:39:15.975" endtime="20250923 07:39:15.989"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:39:15.989" endtime="20250923 07:39:16.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:39:16.000" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:39:16.000" endtime="20250923 07:39:16.000"/>
</kw>
<status status="PASS" starttime="20250923 07:39:12.951" endtime="20250923 07:39:16.000"/>
</kw>
<status status="PASS" starttime="20250923 07:39:12.951" endtime="20250923 07:39:16.000"/>
</kw>
<status status="PASS" starttime="20250923 07:39:11.943" endtime="20250923 07:39:16.000"/>
</kw>
<kw name="Get Counter Value" library="depflow_keywords">
<var>${initial_count}</var>
<arg>${TOTAL_COUNT}</arg>
<doc>Gets the numeric value from a counter element</doc>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${counter_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:39:16.016" level="INFO">${text} = 5</msg>
<status status="PASS" starttime="20250923 07:39:16.000" endtime="20250923 07:39:16.016"/>
</kw>
<msg timestamp="20250923 07:39:16.016" level="INFO">${initial_count} = 5</msg>
<status status="PASS" starttime="20250923 07:39:16.000" endtime="20250923 07:39:16.016"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>CounterTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:39:16.017" level="INFO">${timestamp} = 20250923_073916</msg>
<status status="PASS" starttime="20250923 07:39:16.016" endtime="20250923 07:39:16.017"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:39:16.017" level="INFO">${unique_name} = CounterTest_20250923_073916</msg>
<status status="PASS" starttime="20250923 07:39:16.017" endtime="20250923 07:39:16.017"/>
</kw>
<msg timestamp="20250923 07:39:16.017" level="INFO">${dep_name} = CounterTest_20250923_073916</msg>
<status status="PASS" starttime="20250923 07:39:16.016" endtime="20250923 07:39:16.017"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>Test for counter updates</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:39:16.018" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:39:16.018" endtime="20250923 07:39:16.041"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:39:26.442" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-22.png"&gt;&lt;img src="selenium-screenshot-22.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:39:26.442" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:39:16.041" endtime="20250923 07:39:26.442"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.442" endtime="20250923 07:39:26.442"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.442" endtime="20250923 07:39:26.442"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.442" endtime="20250923 07:39:26.442"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.442" endtime="20250923 07:39:26.442"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.442" endtime="20250923 07:39:26.442"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.442" endtime="20250923 07:39:26.442"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.442" endtime="20250923 07:39:26.442"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.442" endtime="20250923 07:39:26.443"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.443" endtime="20250923 07:39:26.443"/>
</kw>
<status status="FAIL" starttime="20250923 07:39:16.017" endtime="20250923 07:39:26.443"/>
</kw>
<kw name="Get Counter Value" library="depflow_keywords">
<var>${after_add_count}</var>
<arg>${TOTAL_COUNT}</arg>
<doc>Gets the numeric value from a counter element</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.443" endtime="20250923 07:39:26.443"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_count}</var>
<arg>${initial_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.443" endtime="20250923 07:39:26.443"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${after_add_count}</arg>
<arg>${expected_count}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.443" endtime="20250923 07:39:26.443"/>
</kw>
<kw name="Delete Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name (legacy method)</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.443" endtime="20250923 07:39:26.443"/>
</kw>
<kw name="Get Counter Value" library="depflow_keywords">
<var>${after_delete_count}</var>
<arg>${TOTAL_COUNT}</arg>
<doc>Gets the numeric value from a counter element</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.443" endtime="20250923 07:39:26.443"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${after_delete_count}</arg>
<arg>${initial_count}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="NOT RUN" starttime="20250923 07:39:26.443" endtime="20250923 07:39:26.443"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:39:26.443" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:39:26.443" endtime="20250923 07:39:26.447"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:27.448" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:39:26.447" endtime="20250923 07:39:27.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:39:27.448" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:39:27.448" endtime="20250923 07:39:27.448"/>
</kw>
<status status="PASS" starttime="20250923 07:39:26.443" endtime="20250923 07:39:27.449"/>
</kw>
<status status="PASS" starttime="20250923 07:39:26.443" endtime="20250923 07:39:27.449"/>
</kw>
<doc>Test that counters update correctly after CRUD operations</doc>
<tag>counters</tag>
<tag>crud</tag>
<tag>integration</tag>
<status status="FAIL" starttime="20250923 07:39:11.943" endtime="20250923 07:39:27.449">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t23" name="TC026 - Add Dependency With Special Characters" line="406">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:39:27.451" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:39:27.450" endtime="20250923 07:39:27.456"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:28.457" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:39:27.456" endtime="20250923 07:39:28.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:39:28.457" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:39:28.457" endtime="20250923 07:39:28.457"/>
</kw>
<status status="PASS" starttime="20250923 07:39:27.450" endtime="20250923 07:39:28.457"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:39:28.458" endtime="20250923 07:39:28.464"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:29.466" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:39:28.464" endtime="20250923 07:39:29.467"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:39:29.468" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:39:29.467" endtime="20250923 07:39:29.477"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:31.477" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:39:29.477" endtime="20250923 07:39:31.477"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:39:31.478" endtime="20250923 07:39:31.492"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:39:31.492" endtime="20250923 07:39:31.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:39:31.503" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:39:31.503" endtime="20250923 07:39:31.503"/>
</kw>
<status status="PASS" starttime="20250923 07:39:28.458" endtime="20250923 07:39:31.503"/>
</kw>
<status status="PASS" starttime="20250923 07:39:28.458" endtime="20250923 07:39:31.503"/>
</kw>
<status status="PASS" starttime="20250923 07:39:27.450" endtime="20250923 07:39:31.503"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${special_name}</var>
<arg>Test-Dep_With@Special#Chars!</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:39:31.503" level="INFO">${special_name} = Test-Dep_With@Special#Chars!</msg>
<status status="PASS" starttime="20250923 07:39:31.503" endtime="20250923 07:39:31.503"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${special_desc}</var>
<arg>Description with special chars: @#$%^&amp;*()_+-={}[]|\\:";'&lt;&gt;?,./</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:39:31.504" level="INFO">${special_desc} = Description with special chars: @#$%^&amp;*()_+-={}[]|\:";'&lt;&gt;?,./</msg>
<status status="PASS" starttime="20250923 07:39:31.503" endtime="20250923 07:39:31.504"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${special_name}</arg>
<arg>${special_desc}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:39:31.505" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:39:31.504" endtime="20250923 07:39:31.528"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:39:41.971" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-23.png"&gt;&lt;img src="selenium-screenshot-23.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:39:41.972" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:39:31.528" endtime="20250923 07:39:41.972"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:41.972" endtime="20250923 07:39:41.972"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:41.972" endtime="20250923 07:39:41.972"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:41.972" endtime="20250923 07:39:41.972"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:41.972" endtime="20250923 07:39:41.972"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:41.972" endtime="20250923 07:39:41.972"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:39:41.972" endtime="20250923 07:39:41.972"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:39:41.972" endtime="20250923 07:39:41.972"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:39:41.972" endtime="20250923 07:39:41.972"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:39:41.972" endtime="20250923 07:39:41.972"/>
</kw>
<status status="FAIL" starttime="20250923 07:39:31.504" endtime="20250923 07:39:41.972"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${special_name}</arg>
<doc>Verifies that a dependency exists in the table</doc>
<status status="NOT RUN" starttime="20250923 07:39:41.972" endtime="20250923 07:39:41.972"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:39:41.973" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:39:41.973" endtime="20250923 07:39:41.976"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:42.978" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:39:41.977" endtime="20250923 07:39:42.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:39:42.980" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:39:42.979" endtime="20250923 07:39:42.980"/>
</kw>
<status status="PASS" starttime="20250923 07:39:41.973" endtime="20250923 07:39:42.980"/>
</kw>
<status status="PASS" starttime="20250923 07:39:41.972" endtime="20250923 07:39:42.980"/>
</kw>
<doc>Test creating dependency with special characters in name and description</doc>
<tag>crud</tag>
<tag>edge_case</tag>
<tag>special_characters</tag>
<status status="FAIL" starttime="20250923 07:39:27.449" endtime="20250923 07:39:42.980">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<test id="s1-t24" name="TC027 - Add Dependency With Long Text" line="416">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:39:42.983" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:39:42.982" endtime="20250923 07:39:42.989"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:43.991" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:39:42.989" endtime="20250923 07:39:43.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:39:43.991" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:39:43.991" endtime="20250923 07:39:43.991"/>
</kw>
<status status="PASS" starttime="20250923 07:39:42.982" endtime="20250923 07:39:43.991"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:39:43.992" endtime="20250923 07:39:43.999"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:45.000" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:39:43.999" endtime="20250923 07:39:45.000"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:39:45.001" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:39:45.000" endtime="20250923 07:39:45.012"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:47.015" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:39:45.012" endtime="20250923 07:39:47.015"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:39:47.015" endtime="20250923 07:39:47.032"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:39:47.032" endtime="20250923 07:39:47.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:39:47.048" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:39:47.048" endtime="20250923 07:39:47.048"/>
</kw>
<status status="PASS" starttime="20250923 07:39:43.992" endtime="20250923 07:39:47.049"/>
</kw>
<status status="PASS" starttime="20250923 07:39:43.992" endtime="20250923 07:39:47.049"/>
</kw>
<status status="PASS" starttime="20250923 07:39:42.981" endtime="20250923 07:39:47.049"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${long_name}</var>
<arg>${'Very Long Dependency Name That Exceeds Normal Length To Test Field Boundaries' * 2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:39:47.050" level="FAIL">Resolving variable '${'Very Long Dependency Name That Exceeds Normal Length To Test Field Boundaries' * 2}' failed: Variable '${'Very Long Dependency Name That Exceeds Normal Length To Test Field Boundaries}' not found.</msg>
<status status="FAIL" starttime="20250923 07:39:47.049" endtime="20250923 07:39:47.050"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${long_desc}</var>
<arg>${'This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. ' * 10}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 07:39:47.051" endtime="20250923 07:39:47.051"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${long_name}</arg>
<arg>${long_desc}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<status status="NOT RUN" starttime="20250923 07:39:47.051" endtime="20250923 07:39:47.051"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${long_name}</arg>
<doc>Verifies that a dependency exists in the table</doc>
<status status="NOT RUN" starttime="20250923 07:39:47.051" endtime="20250923 07:39:47.051"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:39:47.052" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:39:47.051" endtime="20250923 07:39:47.055"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:48.057" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:39:47.055" endtime="20250923 07:39:48.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:39:48.058" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:39:48.057" endtime="20250923 07:39:48.058"/>
</kw>
<status status="PASS" starttime="20250923 07:39:47.051" endtime="20250923 07:39:48.058"/>
</kw>
<status status="PASS" starttime="20250923 07:39:47.051" endtime="20250923 07:39:48.058"/>
</kw>
<doc>Test creating dependency with maximum length text fields</doc>
<tag>boundary</tag>
<tag>crud</tag>
<tag>edge_case</tag>
<status status="FAIL" starttime="20250923 07:39:42.981" endtime="20250923 07:39:48.058">Resolving variable '${'Very Long Dependency Name That Exceeds Normal Length To Test Field Boundaries' * 2}' failed: Variable '${'Very Long Dependency Name That Exceeds Normal Length To Test Field Boundaries}' not found.</status>
</test>
<test id="s1-t25" name="TC028 - Bulk Delete Dependencies" line="426">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:39:48.060" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:39:48.059" endtime="20250923 07:39:48.064"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:49.067" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:39:48.065" endtime="20250923 07:39:49.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:39:49.068" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:39:49.068" endtime="20250923 07:39:49.068"/>
</kw>
<status status="PASS" starttime="20250923 07:39:48.059" endtime="20250923 07:39:49.068"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:39:49.069" endtime="20250923 07:39:49.077"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:50.077" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:39:49.077" endtime="20250923 07:39:50.078"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:39:50.079" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:39:50.078" endtime="20250923 07:39:50.088"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:39:52.090" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:39:50.088" endtime="20250923 07:39:52.090"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:39:52.091" endtime="20250923 07:39:52.105"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:39:52.105" endtime="20250923 07:39:52.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:39:52.115" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:39:52.115" endtime="20250923 07:39:52.115"/>
</kw>
<status status="PASS" starttime="20250923 07:39:49.068" endtime="20250923 07:39:52.115"/>
</kw>
<status status="PASS" starttime="20250923 07:39:49.068" endtime="20250923 07:39:52.115"/>
</kw>
<status status="PASS" starttime="20250923 07:39:48.059" endtime="20250923 07:39:52.115"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{dep_names}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250923 07:39:52.116" level="INFO">@{dep_names} = [ ]</msg>
<status status="PASS" starttime="20250923 07:39:52.116" endtime="20250923 07:39:52.116"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>3</value>
<iter>
<var name="${i}">0</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>BulkDelete_${i}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 07:39:52.116" level="INFO">${timestamp} = 20250923_073952</msg>
<status status="PASS" starttime="20250923 07:39:52.116" endtime="20250923 07:39:52.116"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:39:52.117" level="INFO">${unique_name} = BulkDelete_0_20250923_073952</msg>
<status status="PASS" starttime="20250923 07:39:52.117" endtime="20250923 07:39:52.117"/>
</kw>
<msg timestamp="20250923 07:39:52.117" level="INFO">${dep_name} = BulkDelete_0_20250923_073952</msg>
<status status="PASS" starttime="20250923 07:39:52.116" endtime="20250923 07:39:52.117"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${dep_names}</arg>
<arg>${dep_name}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250923 07:39:52.117" endtime="20250923 07:39:52.117"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>Bulk delete test dependency ${i}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:39:52.118" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 07:39:52.118" endtime="20250923 07:39:52.144"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 07:40:02.524" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-24.png"&gt;&lt;img src="selenium-screenshot-24.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:40:02.525" level="FAIL">Element 'id:addEditModal' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 07:39:52.144" endtime="20250923 07:40:02.525"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:40:02.525" endtime="20250923 07:40:02.525"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:40:02.525" endtime="20250923 07:40:02.525"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="NOT RUN" starttime="20250923 07:40:02.525" endtime="20250923 07:40:02.525"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:40:02.525" endtime="20250923 07:40:02.525"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 07:40:02.525" endtime="20250923 07:40:02.525"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 07:40:02.525" endtime="20250923 07:40:02.526"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 07:40:02.526" endtime="20250923 07:40:02.526"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:40:02.526" endtime="20250923 07:40:02.526"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:40:02.526" endtime="20250923 07:40:02.526"/>
</kw>
<status status="FAIL" starttime="20250923 07:39:52.117" endtime="20250923 07:40:02.526"/>
</kw>
<status status="FAIL" starttime="20250923 07:39:52.116" endtime="20250923 07:40:02.526"/>
</iter>
<status status="FAIL" starttime="20250923 07:39:52.116" endtime="20250923 07:40:02.526"/>
</for>
<for flavor="IN">
<var>${dep_name}</var>
<value>@{dep_names}</value>
<iter>
<var name="${dep_name}"/>
<kw name="Delete Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name (legacy method)</doc>
<status status="NOT RUN" starttime="20250923 07:40:02.526" endtime="20250923 07:40:02.526"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the table</doc>
<status status="NOT RUN" starttime="20250923 07:40:02.526" endtime="20250923 07:40:02.526"/>
</kw>
<status status="NOT RUN" starttime="20250923 07:40:02.526" endtime="20250923 07:40:02.526"/>
</iter>
<status status="NOT RUN" starttime="20250923 07:40:02.526" endtime="20250923 07:40:02.526"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:40:02.527" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:40:02.527" endtime="20250923 07:40:02.531"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:40:03.533" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:40:02.531" endtime="20250923 07:40:03.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:40:03.534" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:40:03.534" endtime="20250923 07:40:03.534"/>
</kw>
<status status="PASS" starttime="20250923 07:40:02.526" endtime="20250923 07:40:03.535"/>
</kw>
<status status="PASS" starttime="20250923 07:40:02.526" endtime="20250923 07:40:03.535"/>
</kw>
<doc>Test deleting multiple dependencies in sequence</doc>
<tag>bulk</tag>
<tag>crud</tag>
<tag>delete</tag>
<status status="FAIL" starttime="20250923 07:39:48.058" endtime="20250923 07:40:03.535">Element 'id:addEditModal' not visible after 5 seconds.</status>
</test>
<kw name="Test Mode Suite Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:40:03.540" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:40:03.539" endtime="20250923 07:40:03.544"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:40:04.546" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:40:03.545" endtime="20250923 07:40:04.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:40:04.547" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:40:04.546" endtime="20250923 07:40:04.547"/>
</kw>
<status status="PASS" starttime="20250923 07:40:03.539" endtime="20250923 07:40:04.547"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:40:04.547" endtime="20250923 07:40:04.855"/>
</kw>
<status status="PASS" starttime="20250923 07:40:04.547" endtime="20250923 07:40:04.855"/>
</kw>
<status status="PASS" starttime="20250923 07:40:03.538" endtime="20250923 07:40:04.855"/>
</kw>
<doc>Dependency CRUD Operations Test Suite for DepFlow Application</doc>
<status status="FAIL" starttime="20250923 07:33:36.185" endtime="20250923 07:40:04.855"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="25" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="2" skip="0">admin</stat>
<stat pass="0" fail="1" skip="0">boundary</stat>
<stat pass="0" fail="1" skip="0">bulk</stat>
<stat pass="0" fail="2" skip="0">cancel</stat>
<stat pass="0" fail="2" skip="0">colors</stat>
<stat pass="0" fail="3" skip="0">comprehensive</stat>
<stat pass="0" fail="2" skip="0">confirmation</stat>
<stat pass="0" fail="1" skip="0">counters</stat>
<stat pass="0" fail="2" skip="0">create</stat>
<stat pass="0" fail="23" skip="0">crud</stat>
<stat pass="0" fail="1" skip="0">dashboard</stat>
<stat pass="0" fail="5" skip="0">delete</stat>
<stat pass="0" fail="2" skip="0">edge_case</stat>
<stat pass="0" fail="3" skip="0">edit</stat>
<stat pass="0" fail="2" skip="0">inline_edit</stat>
<stat pass="0" fail="1" skip="0">integration</stat>
<stat pass="0" fail="1" skip="0">minimal</stat>
<stat pass="0" fail="1" skip="0">modal</stat>
<stat pass="0" fail="2" skip="0">negative</stat>
<stat pass="0" fail="3" skip="0">priority</stat>
<stat pass="0" fail="4" skip="0">rbac</stat>
<stat pass="0" fail="2" skip="0">restriction</stat>
<stat pass="0" fail="3" skip="0">smoke</stat>
<stat pass="0" fail="1" skip="0">special_characters</stat>
<stat pass="0" fail="3" skip="0">status</stat>
<stat pass="0" fail="1" skip="0">teams</stat>
<stat pass="0" fail="5" skip="0">ui</stat>
<stat pass="0" fail="3" skip="0">update</stat>
<stat pass="0" fail="2" skip="0">user</stat>
<stat pass="0" fail="2" skip="0">validation</stat>
</tag>
<suite>
<stat pass="0" fail="25" skip="0" id="s1" name="02 Dependency Crud Tests">02 Dependency Crud Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
