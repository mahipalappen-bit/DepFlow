<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20250923 09:52:29.126" rpa="false" schemaversion="4">
<suite id="s1" name="02 Dependency Crud Tests" source="/Users/mmoola/Cursor/Dependency Management App/tests/test_suites/02_dependency_crud_tests.robot">
<kw name="Test Mode Suite Setup" library="depflow_keywords" type="SETUP">
<doc>Setup using test mode authentication</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 09:52:30.252" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 09:52:30.252" endtime="20250923 09:52:33.489"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 09:52:33.490" endtime="20250923 09:52:33.880"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 09:52:33.880" endtime="20250923 09:52:33.886"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 09:52:33.887" endtime="20250923 09:52:33.899"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 09:52:36.901" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 09:52:33.899" endtime="20250923 09:52:36.909"/>
</kw>
<status status="PASS" starttime="20250923 09:52:30.252" endtime="20250923 09:52:36.911"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 09:52:36.918" endtime="20250923 09:52:36.972"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 09:52:37.973" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 09:52:36.972" endtime="20250923 09:52:37.973"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 09:52:37.977" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 09:52:37.973" endtime="20250923 09:52:37.999"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 09:52:40.001" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 09:52:37.999" endtime="20250923 09:52:40.002"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 09:52:40.002" endtime="20250923 09:52:40.111"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 09:52:40.112" endtime="20250923 09:52:40.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 09:52:40.125" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 09:52:40.124" endtime="20250923 09:52:40.125"/>
</kw>
<status status="PASS" starttime="20250923 09:52:36.916" endtime="20250923 09:52:40.125"/>
</kw>
<status status="PASS" starttime="20250923 09:52:36.913" endtime="20250923 09:52:40.125"/>
</kw>
<status status="PASS" starttime="20250923 09:52:30.252" endtime="20250923 09:52:40.125"/>
</kw>
<test id="s1-t1" name="TC015 - Add New Dependency Successfully" line="52">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 09:52:40.131" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 09:52:40.130" endtime="20250923 09:52:40.136"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 09:52:41.138" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 09:52:40.136" endtime="20250923 09:52:41.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 09:52:41.138" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 09:52:41.138" endtime="20250923 09:52:41.138"/>
</kw>
<status status="PASS" starttime="20250923 09:52:40.130" endtime="20250923 09:52:41.138"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 09:52:41.139" endtime="20250923 09:52:41.148"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 09:52:42.151" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 09:52:41.148" endtime="20250923 09:52:42.151"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 09:52:42.152" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 09:52:42.151" endtime="20250923 09:52:42.163"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 09:52:44.165" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 09:52:42.163" endtime="20250923 09:52:44.165"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 09:52:44.166" endtime="20250923 09:52:44.178"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 09:52:44.178" endtime="20250923 09:52:44.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 09:52:44.188" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 09:52:44.188" endtime="20250923 09:52:44.188"/>
</kw>
<status status="PASS" starttime="20250923 09:52:41.139" endtime="20250923 09:52:44.188"/>
</kw>
<status status="PASS" starttime="20250923 09:52:41.138" endtime="20250923 09:52:44.188"/>
</kw>
<status status="PASS" starttime="20250923 09:52:40.130" endtime="20250923 09:52:44.188"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>CreateTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 09:52:44.189" level="INFO">${timestamp} = 20250923_095244</msg>
<status status="PASS" starttime="20250923 09:52:44.189" endtime="20250923 09:52:44.189"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 09:52:44.189" level="INFO">${unique_name} = CreateTest_20250923_095244</msg>
<status status="PASS" starttime="20250923 09:52:44.189" endtime="20250923 09:52:44.189"/>
</kw>
<msg timestamp="20250923 09:52:44.189" level="INFO">${unique_name} = CreateTest_20250923_095244</msg>
<status status="PASS" starttime="20250923 09:52:44.188" endtime="20250923 09:52:44.189"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency created by Robot Framework automation</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 09:52:44.189" level="INFO">${description} = Test dependency created by Robot Framework automation</msg>
<status status="PASS" starttime="20250923 09:52:44.189" endtime="20250923 09:52:44.189"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${TEST_DEP_STATUS}</arg>
<arg>${TEST_DEP_PRIORITY}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 09:52:44.191" endtime="20250923 09:52:44.202"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 09:52:44.203" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 09:52:44.202" endtime="20250923 09:52:44.236"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 09:52:44.236" endtime="20250923 09:52:44.457"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 09:52:44.457" endtime="20250923 09:52:44.465"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 09:52:44.465" endtime="20250923 09:52:44.473"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 09:52:44.473" endtime="20250923 09:52:44.481"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 09:52:44.482" level="INFO">Typing text 'CreateTest_20250923_095244' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 09:52:44.482" endtime="20250923 09:52:44.590"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 09:52:44.591" level="INFO">Typing text 'Test dependency created by Robot Framework automation' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 09:52:44.590" endtime="20250923 09:52:44.625"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 09:52:44.626" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 09:52:44.625" endtime="20250923 09:52:44.653"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 09:52:44.653" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 09:52:44.653" endtime="20250923 09:52:44.668"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 09:52:44.669" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 09:52:44.669" endtime="20250923 09:52:44.684"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 09:52:44.684" endtime="20250923 09:52:44.685"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 09:52:44.685" endtime="20250923 09:52:44.692"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 09:52:44.692" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 09:52:44.692" endtime="20250923 09:52:44.718"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 09:52:44.718" endtime="20250923 09:52:44.724"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 09:52:46.727" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 09:52:44.725" endtime="20250923 09:52:46.727"/>
</kw>
<status status="PASS" starttime="20250923 09:52:44.189" endtime="20250923 09:52:46.727"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 09:52:46.728" endtime="20250923 09:52:46.739"/>
</kw>
<status status="PASS" starttime="20250923 09:52:46.728" endtime="20250923 09:52:46.739"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<msg timestamp="20250923 09:52:46.739" level="FAIL">Keyword with same name defined multiple times.</msg>
<status status="FAIL" starttime="20250923 09:52:46.739" endtime="20250923 09:52:46.739"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${unique_name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 09:52:46.740" endtime="20250923 09:52:46.740"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${description}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 09:52:46.740" endtime="20250923 09:52:46.740"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${TEST_DEP_TEAM}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 09:52:46.740" endtime="20250923 09:52:46.740"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 09:52:46.741" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 09:52:46.741" endtime="20250923 09:52:46.748"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 09:52:47.787" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 09:52:46.748" endtime="20250923 09:52:47.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 09:52:47.792" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 09:52:47.790" endtime="20250923 09:52:47.792"/>
</kw>
<status status="PASS" starttime="20250923 09:52:46.740" endtime="20250923 09:52:47.792"/>
</kw>
<status status="PASS" starttime="20250923 09:52:46.740" endtime="20250923 09:52:47.793"/>
</kw>
<doc>Test successful creation of a new dependency</doc>
<tag>create</tag>
<tag>crud</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20250923 09:52:40.126" endtime="20250923 09:52:47.793">Keyword with same name defined multiple times.</status>
</test>
<kw name="Test Mode Suite Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 09:52:47.801" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 09:52:47.800" endtime="20250923 09:52:47.811"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 09:52:48.812" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 09:52:47.811" endtime="20250923 09:52:48.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 09:52:48.814" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 09:52:48.813" endtime="20250923 09:52:48.814"/>
</kw>
<status status="PASS" starttime="20250923 09:52:47.799" endtime="20250923 09:52:48.814"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 09:52:48.814" endtime="20250923 09:52:48.952"/>
</kw>
<status status="PASS" starttime="20250923 09:52:48.814" endtime="20250923 09:52:48.952"/>
</kw>
<status status="PASS" starttime="20250923 09:52:47.799" endtime="20250923 09:52:48.952"/>
</kw>
<doc>Dependency CRUD Operations Test Suite for DepFlow Application</doc>
<status status="FAIL" starttime="20250923 09:52:29.127" endtime="20250923 09:52:48.952"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">create</stat>
<stat pass="0" fail="1" skip="0">crud</stat>
<stat pass="0" fail="1" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="02 Dependency Crud Tests">02 Dependency Crud Tests</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20250923 09:52:29.199" level="ERROR">Error in file '/Users/mmoola/Cursor/Dependency Management App/tests/keywords/depflow_keywords.robot' on line 590: Creating keyword 'Edit Dependency' failed: Keyword with same name defined multiple times.</msg>
<msg timestamp="20250923 09:52:29.199" level="ERROR">Error in file '/Users/mmoola/Cursor/Dependency Management App/tests/keywords/depflow_keywords.robot' on line 618: Creating keyword 'Delete Dependency With Confirmation' failed: Keyword with same name defined multiple times.</msg>
<msg timestamp="20250923 09:52:29.199" level="ERROR">Error in file '/Users/mmoola/Cursor/Dependency Management App/tests/keywords/depflow_keywords.robot' on line 650: Creating keyword 'Test Inline Status Edit' failed: Keyword with same name defined multiple times.</msg>
<msg timestamp="20250923 09:52:29.199" level="ERROR">Error in file '/Users/mmoola/Cursor/Dependency Management App/tests/keywords/depflow_keywords.robot' on line 664: Creating keyword 'Test Inline Priority Edit' failed: Keyword with same name defined multiple times.</msg>
<msg timestamp="20250923 09:52:29.199" level="ERROR">Error in file '/Users/mmoola/Cursor/Dependency Management App/tests/keywords/depflow_keywords.robot' on line 678: Creating keyword 'Verify Edit Button Visibility' failed: Keyword with same name defined multiple times.</msg>
<msg timestamp="20250923 09:52:29.199" level="ERROR">Error in file '/Users/mmoola/Cursor/Dependency Management App/tests/keywords/depflow_keywords.robot' on line 691: Creating keyword 'Verify Delete Button Visibility' failed: Keyword with same name defined multiple times.</msg>
<msg timestamp="20250923 09:52:29.199" level="ERROR">Error in file '/Users/mmoola/Cursor/Dependency Management App/tests/keywords/depflow_keywords.robot' on line 704: Creating keyword 'Verify Status Badge Color' failed: Keyword with same name defined multiple times.</msg>
<msg timestamp="20250923 09:52:29.199" level="ERROR">Error in file '/Users/mmoola/Cursor/Dependency Management App/tests/keywords/depflow_keywords.robot' on line 714: Creating keyword 'Verify Priority Badge Color' failed: Keyword with same name defined multiple times.</msg>
<msg timestamp="20250923 09:52:29.199" level="ERROR">Error in file '/Users/mmoola/Cursor/Dependency Management App/tests/keywords/depflow_keywords.robot' on line 724: Creating keyword 'Verify Notification Message' failed: Keyword with same name defined multiple times.</msg>
</errors>
</robot>
