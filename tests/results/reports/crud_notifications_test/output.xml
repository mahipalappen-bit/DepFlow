<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20250923 10:20:16.580" rpa="false" schemaversion="4">
<suite id="s1" name="02 Dependency Crud Tests" source="/Users/mmoola/Cursor/Dependency Management App/tests/test_suites/02_dependency_crud_tests.robot">
<kw name="Test Mode Suite Setup" library="depflow_keywords" type="SETUP">
<doc>Setup using test mode authentication</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 10:20:17.498" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 10:20:17.498" endtime="20250923 10:20:22.177"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 10:20:22.181" endtime="20250923 10:20:22.540"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 10:20:22.540" endtime="20250923 10:20:22.541"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:20:22.541" endtime="20250923 10:20:22.568"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:20:25.570" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 10:20:22.568" endtime="20250923 10:20:25.570"/>
</kw>
<status status="PASS" starttime="20250923 10:20:17.498" endtime="20250923 10:20:25.570"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:20:25.571" endtime="20250923 10:20:25.580"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:20:26.580" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:20:25.580" endtime="20250923 10:20:26.581"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:20:26.583" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:20:26.581" endtime="20250923 10:20:26.614"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:20:28.617" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:20:26.614" endtime="20250923 10:20:28.618"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:28.618" endtime="20250923 10:20:28.696"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:28.696" endtime="20250923 10:20:28.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:20:28.706" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:20:28.706" endtime="20250923 10:20:28.706"/>
</kw>
<status status="PASS" starttime="20250923 10:20:25.571" endtime="20250923 10:20:28.706"/>
</kw>
<status status="PASS" starttime="20250923 10:20:25.571" endtime="20250923 10:20:28.706"/>
</kw>
<status status="PASS" starttime="20250923 10:20:17.497" endtime="20250923 10:20:28.706"/>
</kw>
<test id="s1-t1" name="TC015 - Add New Dependency Successfully" line="52">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:20:28.708" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:20:28.708" endtime="20250923 10:20:28.711"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:20:29.713" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:20:28.712" endtime="20250923 10:20:29.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:20:29.714" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:20:29.714" endtime="20250923 10:20:29.714"/>
</kw>
<status status="PASS" starttime="20250923 10:20:28.707" endtime="20250923 10:20:29.714"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:20:29.715" endtime="20250923 10:20:29.724"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:20:30.726" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:20:29.724" endtime="20250923 10:20:30.726"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:20:30.727" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:20:30.726" endtime="20250923 10:20:30.732"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:20:32.733" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:20:30.733" endtime="20250923 10:20:32.733"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:32.734" endtime="20250923 10:20:32.749"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:32.749" endtime="20250923 10:20:32.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:20:32.759" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:20:32.759" endtime="20250923 10:20:32.759"/>
</kw>
<status status="PASS" starttime="20250923 10:20:29.715" endtime="20250923 10:20:32.759"/>
</kw>
<status status="PASS" starttime="20250923 10:20:29.714" endtime="20250923 10:20:32.759"/>
</kw>
<status status="PASS" starttime="20250923 10:20:28.707" endtime="20250923 10:20:32.759"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>CreateTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:20:32.760" level="INFO">${timestamp} = 20250923_102032</msg>
<status status="PASS" starttime="20250923 10:20:32.759" endtime="20250923 10:20:32.760"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:20:32.760" level="INFO">${unique_name} = CreateTest_20250923_102032</msg>
<status status="PASS" starttime="20250923 10:20:32.760" endtime="20250923 10:20:32.760"/>
</kw>
<msg timestamp="20250923 10:20:32.760" level="INFO">${unique_name} = CreateTest_20250923_102032</msg>
<status status="PASS" starttime="20250923 10:20:32.759" endtime="20250923 10:20:32.760"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency created by Robot Framework automation</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:20:32.760" level="INFO">${description} = Test dependency created by Robot Framework automation</msg>
<status status="PASS" starttime="20250923 10:20:32.760" endtime="20250923 10:20:32.760"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${TEST_DEP_STATUS}</arg>
<arg>${TEST_DEP_PRIORITY}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:32.761" endtime="20250923 10:20:32.772"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:20:32.772" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:20:32.772" endtime="20250923 10:20:32.809"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:32.809" endtime="20250923 10:20:32.821"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:32.821" endtime="20250923 10:20:32.834"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:32.834" endtime="20250923 10:20:32.844"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:32.844" endtime="20250923 10:20:32.857"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:20:32.857" level="INFO">Typing text 'CreateTest_20250923_102032' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:20:32.857" endtime="20250923 10:20:33.035"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:20:33.036" level="INFO">Typing text 'Test dependency created by Robot Framework automation' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:20:33.036" endtime="20250923 10:20:33.086"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:20:33.086" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:20:33.086" endtime="20250923 10:20:33.120"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:20:33.121" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:20:33.121" endtime="20250923 10:20:33.141"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:20:33.141" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:20:33.141" endtime="20250923 10:20:33.159"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:20:33.159" endtime="20250923 10:20:33.160"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:33.160" endtime="20250923 10:20:33.168"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:20:33.169" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:20:33.168" endtime="20250923 10:20:33.199"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:20:33.199" endtime="20250923 10:20:33.206"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:20:35.209" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:20:33.207" endtime="20250923 10:20:35.209"/>
</kw>
<status status="PASS" starttime="20250923 10:20:32.760" endtime="20250923 10:20:35.209"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:20:35.210" endtime="20250923 10:20:35.222"/>
</kw>
<status status="PASS" starttime="20250923 10:20:35.209" endtime="20250923 10:20:35.222"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NOTIFICATION}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:35.223" endtime="20250923 10:20:35.241"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${actual_message}</var>
<arg>${NOTIFICATION}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:20:35.254" level="INFO">${actual_message} = ✅ Dependency "" created successfully!
×</msg>
<status status="PASS" starttime="20250923 10:20:35.241" endtime="20250923 10:20:35.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${actual_message}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250923 10:20:35.255" endtime="20250923 10:20:35.255"/>
</kw>
<status status="PASS" starttime="20250923 10:20:35.222" endtime="20250923 10:20:35.255"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${unique_name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 10:20:35.263" level="INFO">Current page contains text 'CreateTest_20250923_102032'.</msg>
<status status="PASS" starttime="20250923 10:20:35.255" endtime="20250923 10:20:35.263"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${description}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 10:20:35.270" level="INFO">Current page contains text 'Test dependency created by Robot Framework automation'.</msg>
<status status="PASS" starttime="20250923 10:20:35.263" endtime="20250923 10:20:35.270"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${TEST_DEP_TEAM}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 10:20:35.277" level="INFO">Current page contains text 'Quality Flow'.</msg>
<status status="PASS" starttime="20250923 10:20:35.270" endtime="20250923 10:20:35.277"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:20:35.277" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:20:35.277" endtime="20250923 10:20:35.281"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:20:36.282" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:20:35.281" endtime="20250923 10:20:36.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:20:36.283" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:20:36.283" endtime="20250923 10:20:36.283"/>
</kw>
<status status="PASS" starttime="20250923 10:20:35.277" endtime="20250923 10:20:36.283"/>
</kw>
<status status="PASS" starttime="20250923 10:20:35.277" endtime="20250923 10:20:36.283"/>
</kw>
<doc>Test successful creation of a new dependency</doc>
<tag>create</tag>
<tag>crud</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20250923 10:20:28.706" endtime="20250923 10:20:36.283"/>
</test>
<test id="s1-t2" name="TC016 - Add Dependency With Minimal Required Fields" line="70">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:20:36.285" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:20:36.285" endtime="20250923 10:20:36.291"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:20:37.292" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:20:36.291" endtime="20250923 10:20:37.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:20:37.293" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:20:37.292" endtime="20250923 10:20:37.293"/>
</kw>
<status status="PASS" starttime="20250923 10:20:36.284" endtime="20250923 10:20:37.293"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:20:37.293" endtime="20250923 10:20:37.301"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:20:38.303" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:20:37.301" endtime="20250923 10:20:38.303"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:20:38.305" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:20:38.303" endtime="20250923 10:20:38.309"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:20:40.311" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:20:38.309" endtime="20250923 10:20:40.312"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:40.313" endtime="20250923 10:20:40.333"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:40.334" endtime="20250923 10:20:40.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:20:40.345" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:20:40.344" endtime="20250923 10:20:40.345"/>
</kw>
<status status="PASS" starttime="20250923 10:20:37.293" endtime="20250923 10:20:40.345"/>
</kw>
<status status="PASS" starttime="20250923 10:20:37.293" endtime="20250923 10:20:40.345"/>
</kw>
<status status="PASS" starttime="20250923 10:20:36.284" endtime="20250923 10:20:40.345"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>MinimalTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:20:40.346" level="INFO">${timestamp} = 20250923_102040</msg>
<status status="PASS" starttime="20250923 10:20:40.345" endtime="20250923 10:20:40.346"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:20:40.346" level="INFO">${unique_name} = MinimalTest_20250923_102040</msg>
<status status="PASS" starttime="20250923 10:20:40.346" endtime="20250923 10:20:40.346"/>
</kw>
<msg timestamp="20250923 10:20:40.346" level="INFO">${unique_name} = MinimalTest_20250923_102040</msg>
<status status="PASS" starttime="20250923 10:20:40.345" endtime="20250923 10:20:40.346"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Minimal test dependency with required fields only</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:20:40.346" level="INFO">${description} = Minimal test dependency with required fields only</msg>
<status status="PASS" starttime="20250923 10:20:40.346" endtime="20250923 10:20:40.346"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:40.347" endtime="20250923 10:20:40.356"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:20:40.356" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:20:40.356" endtime="20250923 10:20:40.385"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:40.385" endtime="20250923 10:20:40.398"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:40.398" endtime="20250923 10:20:40.409"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:40.409" endtime="20250923 10:20:40.419"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:40.419" endtime="20250923 10:20:40.431"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:20:40.432" level="INFO">Typing text 'MinimalTest_20250923_102040' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:20:40.431" endtime="20250923 10:20:40.468"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:20:40.468" level="INFO">Typing text 'Minimal test dependency with required fields only' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:20:40.468" endtime="20250923 10:20:40.509"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:20:40.509" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:20:40.509" endtime="20250923 10:20:40.537"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:20:40.538" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:20:40.537" endtime="20250923 10:20:40.556"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:20:40.557" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:20:40.557" endtime="20250923 10:20:40.575"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:20:40.576" endtime="20250923 10:20:40.577"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:40.577" endtime="20250923 10:20:40.586"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:20:40.587" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:20:40.587" endtime="20250923 10:20:40.624"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:20:40.624" endtime="20250923 10:20:40.636"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:20:42.636" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:20:40.636" endtime="20250923 10:20:42.637"/>
</kw>
<status status="PASS" starttime="20250923 10:20:40.346" endtime="20250923 10:20:42.637"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:20:42.638" endtime="20250923 10:20:42.650"/>
</kw>
<status status="PASS" starttime="20250923 10:20:42.637" endtime="20250923 10:20:42.650"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NOTIFICATION}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:20:42.650" endtime="20250923 10:20:42.661"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${actual_message}</var>
<arg>${NOTIFICATION}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:20:42.669" level="INFO">${actual_message} = ✅ Dependency "" created successfully!
×</msg>
<status status="PASS" starttime="20250923 10:20:42.661" endtime="20250923 10:20:42.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${actual_message}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250923 10:20:42.669" endtime="20250923 10:20:42.669"/>
</kw>
<status status="PASS" starttime="20250923 10:20:42.650" endtime="20250923 10:20:42.669"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:20:42.670" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:20:42.670" endtime="20250923 10:20:42.674"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:20:43.675" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:20:42.675" endtime="20250923 10:20:43.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:20:43.676" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:20:43.676" endtime="20250923 10:20:43.676"/>
</kw>
<status status="PASS" starttime="20250923 10:20:42.670" endtime="20250923 10:20:43.676"/>
</kw>
<status status="PASS" starttime="20250923 10:20:42.669" endtime="20250923 10:20:43.676"/>
</kw>
<doc>Test creating dependency with only required fields</doc>
<tag>create</tag>
<tag>crud</tag>
<tag>minimal</tag>
<status status="PASS" starttime="20250923 10:20:36.284" endtime="20250923 10:20:43.676"/>
</test>
<kw name="Test Mode Suite Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:20:43.680" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:20:43.679" endtime="20250923 10:20:43.685"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:20:44.687" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:20:43.685" endtime="20250923 10:20:44.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:20:44.688" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:20:44.688" endtime="20250923 10:20:44.688"/>
</kw>
<status status="PASS" starttime="20250923 10:20:43.678" endtime="20250923 10:20:44.688"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 10:20:44.689" endtime="20250923 10:20:44.816"/>
</kw>
<status status="PASS" starttime="20250923 10:20:44.688" endtime="20250923 10:20:44.816"/>
</kw>
<status status="PASS" starttime="20250923 10:20:43.678" endtime="20250923 10:20:44.816"/>
</kw>
<doc>Dependency CRUD Operations Test Suite for DepFlow Application</doc>
<status status="PASS" starttime="20250923 10:20:16.582" endtime="20250923 10:20:44.816"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create</stat>
<stat pass="2" fail="0" skip="0">crud</stat>
<stat pass="1" fail="0" skip="0">minimal</stat>
<stat pass="1" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="02 Dependency Crud Tests">02 Dependency Crud Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
