<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20250923 10:20:57.472" rpa="false" schemaversion="4">
<suite id="s1" name="02 Dependency Crud Tests" source="/Users/mmoola/Cursor/Dependency Management App/tests/test_suites/02_dependency_crud_tests.robot">
<kw name="Test Mode Suite Setup" library="depflow_keywords" type="SETUP">
<doc>Setup using test mode authentication</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 10:20:57.703" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 10:20:57.703" endtime="20250923 10:21:00.087"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 10:21:00.088" endtime="20250923 10:21:00.463"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 10:21:00.463" endtime="20250923 10:21:00.465"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:21:00.465" endtime="20250923 10:21:00.484"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:03.489" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 10:21:00.485" endtime="20250923 10:21:03.497"/>
</kw>
<status status="PASS" starttime="20250923 10:20:57.702" endtime="20250923 10:21:03.498"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:21:03.509" endtime="20250923 10:21:03.554"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:04.559" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:03.554" endtime="20250923 10:21:04.561"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:04.568" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:04.562" endtime="20250923 10:21:04.604"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:06.605" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:21:04.604" endtime="20250923 10:21:06.606"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:06.606" endtime="20250923 10:21:06.631"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:06.631" endtime="20250923 10:21:06.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:06.644" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:21:06.644" endtime="20250923 10:21:06.644"/>
</kw>
<status status="PASS" starttime="20250923 10:21:03.506" endtime="20250923 10:21:06.644"/>
</kw>
<status status="PASS" starttime="20250923 10:21:03.499" endtime="20250923 10:21:06.644"/>
</kw>
<status status="PASS" starttime="20250923 10:20:57.702" endtime="20250923 10:21:06.644"/>
</kw>
<test id="s1-t1" name="TC013 - Verify Dashboard Elements Present" line="27">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:06.646" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:06.646" endtime="20250923 10:21:06.651"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:07.652" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:06.651" endtime="20250923 10:21:07.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:07.653" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:21:07.653" endtime="20250923 10:21:07.653"/>
</kw>
<status status="PASS" starttime="20250923 10:21:06.646" endtime="20250923 10:21:07.653"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:21:07.654" endtime="20250923 10:21:07.663"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:08.666" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:07.663" endtime="20250923 10:21:08.666"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:08.667" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:08.666" endtime="20250923 10:21:08.678"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:10.681" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:21:08.678" endtime="20250923 10:21:10.681"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:10.682" endtime="20250923 10:21:10.693"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:10.693" endtime="20250923 10:21:10.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:10.702" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:21:10.701" endtime="20250923 10:21:10.702"/>
</kw>
<status status="PASS" starttime="20250923 10:21:07.654" endtime="20250923 10:21:10.702"/>
</kw>
<status status="PASS" starttime="20250923 10:21:07.653" endtime="20250923 10:21:10.702"/>
</kw>
<status status="PASS" starttime="20250923 10:21:06.645" endtime="20250923 10:21:10.702"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 10:21:10.707" level="INFO">Current page contains element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:21:10.702" endtime="20250923 10:21:10.708"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${TOTAL_COUNT}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 10:21:10.713" level="INFO">Current page contains element 'id:totalCount'.</msg>
<status status="PASS" starttime="20250923 10:21:10.708" endtime="20250923 10:21:10.713"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${SEARCH_INPUT}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 10:21:10.717" level="INFO">Current page contains element 'id:searchInput'.</msg>
<status status="PASS" starttime="20250923 10:21:10.713" endtime="20250923 10:21:10.717"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${DEPENDENCY_TABLE}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 10:21:10.722" level="INFO">Current page contains element 'css:.dependencies-table'.</msg>
<status status="PASS" starttime="20250923 10:21:10.717" endtime="20250923 10:21:10.722"/>
</kw>
<kw name="Verify DepFlow Dashboard Logo Present" library="depflow_keywords">
<doc>Verifies DepFlow logo is present on dashboard page</doc>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${visible_logos}</var>
<arg>xpath://div[contains(@class, 'depflow-logo') and not(contains(@style, 'display: none'))]</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20250923 10:21:10.727" level="INFO">${visible_logos} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="3362b5d3bda5034eedd44898a994597f", element="f.94DA370CA1BB7ED82689ADD50EC595EA.d.149507049E12CA7F24883B660B0EB044.e.38")&gt;, &lt;selenium.webdriv...</msg>
<status status="PASS" starttime="20250923 10:21:10.722" endtime="20250923 10:21:10.727"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${visible_logos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20250923 10:21:10.727" level="INFO">Length is 2</msg>
<msg timestamp="20250923 10:21:10.727" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20250923 10:21:10.727" endtime="20250923 10:21:10.727"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${count} &gt; 0</arg>
<arg>No visible DepFlow logo found on dashboard</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250923 10:21:10.727" endtime="20250923 10:21:10.728"/>
</kw>
<status status="PASS" starttime="20250923 10:21:10.722" endtime="20250923 10:21:10.728"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:10.728" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:10.728" endtime="20250923 10:21:10.731"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:11.732" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:10.731" endtime="20250923 10:21:11.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:11.733" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:21:11.733" endtime="20250923 10:21:11.733"/>
</kw>
<status status="PASS" starttime="20250923 10:21:10.728" endtime="20250923 10:21:11.733"/>
</kw>
<status status="PASS" starttime="20250923 10:21:10.728" endtime="20250923 10:21:11.733"/>
</kw>
<doc>Verify all dashboard elements are present after login</doc>
<tag>dashboard</tag>
<tag>smoke</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 10:21:06.644" endtime="20250923 10:21:11.733"/>
</test>
<test id="s1-t2" name="TC014 - Open Add Dependency Modal" line="37">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:11.735" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:11.735" endtime="20250923 10:21:11.740"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:12.740" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:11.740" endtime="20250923 10:21:12.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:12.741" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:21:12.741" endtime="20250923 10:21:12.741"/>
</kw>
<status status="PASS" starttime="20250923 10:21:11.735" endtime="20250923 10:21:12.741"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:21:12.742" endtime="20250923 10:21:12.751"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:13.752" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:12.751" endtime="20250923 10:21:13.753"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:13.753" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:13.753" endtime="20250923 10:21:13.763"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:15.765" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:21:13.763" endtime="20250923 10:21:15.765"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:15.766" endtime="20250923 10:21:15.779"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:15.779" endtime="20250923 10:21:15.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:15.789" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:21:15.789" endtime="20250923 10:21:15.789"/>
</kw>
<status status="PASS" starttime="20250923 10:21:12.742" endtime="20250923 10:21:15.789"/>
</kw>
<status status="PASS" starttime="20250923 10:21:12.742" endtime="20250923 10:21:15.789"/>
</kw>
<status status="PASS" starttime="20250923 10:21:11.734" endtime="20250923 10:21:15.789"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:15.789" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:15.789" endtime="20250923 10:21:15.792"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:15.793" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:15.792" endtime="20250923 10:21:15.795"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 10:21:15.796" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 10:21:15.796" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 10:21:15.796" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 10:21:15.796" endtime="20250923 10:21:15.805"/>
</kw>
<status status="PASS" starttime="20250923 10:21:15.795" endtime="20250923 10:21:15.805"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:16.806" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:15.805" endtime="20250923 10:21:16.806"/>
</kw>
<status status="PASS" starttime="20250923 10:21:15.789" endtime="20250923 10:21:16.806"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:17.808" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:16.807" endtime="20250923 10:21:17.808"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:17.810" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:21:17.809" endtime="20250923 10:21:17.880"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:17.880" endtime="20250923 10:21:17.889"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:21:17.899" level="INFO">Element 'id:addName' is displayed.</msg>
<status status="PASS" starttime="20250923 10:21:17.889" endtime="20250923 10:21:17.899"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:21:17.908" level="INFO">Element 'id:addDescription' is displayed.</msg>
<status status="PASS" starttime="20250923 10:21:17.899" endtime="20250923 10:21:17.908"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:21:17.916" level="INFO">Element 'id:addTeam' is displayed.</msg>
<status status="PASS" starttime="20250923 10:21:17.908" endtime="20250923 10:21:17.916"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:21:17.924" level="INFO">Element 'id:addStatus' is displayed.</msg>
<status status="PASS" starttime="20250923 10:21:17.916" endtime="20250923 10:21:17.924"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:21:17.934" level="INFO">Element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]' is displayed.</msg>
<status status="PASS" starttime="20250923 10:21:17.925" endtime="20250923 10:21:17.934"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${CANCEL_BUTTON}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:21:17.945" level="INFO">Element 'xpath://button[contains(@class, 'btn-cancel')]' is displayed.</msg>
<status status="PASS" starttime="20250923 10:21:17.934" endtime="20250923 10:21:17.945"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:17.946" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:17.946" endtime="20250923 10:21:17.948"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:18.950" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:17.948" endtime="20250923 10:21:18.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:18.951" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:21:18.951" endtime="20250923 10:21:18.951"/>
</kw>
<status status="PASS" starttime="20250923 10:21:17.945" endtime="20250923 10:21:18.951"/>
</kw>
<status status="PASS" starttime="20250923 10:21:17.945" endtime="20250923 10:21:18.951"/>
</kw>
<doc>Test opening the Add Dependency modal</doc>
<tag>modal</tag>
<tag>smoke</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 10:21:11.734" endtime="20250923 10:21:18.951"/>
</test>
<test id="s1-t3" name="TC015 - Add New Dependency Successfully" line="52">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:18.954" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:18.954" endtime="20250923 10:21:18.959"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:19.962" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:18.960" endtime="20250923 10:21:19.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:19.966" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:21:19.966" endtime="20250923 10:21:19.966"/>
</kw>
<status status="PASS" starttime="20250923 10:21:18.954" endtime="20250923 10:21:19.967"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:21:19.995" endtime="20250923 10:21:20.001"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:21.003" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:20.001" endtime="20250923 10:21:21.003"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:21.004" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:21.003" endtime="20250923 10:21:21.014"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:23.016" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:21:21.014" endtime="20250923 10:21:23.016"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:23.016" endtime="20250923 10:21:23.031"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:23.032" endtime="20250923 10:21:23.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:23.042" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:21:23.042" endtime="20250923 10:21:23.042"/>
</kw>
<status status="PASS" starttime="20250923 10:21:19.991" endtime="20250923 10:21:23.042"/>
</kw>
<status status="PASS" starttime="20250923 10:21:19.974" endtime="20250923 10:21:23.042"/>
</kw>
<status status="PASS" starttime="20250923 10:21:18.953" endtime="20250923 10:21:23.042"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>CreateTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:21:23.043" level="INFO">${timestamp} = 20250923_102123</msg>
<status status="PASS" starttime="20250923 10:21:23.043" endtime="20250923 10:21:23.043"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:21:23.043" level="INFO">${unique_name} = CreateTest_20250923_102123</msg>
<status status="PASS" starttime="20250923 10:21:23.043" endtime="20250923 10:21:23.044"/>
</kw>
<msg timestamp="20250923 10:21:23.044" level="INFO">${unique_name} = CreateTest_20250923_102123</msg>
<status status="PASS" starttime="20250923 10:21:23.043" endtime="20250923 10:21:23.044"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency created by Robot Framework automation</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:21:23.044" level="INFO">${description} = Test dependency created by Robot Framework automation</msg>
<status status="PASS" starttime="20250923 10:21:23.044" endtime="20250923 10:21:23.044"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${TEST_DEP_STATUS}</arg>
<arg>${TEST_DEP_PRIORITY}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:23.046" endtime="20250923 10:21:23.055"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:23.056" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:21:23.055" endtime="20250923 10:21:23.082"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:23.082" endtime="20250923 10:21:23.305"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:23.305" endtime="20250923 10:21:23.315"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:23.315" endtime="20250923 10:21:23.324"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:23.324" endtime="20250923 10:21:23.332"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:23.332" level="INFO">Typing text 'CreateTest_20250923_102123' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:21:23.332" endtime="20250923 10:21:23.446"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:23.446" level="INFO">Typing text 'Test dependency created by Robot Framework automation' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:21:23.446" endtime="20250923 10:21:23.485"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:21:23.486" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:21:23.486" endtime="20250923 10:21:23.527"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:21:23.527" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:21:23.527" endtime="20250923 10:21:23.544"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:21:23.544" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:21:23.544" endtime="20250923 10:21:23.563"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:21:23.563" endtime="20250923 10:21:23.564"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:23.564" endtime="20250923 10:21:23.571"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:23.572" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:21:23.572" endtime="20250923 10:21:23.604"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:21:23.604" endtime="20250923 10:21:23.615"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:25.617" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:21:23.615" endtime="20250923 10:21:25.618"/>
</kw>
<status status="PASS" starttime="20250923 10:21:23.044" endtime="20250923 10:21:25.618"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:21:25.618" endtime="20250923 10:21:25.630"/>
</kw>
<status status="PASS" starttime="20250923 10:21:25.618" endtime="20250923 10:21:25.630"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NOTIFICATION}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:25.630" endtime="20250923 10:21:25.643"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${actual_message}</var>
<arg>${NOTIFICATION}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:25.655" level="INFO">${actual_message} = ✅ Dependency "" created successfully!
×</msg>
<status status="PASS" starttime="20250923 10:21:25.643" endtime="20250923 10:21:25.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${actual_message}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250923 10:21:25.655" endtime="20250923 10:21:25.655"/>
</kw>
<status status="PASS" starttime="20250923 10:21:25.630" endtime="20250923 10:21:25.655"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${unique_name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 10:21:25.662" level="INFO">Current page contains text 'CreateTest_20250923_102123'.</msg>
<status status="PASS" starttime="20250923 10:21:25.656" endtime="20250923 10:21:25.662"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${description}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 10:21:25.669" level="INFO">Current page contains text 'Test dependency created by Robot Framework automation'.</msg>
<status status="PASS" starttime="20250923 10:21:25.663" endtime="20250923 10:21:25.669"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${TEST_DEP_TEAM}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 10:21:25.675" level="INFO">Current page contains text 'Quality Flow'.</msg>
<status status="PASS" starttime="20250923 10:21:25.669" endtime="20250923 10:21:25.675"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:25.676" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:25.676" endtime="20250923 10:21:25.679"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:26.681" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:25.680" endtime="20250923 10:21:26.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:26.682" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:21:26.682" endtime="20250923 10:21:26.682"/>
</kw>
<status status="PASS" starttime="20250923 10:21:25.676" endtime="20250923 10:21:26.682"/>
</kw>
<status status="PASS" starttime="20250923 10:21:25.675" endtime="20250923 10:21:26.682"/>
</kw>
<doc>Test successful creation of a new dependency</doc>
<tag>create</tag>
<tag>crud</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20250923 10:21:18.952" endtime="20250923 10:21:26.682"/>
</test>
<test id="s1-t4" name="TC016 - Add Dependency With Minimal Required Fields" line="70">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:26.685" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:26.684" endtime="20250923 10:21:26.690"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:27.691" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:26.690" endtime="20250923 10:21:27.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:27.692" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:21:27.691" endtime="20250923 10:21:27.692"/>
</kw>
<status status="PASS" starttime="20250923 10:21:26.684" endtime="20250923 10:21:27.692"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:21:27.693" endtime="20250923 10:21:27.701"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:28.701" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:27.701" endtime="20250923 10:21:28.702"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:28.702" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:28.702" endtime="20250923 10:21:28.706"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:30.707" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:21:28.706" endtime="20250923 10:21:30.707"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:30.708" endtime="20250923 10:21:30.721"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:30.722" endtime="20250923 10:21:30.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:30.731" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:21:30.731" endtime="20250923 10:21:30.731"/>
</kw>
<status status="PASS" starttime="20250923 10:21:27.692" endtime="20250923 10:21:30.731"/>
</kw>
<status status="PASS" starttime="20250923 10:21:27.692" endtime="20250923 10:21:30.732"/>
</kw>
<status status="PASS" starttime="20250923 10:21:26.683" endtime="20250923 10:21:30.732"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>MinimalTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:21:30.732" level="INFO">${timestamp} = 20250923_102130</msg>
<status status="PASS" starttime="20250923 10:21:30.732" endtime="20250923 10:21:30.732"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:21:30.732" level="INFO">${unique_name} = MinimalTest_20250923_102130</msg>
<status status="PASS" starttime="20250923 10:21:30.732" endtime="20250923 10:21:30.732"/>
</kw>
<msg timestamp="20250923 10:21:30.732" level="INFO">${unique_name} = MinimalTest_20250923_102130</msg>
<status status="PASS" starttime="20250923 10:21:30.732" endtime="20250923 10:21:30.732"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Minimal test dependency with required fields only</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:21:30.733" level="INFO">${description} = Minimal test dependency with required fields only</msg>
<status status="PASS" starttime="20250923 10:21:30.732" endtime="20250923 10:21:30.733"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:30.734" endtime="20250923 10:21:30.742"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:30.742" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:21:30.742" endtime="20250923 10:21:30.765"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:30.765" endtime="20250923 10:21:30.774"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:30.774" endtime="20250923 10:21:30.789"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:30.790" endtime="20250923 10:21:30.799"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:30.799" endtime="20250923 10:21:30.808"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:30.808" level="INFO">Typing text 'MinimalTest_20250923_102130' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:21:30.808" endtime="20250923 10:21:30.858"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:30.858" level="INFO">Typing text 'Minimal test dependency with required fields only' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:21:30.858" endtime="20250923 10:21:30.899"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:21:30.899" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:21:30.899" endtime="20250923 10:21:30.928"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:21:30.928" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:21:30.928" endtime="20250923 10:21:30.943"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:21:30.943" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:21:30.943" endtime="20250923 10:21:30.959"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:21:30.960" endtime="20250923 10:21:30.960"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:30.960" endtime="20250923 10:21:30.969"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:30.970" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:21:30.969" endtime="20250923 10:21:31.000"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:21:31.000" endtime="20250923 10:21:31.008"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:33.009" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:21:31.008" endtime="20250923 10:21:33.009"/>
</kw>
<status status="PASS" starttime="20250923 10:21:30.733" endtime="20250923 10:21:33.009"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:21:33.010" endtime="20250923 10:21:33.022"/>
</kw>
<status status="PASS" starttime="20250923 10:21:33.009" endtime="20250923 10:21:33.022"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NOTIFICATION}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:33.023" endtime="20250923 10:21:33.033"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${actual_message}</var>
<arg>${NOTIFICATION}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:33.043" level="INFO">${actual_message} = ✅ Dependency "" created successfully!
×</msg>
<status status="PASS" starttime="20250923 10:21:33.034" endtime="20250923 10:21:33.043"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${actual_message}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250923 10:21:33.043" endtime="20250923 10:21:33.043"/>
</kw>
<status status="PASS" starttime="20250923 10:21:33.022" endtime="20250923 10:21:33.043"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:33.045" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:33.044" endtime="20250923 10:21:33.049"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:34.051" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:33.049" endtime="20250923 10:21:34.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:34.051" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:21:34.051" endtime="20250923 10:21:34.051"/>
</kw>
<status status="PASS" starttime="20250923 10:21:33.043" endtime="20250923 10:21:34.051"/>
</kw>
<status status="PASS" starttime="20250923 10:21:33.043" endtime="20250923 10:21:34.052"/>
</kw>
<doc>Test creating dependency with only required fields</doc>
<tag>create</tag>
<tag>crud</tag>
<tag>minimal</tag>
<status status="PASS" starttime="20250923 10:21:26.683" endtime="20250923 10:21:34.052"/>
</test>
<test id="s1-t5" name="TC017 - Validate Required Field - Name" line="82">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:34.054" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:34.054" endtime="20250923 10:21:34.060"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:35.063" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:34.060" endtime="20250923 10:21:35.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:35.070" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:21:35.067" endtime="20250923 10:21:35.071"/>
</kw>
<status status="PASS" starttime="20250923 10:21:34.053" endtime="20250923 10:21:35.072"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:21:35.074" endtime="20250923 10:21:35.089"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:36.107" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:35.089" endtime="20250923 10:21:36.108"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:36.109" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:36.108" endtime="20250923 10:21:36.115"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:38.118" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:21:36.116" endtime="20250923 10:21:38.118"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:38.119" endtime="20250923 10:21:38.134"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:38.134" endtime="20250923 10:21:38.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:38.144" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:21:38.144" endtime="20250923 10:21:38.144"/>
</kw>
<status status="PASS" starttime="20250923 10:21:35.074" endtime="20250923 10:21:38.144"/>
</kw>
<status status="PASS" starttime="20250923 10:21:35.072" endtime="20250923 10:21:38.144"/>
</kw>
<status status="PASS" starttime="20250923 10:21:34.053" endtime="20250923 10:21:38.144"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:38.145" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:21:38.145" endtime="20250923 10:21:38.172"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:38.172" endtime="20250923 10:21:38.181"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>Test description without name</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:38.182" level="INFO">Typing text 'Test description without name' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:21:38.182" endtime="20250923 10:21:38.232"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:21:38.233" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:21:38.232" endtime="20250923 10:21:38.260"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:38.261" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-submit')]'.</msg>
<msg timestamp="20250923 10:21:48.555" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:21:48.555" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000100feb418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000100fe33b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000100b0cec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x0000000100b5542c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000100b4a220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000100b49cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000100b95604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x0000000100b480d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000100fafb08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000100fb2d20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000100f90e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000100fb35cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000100f8259c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000100fd29f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000100fd2b70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000100fe3000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 10:21:38.260" endtime="20250923 10:21:48.852"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 10:21:48.857" endtime="20250923 10:21:48.859"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:48.877" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:48.877" endtime="20250923 10:21:48.890"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:49.899" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:48.896" endtime="20250923 10:21:49.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:49.900" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:21:49.900" endtime="20250923 10:21:49.900"/>
</kw>
<status status="PASS" starttime="20250923 10:21:48.876" endtime="20250923 10:21:49.900"/>
</kw>
<status status="PASS" starttime="20250923 10:21:48.865" endtime="20250923 10:21:49.900"/>
</kw>
<doc>Test that name field is required for dependency creation</doc>
<tag>crud</tag>
<tag>negative</tag>
<tag>validation</tag>
<status status="FAIL" starttime="20250923 10:21:34.052" endtime="20250923 10:21:49.901">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000100feb418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000100fe33b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000100b0cec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x0000000100b5542c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000100b4a220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000100b49cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000100b95604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x0000000100b480d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000100fafb08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000100fb2d20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000100f90e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000100fb35cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000100f8259c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000100fd29f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000100fd2b70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000100fe3000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</status>
</test>
<test id="s1-t6" name="TC018 - Validate Required Field - Description" line="98">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:49.905" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:49.904" endtime="20250923 10:21:49.911"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:50.913" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:49.911" endtime="20250923 10:21:50.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:50.913" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:21:50.913" endtime="20250923 10:21:50.913"/>
</kw>
<status status="PASS" starttime="20250923 10:21:49.904" endtime="20250923 10:21:50.913"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:21:50.914" endtime="20250923 10:21:50.922"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:51.923" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:21:50.922" endtime="20250923 10:21:51.924"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:21:51.925" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:21:51.924" endtime="20250923 10:21:51.935"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:21:53.938" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:21:51.935" endtime="20250923 10:21:53.938"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:53.939" endtime="20250923 10:21:53.954"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:53.954" endtime="20250923 10:21:53.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:21:53.963" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:21:53.963" endtime="20250923 10:21:53.963"/>
</kw>
<status status="PASS" starttime="20250923 10:21:50.914" endtime="20250923 10:21:53.963"/>
</kw>
<status status="PASS" starttime="20250923 10:21:50.913" endtime="20250923 10:21:53.964"/>
</kw>
<status status="PASS" starttime="20250923 10:21:49.903" endtime="20250923 10:21:53.964"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:53.964" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:21:53.964" endtime="20250923 10:21:53.988"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:21:53.988" endtime="20250923 10:21:54.212"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>Test Name</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:54.213" level="INFO">Typing text 'Test Name' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:21:54.213" endtime="20250923 10:21:54.247"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>Short</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:54.247" level="INFO">Typing text 'Short' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:21:54.247" endtime="20250923 10:21:54.277"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:21:54.278" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:21:54.277" endtime="20250923 10:21:54.305"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:21:54.306" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-submit')]'.</msg>
<msg timestamp="20250923 10:22:04.630" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:22:04.631" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000100feb418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000100fe33b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000100b0cec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x0000000100b5542c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000100b4a220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000100b49cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000100b95604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x0000000100b480d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000100fafb08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000100fb2d20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000100f90e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000100fb35cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000100f8259c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000100fd29f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000100fd2b70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000100fe3000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 10:21:54.305" endtime="20250923 10:22:04.632"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 10:22:04.632" endtime="20250923 10:22:04.632"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:22:04.635" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:22:04.634" endtime="20250923 10:22:04.638"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:05.641" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:04.638" endtime="20250923 10:22:05.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:22:05.642" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:22:05.641" endtime="20250923 10:22:05.642"/>
</kw>
<status status="PASS" starttime="20250923 10:22:04.634" endtime="20250923 10:22:05.642"/>
</kw>
<status status="PASS" starttime="20250923 10:22:04.633" endtime="20250923 10:22:05.643"/>
</kw>
<doc>Test that description field validation works</doc>
<tag>crud</tag>
<tag>negative</tag>
<tag>validation</tag>
<status status="FAIL" starttime="20250923 10:21:49.902" endtime="20250923 10:22:05.643">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000100feb418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000100fe33b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000100b0cec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x0000000100b5542c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000100b4a220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000100b49cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000100b95604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x0000000100b480d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000100fafb08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000100fb2d20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000100f90e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000100fb35cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000100f8259c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000100fd29f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000100fd2b70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000100fe3000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</status>
</test>
<test id="s1-t7" name="TC019 - Edit Existing Dependency" line="115">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:22:05.646" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:22:05.645" endtime="20250923 10:22:05.651"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:06.653" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:05.651" endtime="20250923 10:22:06.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:22:06.655" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:22:06.654" endtime="20250923 10:22:06.655"/>
</kw>
<status status="PASS" starttime="20250923 10:22:05.645" endtime="20250923 10:22:06.655"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:22:06.656" endtime="20250923 10:22:06.666"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:07.667" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:06.666" endtime="20250923 10:22:07.667"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:22:07.668" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:22:07.667" endtime="20250923 10:22:07.679"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:09.681" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:22:07.679" endtime="20250923 10:22:09.683"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:09.684" endtime="20250923 10:22:09.700"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:09.700" endtime="20250923 10:22:09.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:22:09.710" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:22:09.710" endtime="20250923 10:22:09.710"/>
</kw>
<status status="PASS" starttime="20250923 10:22:06.655" endtime="20250923 10:22:09.710"/>
</kw>
<status status="PASS" starttime="20250923 10:22:06.655" endtime="20250923 10:22:09.710"/>
</kw>
<status status="PASS" starttime="20250923 10:22:05.645" endtime="20250923 10:22:09.710"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${original_name}</var>
<arg>EditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:22:09.712" level="INFO">${timestamp} = 20250923_102209</msg>
<status status="PASS" starttime="20250923 10:22:09.711" endtime="20250923 10:22:09.712"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:09.712" level="INFO">${unique_name} = EditTest_20250923_102209</msg>
<status status="PASS" starttime="20250923 10:22:09.712" endtime="20250923 10:22:09.712"/>
</kw>
<msg timestamp="20250923 10:22:09.712" level="INFO">${original_name} = EditTest_20250923_102209</msg>
<status status="PASS" starttime="20250923 10:22:09.711" endtime="20250923 10:22:09.712"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${original_desc}</var>
<arg>Original description for edit test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:09.712" level="INFO">${original_desc} = Original description for edit test</msg>
<status status="PASS" starttime="20250923 10:22:09.712" endtime="20250923 10:22:09.712"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${original_name}</arg>
<arg>${original_desc}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:09.714" endtime="20250923 10:22:09.723"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:09.723" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:22:09.723" endtime="20250923 10:22:09.749"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:09.749" endtime="20250923 10:22:09.971"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:09.971" endtime="20250923 10:22:09.980"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:09.980" endtime="20250923 10:22:09.989"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:09.989" endtime="20250923 10:22:09.998"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:09.998" level="INFO">Typing text 'EditTest_20250923_102209' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:22:09.998" endtime="20250923 10:22:10.043"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:10.044" level="INFO">Typing text 'Original description for edit test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:22:10.043" endtime="20250923 10:22:10.080"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:22:10.080" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:22:10.080" endtime="20250923 10:22:10.107"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:22:10.107" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:22:10.107" endtime="20250923 10:22:10.123"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:22:10.124" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:22:10.124" endtime="20250923 10:22:10.139"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:22:10.139" endtime="20250923 10:22:10.140"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:10.140" endtime="20250923 10:22:10.148"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:10.148" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:22:10.148" endtime="20250923 10:22:10.174"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:22:10.175" endtime="20250923 10:22:10.182"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:12.183" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:22:10.182" endtime="20250923 10:22:12.184"/>
</kw>
<status status="PASS" starttime="20250923 10:22:09.712" endtime="20250923 10:22:12.184"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_name}</var>
<arg>${original_name}_EDITED</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:12.185" level="INFO">${new_name} = EditTest_20250923_102209_EDITED</msg>
<status status="PASS" starttime="20250923 10:22:12.184" endtime="20250923 10:22:12.185"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_desc}</var>
<arg>Updated description after edit</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:12.185" level="INFO">${new_desc} = Updated description after edit</msg>
<status status="PASS" starttime="20250923 10:22:12.185" endtime="20250923 10:22:12.185"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_team}</var>
<arg>Data Collection</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:12.185" level="INFO">${new_team} = Data Collection</msg>
<status status="PASS" starttime="20250923 10:22:12.185" endtime="20250923 10:22:12.185"/>
</kw>
<kw name="Edit Dependency" library="depflow_keywords">
<arg>${original_name}</arg>
<arg>${new_name}</arg>
<arg>${new_desc}</arg>
<arg>${new_team}</arg>
<doc>Edits an existing dependency with updated div-based selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:12.189" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'EditTest_20250923_102209')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:22:12.189" endtime="20250923 10:22:12.189"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:12.189" endtime="20250923 10:22:12.211"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${edit_button}</var>
<arg>${dependency_row}//button[@class='btn-edit']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:12.212" level="INFO">${edit_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'EditTest_20250923_102209')]/ancestor::div[@class='dependency-row']//button[@class='btn-edit']</msg>
<status status="PASS" starttime="20250923 10:22:12.211" endtime="20250923 10:22:12.212"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:12.212" endtime="20250923 10:22:12.226"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:12.226" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'EditTest_20250923_102209')]/ancestor::div[@class='dependency-row']//button[@class='btn-edit']'.</msg>
<status status="PASS" starttime="20250923 10:22:12.226" endtime="20250923 10:22:12.260"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:12.260" endtime="20250923 10:22:12.488"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_name}' != '${EMPTY}'</arg>
<arg>Clear Element Text And Input</arg>
<arg>${EDIT_NAME_FIELD}</arg>
<arg>${new_name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Clear Element Text And Input" library="depflow_keywords">
<arg>${EDIT_NAME_FIELD}</arg>
<arg>${new_name}</arg>
<doc>Clears element text and inputs new text</doc>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${element}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 10:22:12.490" endtime="20250923 10:22:12.511"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:12.512" level="INFO">Typing text 'EditTest_20250923_102209_EDITED' into text field 'id:editName'.</msg>
<status status="PASS" starttime="20250923 10:22:12.511" endtime="20250923 10:22:12.547"/>
</kw>
<status status="PASS" starttime="20250923 10:22:12.490" endtime="20250923 10:22:12.547"/>
</kw>
<status status="PASS" starttime="20250923 10:22:12.488" endtime="20250923 10:22:12.547"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_description}' != '${EMPTY}'</arg>
<arg>Clear Element Text And Input</arg>
<arg>${EDIT_DESCRIPTION_FIELD}</arg>
<arg>${new_description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Clear Element Text And Input" library="depflow_keywords">
<arg>${EDIT_DESCRIPTION_FIELD}</arg>
<arg>${new_description}</arg>
<doc>Clears element text and inputs new text</doc>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${element}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 10:22:12.548" endtime="20250923 10:22:12.564"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:12.564" level="INFO">Typing text 'Updated description after edit' into text field 'id:editDescription'.</msg>
<status status="PASS" starttime="20250923 10:22:12.564" endtime="20250923 10:22:12.598"/>
</kw>
<status status="PASS" starttime="20250923 10:22:12.548" endtime="20250923 10:22:12.598"/>
</kw>
<status status="PASS" starttime="20250923 10:22:12.547" endtime="20250923 10:22:12.598"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_team}' != '${EMPTY}'</arg>
<arg>Select From List By Label</arg>
<arg>${EDIT_TEAM_SELECT}</arg>
<arg>${new_team}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${EDIT_TEAM_SELECT}</arg>
<arg>${new_team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:22:12.600" level="INFO">Selecting options from selection list 'id:editTeam' by label Data Collection.</msg>
<status status="PASS" starttime="20250923 10:22:12.599" endtime="20250923 10:22:12.657"/>
</kw>
<status status="PASS" starttime="20250923 10:22:12.599" endtime="20250923 10:22:12.657"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_status}' != '${EMPTY}'</arg>
<arg>Select From List By Value</arg>
<arg>${EDIT_STATUS_SELECT}</arg>
<arg>${new_status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:22:12.657" endtime="20250923 10:22:12.658"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_priority}' != '${EMPTY}'</arg>
<arg>Select From List By Value</arg>
<arg>${EDIT_PRIORITY_SELECT}</arg>
<arg>${new_priority}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:22:12.658" endtime="20250923 10:22:12.659"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:12.660" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-submit')]'.</msg>
<msg timestamp="20250923 10:22:22.887" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:22:22.888" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000100feb418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000100fe33b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000100b0cec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x0000000100b5542c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000100b4a220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000100b49cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000100b95604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x0000000100b480d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000100fafb08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000100fb2d20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000100f90e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000100fb35cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000100f8259c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000100fd29f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000100fd2b70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000100fe3000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 10:22:12.659" endtime="20250923 10:22:22.888"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 10:22:22.889" endtime="20250923 10:22:22.889"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 10:22:22.889" endtime="20250923 10:22:22.889"/>
</kw>
<status status="FAIL" starttime="20250923 10:22:12.186" endtime="20250923 10:22:22.889"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${new_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 10:22:22.889" endtime="20250923 10:22:22.889"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${original_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 10:22:22.889" endtime="20250923 10:22:22.889"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<status status="NOT RUN" starttime="20250923 10:22:22.889" endtime="20250923 10:22:22.889"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:22:22.890" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:22:22.889" endtime="20250923 10:22:22.895"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:23.896" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:22.896" endtime="20250923 10:22:23.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:22:23.897" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:22:23.896" endtime="20250923 10:22:23.897"/>
</kw>
<status status="PASS" starttime="20250923 10:22:22.889" endtime="20250923 10:22:23.897"/>
</kw>
<status status="PASS" starttime="20250923 10:22:22.889" endtime="20250923 10:22:23.897"/>
</kw>
<doc>Test editing an existing dependency</doc>
<tag>crud</tag>
<tag>edit</tag>
<tag>update</tag>
<status status="FAIL" starttime="20250923 10:22:05.644" endtime="20250923 10:22:23.897">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000100feb418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000100fe33b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000100b0cec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x0000000100b5542c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000100b4a220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000100b49cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000100b95604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x0000000100b480d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000100fafb08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000100fb2d20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000100f90e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000100fb35cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000100f8259c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000100fd29f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000100fd2b70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000100fe3000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</status>
</test>
<test id="s1-t8" name="TC020 - Delete Dependency Successfully" line="136">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:22:23.900" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:22:23.900" endtime="20250923 10:22:23.905"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:24.908" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:23.905" endtime="20250923 10:22:24.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:22:24.909" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:22:24.908" endtime="20250923 10:22:24.909"/>
</kw>
<status status="PASS" starttime="20250923 10:22:23.899" endtime="20250923 10:22:24.909"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:22:24.912" endtime="20250923 10:22:24.920"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:25.922" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:24.920" endtime="20250923 10:22:25.922"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:22:25.923" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:22:25.922" endtime="20250923 10:22:25.935"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:27.938" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:22:25.935" endtime="20250923 10:22:27.939"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:27.940" endtime="20250923 10:22:27.964"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:27.964" endtime="20250923 10:22:27.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:22:27.977" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:22:27.976" endtime="20250923 10:22:27.977"/>
</kw>
<status status="PASS" starttime="20250923 10:22:24.911" endtime="20250923 10:22:27.977"/>
</kw>
<status status="PASS" starttime="20250923 10:22:24.909" endtime="20250923 10:22:27.977"/>
</kw>
<status status="PASS" starttime="20250923 10:22:23.899" endtime="20250923 10:22:27.977"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>DeleteTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:22:27.978" level="INFO">${timestamp} = 20250923_102227</msg>
<status status="PASS" starttime="20250923 10:22:27.978" endtime="20250923 10:22:27.978"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:27.978" level="INFO">${unique_name} = DeleteTest_20250923_102227</msg>
<status status="PASS" starttime="20250923 10:22:27.978" endtime="20250923 10:22:27.978"/>
</kw>
<msg timestamp="20250923 10:22:27.978" level="INFO">${dep_name} = DeleteTest_20250923_102227</msg>
<status status="PASS" starttime="20250923 10:22:27.977" endtime="20250923 10:22:27.978"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency created for deletion test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:27.978" level="INFO">${description} = Dependency created for deletion test</msg>
<status status="PASS" starttime="20250923 10:22:27.978" endtime="20250923 10:22:27.978"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:27.980" endtime="20250923 10:22:27.988"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:27.989" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:22:27.989" endtime="20250923 10:22:28.025"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:28.026" endtime="20250923 10:22:28.043"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:28.043" endtime="20250923 10:22:28.052"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:28.053" endtime="20250923 10:22:28.098"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:28.098" endtime="20250923 10:22:28.114"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:28.115" level="INFO">Typing text 'DeleteTest_20250923_102227' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:22:28.114" endtime="20250923 10:22:28.179"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:28.179" level="INFO">Typing text 'Dependency created for deletion test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:22:28.179" endtime="20250923 10:22:28.246"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:22:28.247" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:22:28.246" endtime="20250923 10:22:28.283"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:22:28.284" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:22:28.283" endtime="20250923 10:22:28.300"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:22:28.301" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:22:28.300" endtime="20250923 10:22:28.317"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:22:28.317" endtime="20250923 10:22:28.318"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:28.318" endtime="20250923 10:22:28.325"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:28.326" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:22:28.325" endtime="20250923 10:22:28.352"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:22:28.353" endtime="20250923 10:22:28.360"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:30.362" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:22:28.360" endtime="20250923 10:22:30.363"/>
</kw>
<status status="PASS" starttime="20250923 10:22:27.979" endtime="20250923 10:22:30.363"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:30.365" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'DeleteTest_20250923_102227')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:22:30.365" endtime="20250923 10:22:30.365"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:30.365" endtime="20250923 10:22:30.389"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:30.389" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'DeleteTest_20250923_102227')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:22:30.389" endtime="20250923 10:22:30.389"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:30.389" endtime="20250923 10:22:30.400"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:30.401" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'DeleteTest_20250923_102227')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:22:30.400" endtime="20250923 10:22:30.493"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:31.496" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:30.493" endtime="20250923 10:22:31.496"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:22:31.496" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:22:31.496" endtime="20250923 10:22:31.501"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:33.504" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:22:31.502" endtime="20250923 10:22:33.504"/>
</kw>
<status status="PASS" starttime="20250923 10:22:30.364" endtime="20250923 10:22:33.504"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<msg timestamp="20250923 10:22:43.525" level="INFO">Current page does not contain element 'xpath://div[@class='dependency-name' and contains(text(), 'DeleteTest_20250923_102227')]'.</msg>
<status status="PASS" starttime="20250923 10:22:33.505" endtime="20250923 10:22:43.525"/>
</kw>
<status status="PASS" starttime="20250923 10:22:33.504" endtime="20250923 10:22:43.525"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:22:43.527" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:22:43.526" endtime="20250923 10:22:43.533"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:44.536" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:43.534" endtime="20250923 10:22:44.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:22:44.536" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:22:44.536" endtime="20250923 10:22:44.536"/>
</kw>
<status status="PASS" starttime="20250923 10:22:43.526" endtime="20250923 10:22:44.536"/>
</kw>
<status status="PASS" starttime="20250923 10:22:43.526" endtime="20250923 10:22:44.537"/>
</kw>
<doc>Test successful deletion of a dependency with confirmation</doc>
<tag>confirmation</tag>
<tag>crud</tag>
<tag>delete</tag>
<status status="PASS" starttime="20250923 10:22:23.898" endtime="20250923 10:22:44.537"/>
</test>
<test id="s1-t9" name="TC021 - Delete Dependency Cancel Confirmation" line="151">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:22:44.539" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:22:44.538" endtime="20250923 10:22:44.544"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:45.545" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:44.545" endtime="20250923 10:22:45.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:22:45.546" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:22:45.545" endtime="20250923 10:22:45.546"/>
</kw>
<status status="PASS" starttime="20250923 10:22:44.538" endtime="20250923 10:22:45.546"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:22:45.546" endtime="20250923 10:22:45.555"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:46.557" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:45.555" endtime="20250923 10:22:46.557"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:22:46.558" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:22:46.557" endtime="20250923 10:22:46.570"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:48.572" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:22:46.570" endtime="20250923 10:22:48.572"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:48.573" endtime="20250923 10:22:48.588"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:48.588" endtime="20250923 10:22:48.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:22:48.598" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:22:48.598" endtime="20250923 10:22:48.598"/>
</kw>
<status status="PASS" starttime="20250923 10:22:45.546" endtime="20250923 10:22:48.598"/>
</kw>
<status status="PASS" starttime="20250923 10:22:45.546" endtime="20250923 10:22:48.598"/>
</kw>
<status status="PASS" starttime="20250923 10:22:44.538" endtime="20250923 10:22:48.600"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>DeleteCancelTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:22:48.601" level="INFO">${timestamp} = 20250923_102248</msg>
<status status="PASS" starttime="20250923 10:22:48.600" endtime="20250923 10:22:48.601"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:48.601" level="INFO">${unique_name} = DeleteCancelTest_20250923_102248</msg>
<status status="PASS" starttime="20250923 10:22:48.601" endtime="20250923 10:22:48.601"/>
</kw>
<msg timestamp="20250923 10:22:48.601" level="INFO">${dep_name} = DeleteCancelTest_20250923_102248</msg>
<status status="PASS" starttime="20250923 10:22:48.600" endtime="20250923 10:22:48.601"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for delete cancel test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:48.601" level="INFO">${description} = Dependency for delete cancel test</msg>
<status status="PASS" starttime="20250923 10:22:48.601" endtime="20250923 10:22:48.601"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:48.603" endtime="20250923 10:22:48.612"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:48.612" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:22:48.612" endtime="20250923 10:22:48.636"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:48.636" endtime="20250923 10:22:48.859"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:48.860" endtime="20250923 10:22:48.869"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:48.869" endtime="20250923 10:22:48.878"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:48.878" endtime="20250923 10:22:48.886"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:48.886" level="INFO">Typing text 'DeleteCancelTest_20250923_102248' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:22:48.886" endtime="20250923 10:22:48.928"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:48.928" level="INFO">Typing text 'Dependency for delete cancel test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:22:48.928" endtime="20250923 10:22:48.963"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:22:48.963" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:22:48.963" endtime="20250923 10:22:48.987"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:22:48.988" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:22:48.988" endtime="20250923 10:22:49.003"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:22:49.003" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:22:49.003" endtime="20250923 10:22:49.018"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:22:49.019" endtime="20250923 10:22:49.019"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:49.019" endtime="20250923 10:22:49.026"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:49.027" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:22:49.026" endtime="20250923 10:22:49.054"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:22:49.054" endtime="20250923 10:22:49.062"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:51.065" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:22:49.062" endtime="20250923 10:22:51.065"/>
</kw>
<status status="PASS" starttime="20250923 10:22:48.602" endtime="20250923 10:22:51.065"/>
</kw>
<kw name="Cancel Delete Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Attempts to delete a dependency but cancels the confirmation</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:51.066" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'DeleteCancelTest_20250923_102248')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:22:51.066" endtime="20250923 10:22:51.066"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:51.066" endtime="20250923 10:22:51.084"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:22:51.084" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'DeleteCancelTest_20250923_102248')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:22:51.084" endtime="20250923 10:22:51.084"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:51.085" endtime="20250923 10:22:51.097"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:51.097" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'DeleteCancelTest_20250923_102248')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:22:51.097" endtime="20250923 10:22:51.142"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:52.142" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:51.142" endtime="20250923 10:22:52.143"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>DISMISS</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:22:52.143" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:22:52.143" endtime="20250923 10:22:52.147"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:53.149" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:52.147" endtime="20250923 10:22:53.149"/>
</kw>
<status status="PASS" starttime="20250923 10:22:51.065" endtime="20250923 10:22:53.149"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:22:53.149" endtime="20250923 10:22:53.161"/>
</kw>
<status status="PASS" starttime="20250923 10:22:53.149" endtime="20250923 10:22:53.161"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:22:53.163" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:22:53.162" endtime="20250923 10:22:53.168"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:54.169" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:53.168" endtime="20250923 10:22:54.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:22:54.170" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:22:54.170" endtime="20250923 10:22:54.170"/>
</kw>
<status status="PASS" starttime="20250923 10:22:53.162" endtime="20250923 10:22:54.170"/>
</kw>
<status status="PASS" starttime="20250923 10:22:53.162" endtime="20250923 10:22:54.170"/>
</kw>
<doc>Test canceling dependency deletion via confirmation dialog</doc>
<tag>cancel</tag>
<tag>confirmation</tag>
<tag>crud</tag>
<tag>delete</tag>
<status status="PASS" starttime="20250923 10:22:44.537" endtime="20250923 10:22:54.170"/>
</test>
<test id="s1-t10" name="TC022 - Cancel Add Dependency Operation" line="166">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:22:54.173" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:22:54.172" endtime="20250923 10:22:54.179"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:55.181" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:54.179" endtime="20250923 10:22:55.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:22:55.183" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:22:55.182" endtime="20250923 10:22:55.183"/>
</kw>
<status status="PASS" starttime="20250923 10:22:54.172" endtime="20250923 10:22:55.183"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:22:55.185" endtime="20250923 10:22:55.197"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:56.200" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:22:55.197" endtime="20250923 10:22:56.200"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:22:56.201" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:22:56.200" endtime="20250923 10:22:56.213"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:22:58.214" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:22:56.213" endtime="20250923 10:22:58.214"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:58.215" endtime="20250923 10:22:58.231"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:58.231" endtime="20250923 10:22:58.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:22:58.242" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:22:58.242" endtime="20250923 10:22:58.242"/>
</kw>
<status status="PASS" starttime="20250923 10:22:55.184" endtime="20250923 10:22:58.242"/>
</kw>
<status status="PASS" starttime="20250923 10:22:55.184" endtime="20250923 10:22:58.242"/>
</kw>
<status status="PASS" starttime="20250923 10:22:54.172" endtime="20250923 10:22:58.242"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:58.243" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:22:58.242" endtime="20250923 10:22:58.269"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:22:58.269" endtime="20250923 10:22:58.488"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>Cancelled Dependency</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:58.489" level="INFO">Typing text 'Cancelled Dependency' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:22:58.488" endtime="20250923 10:22:58.525"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>This should not be saved</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:58.525" level="INFO">Typing text 'This should not be saved' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:22:58.525" endtime="20250923 10:22:58.557"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CANCEL_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:22:58.558" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-cancel')]'.</msg>
<status status="PASS" starttime="20250923 10:22:58.557" endtime="20250923 10:22:58.585"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:22:58.585" endtime="20250923 10:22:58.592"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>Cancelled Dependency</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<msg timestamp="20250923 10:23:08.633" level="INFO">Current page does not contain element 'xpath://div[@class='dependency-name' and contains(text(), 'Cancelled Dependency')]'.</msg>
<status status="PASS" starttime="20250923 10:22:58.593" endtime="20250923 10:23:08.633"/>
</kw>
<status status="PASS" starttime="20250923 10:22:58.593" endtime="20250923 10:23:08.634"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:23:08.635" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:23:08.635" endtime="20250923 10:23:08.642"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:09.644" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:23:08.642" endtime="20250923 10:23:09.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:23:09.644" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:23:09.644" endtime="20250923 10:23:09.645"/>
</kw>
<status status="PASS" starttime="20250923 10:23:08.634" endtime="20250923 10:23:09.645"/>
</kw>
<status status="PASS" starttime="20250923 10:23:08.634" endtime="20250923 10:23:09.645"/>
</kw>
<doc>Test canceling the add dependency operation</doc>
<tag>cancel</tag>
<tag>crud</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 10:22:54.171" endtime="20250923 10:23:09.645"/>
</test>
<test id="s1-t11" name="TC023 - Inline Edit Status Field" line="184">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:23:09.647" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:23:09.646" endtime="20250923 10:23:09.652"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:10.653" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:23:09.653" endtime="20250923 10:23:10.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:23:10.654" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:23:10.654" endtime="20250923 10:23:10.654"/>
</kw>
<status status="PASS" starttime="20250923 10:23:09.646" endtime="20250923 10:23:10.654"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:23:10.655" endtime="20250923 10:23:10.663"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:11.664" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:23:10.664" endtime="20250923 10:23:11.665"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:23:11.665" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:23:11.665" endtime="20250923 10:23:11.676"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:13.677" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:23:11.676" endtime="20250923 10:23:13.678"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:13.678" endtime="20250923 10:23:13.694"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:13.694" endtime="20250923 10:23:13.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:23:13.704" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:23:13.703" endtime="20250923 10:23:13.704"/>
</kw>
<status status="PASS" starttime="20250923 10:23:10.655" endtime="20250923 10:23:13.704"/>
</kw>
<status status="PASS" starttime="20250923 10:23:10.655" endtime="20250923 10:23:13.704"/>
</kw>
<status status="PASS" starttime="20250923 10:23:09.646" endtime="20250923 10:23:13.704"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>StatusEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:23:13.704" level="INFO">${timestamp} = 20250923_102313</msg>
<status status="PASS" starttime="20250923 10:23:13.704" endtime="20250923 10:23:13.704"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:13.704" level="INFO">${unique_name} = StatusEditTest_20250923_102313</msg>
<status status="PASS" starttime="20250923 10:23:13.704" endtime="20250923 10:23:13.704"/>
</kw>
<msg timestamp="20250923 10:23:13.705" level="INFO">${dep_name} = StatusEditTest_20250923_102313</msg>
<status status="PASS" starttime="20250923 10:23:13.704" endtime="20250923 10:23:13.705"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for status inline editing</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:13.705" level="INFO">${description} = Dependency for status inline editing</msg>
<status status="PASS" starttime="20250923 10:23:13.705" endtime="20250923 10:23:13.705"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:13.706" endtime="20250923 10:23:13.714"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:13.714" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:23:13.714" endtime="20250923 10:23:13.738"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:13.738" endtime="20250923 10:23:13.749"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:13.750" endtime="20250923 10:23:13.765"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:13.765" endtime="20250923 10:23:13.776"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:13.777" endtime="20250923 10:23:13.786"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:13.786" level="INFO">Typing text 'StatusEditTest_20250923_102313' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:23:13.786" endtime="20250923 10:23:13.820"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:13.821" level="INFO">Typing text 'Dependency for status inline editing' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:23:13.820" endtime="20250923 10:23:13.970"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:23:13.971" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:23:13.971" endtime="20250923 10:23:14.003"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:23:14.003" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:23:14.003" endtime="20250923 10:23:14.021"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:23:14.021" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:23:14.021" endtime="20250923 10:23:14.037"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:23:14.038" endtime="20250923 10:23:14.038"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:14.038" endtime="20250923 10:23:14.047"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:14.047" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:23:14.047" endtime="20250923 10:23:14.081"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:23:14.081" endtime="20250923 10:23:14.089"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:16.090" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:23:14.089" endtime="20250923 10:23:16.090"/>
</kw>
<status status="PASS" starttime="20250923 10:23:13.705" endtime="20250923 10:23:16.090"/>
</kw>
<kw name="Test Inline Status Edit" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>IN PROGRESS</arg>
<doc>Tests inline editing of status field via dropdown with updated selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:16.091" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusEditTest_20250923_102313')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:23:16.091" endtime="20250923 10:23:16.091"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:16.091" endtime="20250923 10:23:16.108"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status_dropdown}</var>
<arg>${dependency_row}//select[contains(@class, 'status-dropdown')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:16.109" level="INFO">${status_dropdown} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusEditTest_20250923_102313')]/ancestor::div[@class='dependency-row']//select[contains(@class, 'status-dropd...</msg>
<status status="PASS" starttime="20250923 10:23:16.109" endtime="20250923 10:23:16.109"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${status_dropdown}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:16.109" endtime="20250923 10:23:16.121"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${status_dropdown}</arg>
<arg>${new_status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:23:16.121" level="INFO">Selecting options from selection list 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusEditTest_20250923_102313')]/ancestor::div[@class='dependency-row']//select[contains(@class, 'status-dropdown')]' by value IN PROGRESS.</msg>
<status status="PASS" starttime="20250923 10:23:16.121" endtime="20250923 10:23:16.155"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:18.156" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:23:16.155" endtime="20250923 10:23:18.156"/>
</kw>
<status status="PASS" starttime="20250923 10:23:16.090" endtime="20250923 10:23:18.156"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:23:18.158" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:23:18.158" endtime="20250923 10:23:18.166"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:19.167" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:23:18.166" endtime="20250923 10:23:19.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:23:19.168" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:23:19.167" endtime="20250923 10:23:19.168"/>
</kw>
<status status="PASS" starttime="20250923 10:23:18.157" endtime="20250923 10:23:19.168"/>
</kw>
<status status="PASS" starttime="20250923 10:23:18.156" endtime="20250923 10:23:19.168"/>
</kw>
<doc>Test inline editing of status field via dropdown</doc>
<tag>crud</tag>
<tag>inline_edit</tag>
<tag>status</tag>
<tag>update</tag>
<status status="PASS" starttime="20250923 10:23:09.645" endtime="20250923 10:23:19.168"/>
</test>
<test id="s1-t12" name="TC024 - Inline Edit Priority Field" line="196">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:23:19.171" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:23:19.169" endtime="20250923 10:23:19.175"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:20.178" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:23:19.176" endtime="20250923 10:23:20.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:23:20.179" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:23:20.179" endtime="20250923 10:23:20.179"/>
</kw>
<status status="PASS" starttime="20250923 10:23:19.169" endtime="20250923 10:23:20.179"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:23:20.180" endtime="20250923 10:23:20.188"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:21.190" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:23:20.189" endtime="20250923 10:23:21.191"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:23:21.193" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:23:21.192" endtime="20250923 10:23:21.208"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:23.209" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:23:21.209" endtime="20250923 10:23:23.209"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:23.210" endtime="20250923 10:23:23.225"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:23.225" endtime="20250923 10:23:23.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:23:23.235" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:23:23.235" endtime="20250923 10:23:23.235"/>
</kw>
<status status="PASS" starttime="20250923 10:23:20.180" endtime="20250923 10:23:23.235"/>
</kw>
<status status="PASS" starttime="20250923 10:23:20.179" endtime="20250923 10:23:23.235"/>
</kw>
<status status="PASS" starttime="20250923 10:23:19.169" endtime="20250923 10:23:23.235"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>PriorityEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:23:23.236" level="INFO">${timestamp} = 20250923_102323</msg>
<status status="PASS" starttime="20250923 10:23:23.236" endtime="20250923 10:23:23.236"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:23.236" level="INFO">${unique_name} = PriorityEditTest_20250923_102323</msg>
<status status="PASS" starttime="20250923 10:23:23.236" endtime="20250923 10:23:23.236"/>
</kw>
<msg timestamp="20250923 10:23:23.236" level="INFO">${dep_name} = PriorityEditTest_20250923_102323</msg>
<status status="PASS" starttime="20250923 10:23:23.236" endtime="20250923 10:23:23.236"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for priority inline editing</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:23.237" level="INFO">${description} = Dependency for priority inline editing</msg>
<status status="PASS" starttime="20250923 10:23:23.237" endtime="20250923 10:23:23.237"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>LOW</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:23.238" endtime="20250923 10:23:23.246"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:23.246" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:23:23.246" endtime="20250923 10:23:23.271"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:23.271" endtime="20250923 10:23:23.284"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:23.284" endtime="20250923 10:23:23.297"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:23.297" endtime="20250923 10:23:23.310"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:23.310" endtime="20250923 10:23:23.317"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:23.318" level="INFO">Typing text 'PriorityEditTest_20250923_102323' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:23:23.317" endtime="20250923 10:23:23.355"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:23.355" level="INFO">Typing text 'Dependency for priority inline editing' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:23:23.355" endtime="20250923 10:23:23.388"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:23:23.389" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:23:23.388" endtime="20250923 10:23:23.415"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:23:23.415" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:23:23.415" endtime="20250923 10:23:23.431"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:23:23.432" level="INFO">Selecting options from selection list 'id:addPriority' by value LOW.</msg>
<status status="PASS" starttime="20250923 10:23:23.432" endtime="20250923 10:23:23.456"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:23:23.456" endtime="20250923 10:23:23.456"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:23.457" endtime="20250923 10:23:23.464"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:23.464" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:23:23.464" endtime="20250923 10:23:23.491"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:23:23.491" endtime="20250923 10:23:23.499"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:25.500" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:23:23.499" endtime="20250923 10:23:25.500"/>
</kw>
<status status="PASS" starttime="20250923 10:23:23.237" endtime="20250923 10:23:25.500"/>
</kw>
<kw name="Test Inline Priority Edit" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>HIGH</arg>
<doc>Tests inline editing of priority field via dropdown with updated selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:25.501" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityEditTest_20250923_102323')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:23:25.501" endtime="20250923 10:23:25.501"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:25.501" endtime="20250923 10:23:25.518"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${priority_dropdown}</var>
<arg>${dependency_row}//select[contains(@class, 'priority-dropdown')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:25.519" level="INFO">${priority_dropdown} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityEditTest_20250923_102323')]/ancestor::div[@class='dependency-row']//select[contains(@class, 'priority-d...</msg>
<status status="PASS" starttime="20250923 10:23:25.519" endtime="20250923 10:23:25.519"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${priority_dropdown}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:25.519" endtime="20250923 10:23:25.531"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${priority_dropdown}</arg>
<arg>${new_priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:23:25.531" level="INFO">Selecting options from selection list 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityEditTest_20250923_102323')]/ancestor::div[@class='dependency-row']//select[contains(@class, 'priority-dropdown')]' by value HIGH.</msg>
<status status="PASS" starttime="20250923 10:23:25.531" endtime="20250923 10:23:25.561"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:27.562" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:23:25.561" endtime="20250923 10:23:27.562"/>
</kw>
<status status="PASS" starttime="20250923 10:23:25.500" endtime="20250923 10:23:27.562"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:23:27.564" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:23:27.564" endtime="20250923 10:23:27.572"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:28.573" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:23:27.572" endtime="20250923 10:23:28.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:23:28.574" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:23:28.573" endtime="20250923 10:23:28.574"/>
</kw>
<status status="PASS" starttime="20250923 10:23:27.563" endtime="20250923 10:23:28.574"/>
</kw>
<status status="PASS" starttime="20250923 10:23:27.562" endtime="20250923 10:23:28.574"/>
</kw>
<doc>Test inline editing of priority field via dropdown</doc>
<tag>crud</tag>
<tag>inline_edit</tag>
<tag>priority</tag>
<tag>update</tag>
<status status="PASS" starttime="20250923 10:23:19.168" endtime="20250923 10:23:28.574"/>
</test>
<test id="s1-t13" name="TC025 - RBAC Admin Can Edit Any Dependency" line="208">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:23:28.578" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:23:28.578" endtime="20250923 10:23:28.584"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:29.585" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:23:28.584" endtime="20250923 10:23:29.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:23:29.586" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:23:29.586" endtime="20250923 10:23:29.586"/>
</kw>
<status status="PASS" starttime="20250923 10:23:28.577" endtime="20250923 10:23:29.587"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:23:29.587" endtime="20250923 10:23:29.596"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:30.598" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:23:29.596" endtime="20250923 10:23:30.599"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:23:30.600" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:23:30.599" endtime="20250923 10:23:30.611"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:32.612" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:23:30.611" endtime="20250923 10:23:32.612"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:32.612" endtime="20250923 10:23:32.626"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:32.626" endtime="20250923 10:23:32.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:23:32.637" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:23:32.636" endtime="20250923 10:23:32.637"/>
</kw>
<status status="PASS" starttime="20250923 10:23:29.587" endtime="20250923 10:23:32.637"/>
</kw>
<status status="PASS" starttime="20250923 10:23:29.587" endtime="20250923 10:23:32.637"/>
</kw>
<status status="PASS" starttime="20250923 10:23:28.577" endtime="20250923 10:23:32.637"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>AdminEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:23:32.637" level="INFO">${timestamp} = 20250923_102332</msg>
<status status="PASS" starttime="20250923 10:23:32.637" endtime="20250923 10:23:32.637"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:32.637" level="INFO">${unique_name} = AdminEditTest_20250923_102332</msg>
<status status="PASS" starttime="20250923 10:23:32.637" endtime="20250923 10:23:32.637"/>
</kw>
<msg timestamp="20250923 10:23:32.638" level="INFO">${dep_name} = AdminEditTest_20250923_102332</msg>
<status status="PASS" starttime="20250923 10:23:32.637" endtime="20250923 10:23:32.638"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for admin RBAC test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:32.638" level="INFO">${description} = Dependency for admin RBAC test</msg>
<status status="PASS" starttime="20250923 10:23:32.638" endtime="20250923 10:23:32.638"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:32.639" endtime="20250923 10:23:32.647"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:32.647" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:23:32.647" endtime="20250923 10:23:32.671"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:32.671" endtime="20250923 10:23:32.687"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:32.687" endtime="20250923 10:23:32.698"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:32.698" endtime="20250923 10:23:32.708"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:32.708" endtime="20250923 10:23:32.716"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:32.716" level="INFO">Typing text 'AdminEditTest_20250923_102332' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:23:32.716" endtime="20250923 10:23:32.751"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:32.752" level="INFO">Typing text 'Dependency for admin RBAC test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:23:32.751" endtime="20250923 10:23:32.786"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:23:32.786" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:23:32.786" endtime="20250923 10:23:32.809"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:23:32.810" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:23:32.809" endtime="20250923 10:23:32.823"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:23:32.824" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:23:32.823" endtime="20250923 10:23:32.838"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:23:32.838" endtime="20250923 10:23:32.838"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:32.838" endtime="20250923 10:23:32.845"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:32.845" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:23:32.845" endtime="20250923 10:23:32.873"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:23:32.873" endtime="20250923 10:23:32.880"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:34.881" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:23:32.880" endtime="20250923 10:23:34.881"/>
</kw>
<status status="PASS" starttime="20250923 10:23:32.638" endtime="20250923 10:23:34.881"/>
</kw>
<kw name="Verify Edit Button Visibility" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>True</arg>
<doc>Verifies edit button visibility based on RBAC rules with updated selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:34.882" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminEditTest_20250923_102332')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:23:34.882" endtime="20250923 10:23:34.882"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:34.882" endtime="20250923 10:23:34.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${edit_button}</var>
<arg>${dependency_row}//button[@class='btn-edit']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:34.901" level="INFO">${edit_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminEditTest_20250923_102332')]/ancestor::div[@class='dependency-row']//button[@class='btn-edit']</msg>
<status status="PASS" starttime="20250923 10:23:34.900" endtime="20250923 10:23:34.901"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${should_be_visible}</arg>
<arg>Element Should Be Visible</arg>
<arg>${edit_button}</arg>
<arg>ELSE</arg>
<arg>Element Should Not Be Visible</arg>
<arg>${edit_button}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:23:34.912" level="INFO">Element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminEditTest_20250923_102332')]/ancestor::div[@class='dependency-row']//button[@class='btn-edit']' is displayed.</msg>
<status status="PASS" starttime="20250923 10:23:34.901" endtime="20250923 10:23:34.913"/>
</kw>
<status status="PASS" starttime="20250923 10:23:34.901" endtime="20250923 10:23:34.913"/>
</kw>
<status status="PASS" starttime="20250923 10:23:34.881" endtime="20250923 10:23:34.913"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_name}</var>
<arg>${dep_name}_AdminEdited</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:34.913" level="INFO">${new_name} = AdminEditTest_20250923_102332_AdminEdited</msg>
<status status="PASS" starttime="20250923 10:23:34.913" endtime="20250923 10:23:34.913"/>
</kw>
<kw name="Edit Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${new_name}</arg>
<doc>Edits an existing dependency with updated div-based selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:34.916" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminEditTest_20250923_102332')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:23:34.915" endtime="20250923 10:23:34.916"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:34.916" endtime="20250923 10:23:34.923"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${edit_button}</var>
<arg>${dependency_row}//button[@class='btn-edit']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:34.924" level="INFO">${edit_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminEditTest_20250923_102332')]/ancestor::div[@class='dependency-row']//button[@class='btn-edit']</msg>
<status status="PASS" starttime="20250923 10:23:34.923" endtime="20250923 10:23:34.924"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:34.924" endtime="20250923 10:23:34.931"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:34.931" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminEditTest_20250923_102332')]/ancestor::div[@class='dependency-row']//button[@class='btn-edit']'.</msg>
<status status="PASS" starttime="20250923 10:23:34.931" endtime="20250923 10:23:34.961"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:34.961" endtime="20250923 10:23:35.187"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_name}' != '${EMPTY}'</arg>
<arg>Clear Element Text And Input</arg>
<arg>${EDIT_NAME_FIELD}</arg>
<arg>${new_name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Clear Element Text And Input" library="depflow_keywords">
<arg>${EDIT_NAME_FIELD}</arg>
<arg>${new_name}</arg>
<doc>Clears element text and inputs new text</doc>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${element}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 10:23:35.189" endtime="20250923 10:23:35.210"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:35.211" level="INFO">Typing text 'AdminEditTest_20250923_102332_AdminEdited' into text field 'id:editName'.</msg>
<status status="PASS" starttime="20250923 10:23:35.210" endtime="20250923 10:23:35.249"/>
</kw>
<status status="PASS" starttime="20250923 10:23:35.188" endtime="20250923 10:23:35.249"/>
</kw>
<status status="PASS" starttime="20250923 10:23:35.187" endtime="20250923 10:23:35.249"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_description}' != '${EMPTY}'</arg>
<arg>Clear Element Text And Input</arg>
<arg>${EDIT_DESCRIPTION_FIELD}</arg>
<arg>${new_description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:23:35.249" endtime="20250923 10:23:35.250"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_team}' != '${EMPTY}'</arg>
<arg>Select From List By Label</arg>
<arg>${EDIT_TEAM_SELECT}</arg>
<arg>${new_team}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:23:35.250" endtime="20250923 10:23:35.251"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_status}' != '${EMPTY}'</arg>
<arg>Select From List By Value</arg>
<arg>${EDIT_STATUS_SELECT}</arg>
<arg>${new_status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:23:35.251" endtime="20250923 10:23:35.252"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_priority}' != '${EMPTY}'</arg>
<arg>Select From List By Value</arg>
<arg>${EDIT_PRIORITY_SELECT}</arg>
<arg>${new_priority}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:23:35.252" endtime="20250923 10:23:35.252"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:35.252" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-submit')]'.</msg>
<msg timestamp="20250923 10:23:45.486" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-4.png"&gt;&lt;img src="selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:23:45.486" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000100feb418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000100fe33b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000100b0cec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x0000000100b5542c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000100b4a220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000100b49cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000100b95604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x0000000100b480d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000100fafb08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000100fb2d20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000100f90e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000100fb35cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000100f8259c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000100fd29f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000100fd2b70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000100fe3000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 10:23:35.252" endtime="20250923 10:23:45.487"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 10:23:45.487" endtime="20250923 10:23:45.487"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 10:23:45.487" endtime="20250923 10:23:45.487"/>
</kw>
<status status="FAIL" starttime="20250923 10:23:34.913" endtime="20250923 10:23:45.487"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${new_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 10:23:45.487" endtime="20250923 10:23:45.487"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:23:45.487" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:23:45.487" endtime="20250923 10:23:45.491"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:46.492" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:23:45.491" endtime="20250923 10:23:46.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:23:46.493" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:23:46.493" endtime="20250923 10:23:46.493"/>
</kw>
<status status="PASS" starttime="20250923 10:23:45.487" endtime="20250923 10:23:46.494"/>
</kw>
<status status="PASS" starttime="20250923 10:23:45.487" endtime="20250923 10:23:46.494"/>
</kw>
<doc>Test that admin users can edit any dependency</doc>
<tag>admin</tag>
<tag>crud</tag>
<tag>edit</tag>
<tag>rbac</tag>
<status status="FAIL" starttime="20250923 10:23:28.574" endtime="20250923 10:23:46.494">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000100feb418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000100fe33b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000100b0cec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x0000000100b5542c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000100b4a220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000100b49cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000100b95604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x0000000100b480d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000100fafb08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000100fb2d20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000100f90e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000100fb35cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000100f8259c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000100fd29f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000100fd2b70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000100fe3000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</status>
</test>
<test id="s1-t14" name="TC026 - RBAC Admin Can Delete Any Dependency" line="225">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:23:46.496" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:23:46.495" endtime="20250923 10:23:46.501"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:47.501" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:23:46.501" endtime="20250923 10:23:47.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:23:47.502" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:23:47.502" endtime="20250923 10:23:47.502"/>
</kw>
<status status="PASS" starttime="20250923 10:23:46.495" endtime="20250923 10:23:47.502"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:23:47.502" endtime="20250923 10:23:47.510"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:48.516" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:23:47.510" endtime="20250923 10:23:48.516"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:23:48.517" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:23:48.517" endtime="20250923 10:23:48.529"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:50.531" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:23:48.530" endtime="20250923 10:23:50.531"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:50.531" endtime="20250923 10:23:50.550"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:50.550" endtime="20250923 10:23:50.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:23:50.562" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:23:50.562" endtime="20250923 10:23:50.562"/>
</kw>
<status status="PASS" starttime="20250923 10:23:47.502" endtime="20250923 10:23:50.562"/>
</kw>
<status status="PASS" starttime="20250923 10:23:47.502" endtime="20250923 10:23:50.562"/>
</kw>
<status status="PASS" starttime="20250923 10:23:46.495" endtime="20250923 10:23:50.562"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>AdminDeleteTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:23:50.563" level="INFO">${timestamp} = 20250923_102350</msg>
<status status="PASS" starttime="20250923 10:23:50.563" endtime="20250923 10:23:50.563"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:50.563" level="INFO">${unique_name} = AdminDeleteTest_20250923_102350</msg>
<status status="PASS" starttime="20250923 10:23:50.563" endtime="20250923 10:23:50.563"/>
</kw>
<msg timestamp="20250923 10:23:50.563" level="INFO">${dep_name} = AdminDeleteTest_20250923_102350</msg>
<status status="PASS" starttime="20250923 10:23:50.563" endtime="20250923 10:23:50.563"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for admin delete RBAC test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:50.564" level="INFO">${description} = Dependency for admin delete RBAC test</msg>
<status status="PASS" starttime="20250923 10:23:50.563" endtime="20250923 10:23:50.564"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:50.565" endtime="20250923 10:23:50.574"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:50.575" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:23:50.574" endtime="20250923 10:23:50.600"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:50.600" endtime="20250923 10:23:50.610"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:50.610" endtime="20250923 10:23:50.623"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:50.623" endtime="20250923 10:23:50.634"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:50.634" endtime="20250923 10:23:50.642"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:50.643" level="INFO">Typing text 'AdminDeleteTest_20250923_102350' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:23:50.642" endtime="20250923 10:23:50.681"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:50.681" level="INFO">Typing text 'Dependency for admin delete RBAC test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:23:50.681" endtime="20250923 10:23:50.726"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:23:50.726" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:23:50.726" endtime="20250923 10:23:50.756"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:23:50.757" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:23:50.756" endtime="20250923 10:23:50.775"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:23:50.775" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:23:50.775" endtime="20250923 10:23:50.792"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:23:50.792" endtime="20250923 10:23:50.793"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:50.793" endtime="20250923 10:23:50.803"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:50.804" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:23:50.803" endtime="20250923 10:23:50.836"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:23:50.836" endtime="20250923 10:23:50.845"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:52.848" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:23:50.845" endtime="20250923 10:23:52.850"/>
</kw>
<status status="PASS" starttime="20250923 10:23:50.564" endtime="20250923 10:23:52.851"/>
</kw>
<kw name="Verify Delete Button Visibility" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>True</arg>
<doc>Verifies delete button visibility based on RBAC rules with updated selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:52.858" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminDeleteTest_20250923_102350')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:23:52.858" endtime="20250923 10:23:52.858"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:52.859" endtime="20250923 10:23:52.888"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:52.889" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminDeleteTest_20250923_102350')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:23:52.888" endtime="20250923 10:23:52.889"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${should_be_visible}</arg>
<arg>Element Should Be Visible</arg>
<arg>${delete_button}</arg>
<arg>ELSE</arg>
<arg>Element Should Not Be Visible</arg>
<arg>${delete_button}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:23:52.900" level="INFO">Element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminDeleteTest_20250923_102350')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']' is displayed.</msg>
<status status="PASS" starttime="20250923 10:23:52.889" endtime="20250923 10:23:52.901"/>
</kw>
<status status="PASS" starttime="20250923 10:23:52.889" endtime="20250923 10:23:52.901"/>
</kw>
<status status="PASS" starttime="20250923 10:23:52.854" endtime="20250923 10:23:52.901"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:52.901" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminDeleteTest_20250923_102350')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:23:52.901" endtime="20250923 10:23:52.901"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:52.901" endtime="20250923 10:23:52.910"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:23:52.910" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminDeleteTest_20250923_102350')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:23:52.910" endtime="20250923 10:23:52.910"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:23:52.910" endtime="20250923 10:23:52.917"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:23:52.918" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminDeleteTest_20250923_102350')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:23:52.917" endtime="20250923 10:23:53.034"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:54.037" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:23:53.034" endtime="20250923 10:23:54.037"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:23:54.038" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:23:54.038" endtime="20250923 10:23:54.045"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:23:56.049" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:23:54.046" endtime="20250923 10:23:56.049"/>
</kw>
<status status="PASS" starttime="20250923 10:23:52.901" endtime="20250923 10:23:56.049"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<msg timestamp="20250923 10:24:06.099" level="INFO">Current page does not contain element 'xpath://div[@class='dependency-name' and contains(text(), 'AdminDeleteTest_20250923_102350')]'.</msg>
<status status="PASS" starttime="20250923 10:23:56.050" endtime="20250923 10:24:06.101"/>
</kw>
<status status="PASS" starttime="20250923 10:23:56.049" endtime="20250923 10:24:06.102"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:24:06.108" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:24:06.106" endtime="20250923 10:24:06.115"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:07.120" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:24:06.117" endtime="20250923 10:24:07.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:24:07.121" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:24:07.120" endtime="20250923 10:24:07.121"/>
</kw>
<status status="PASS" starttime="20250923 10:24:06.105" endtime="20250923 10:24:07.121"/>
</kw>
<status status="PASS" starttime="20250923 10:24:06.104" endtime="20250923 10:24:07.121"/>
</kw>
<doc>Test that admin users can delete any dependency</doc>
<tag>admin</tag>
<tag>crud</tag>
<tag>delete</tag>
<tag>rbac</tag>
<status status="PASS" starttime="20250923 10:23:46.494" endtime="20250923 10:24:07.121"/>
</test>
<test id="s1-t15" name="TC027 - RBAC User Can Only Edit Own Dependencies" line="241">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:24:07.122" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:24:07.122" endtime="20250923 10:24:07.125"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:08.126" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:24:07.125" endtime="20250923 10:24:08.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:24:08.127" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:24:08.127" endtime="20250923 10:24:08.127"/>
</kw>
<status status="PASS" starttime="20250923 10:24:07.122" endtime="20250923 10:24:08.127"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:24:08.127" endtime="20250923 10:24:08.133"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:09.134" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:24:08.133" endtime="20250923 10:24:09.134"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:24:09.134" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:24:09.134" endtime="20250923 10:24:09.148"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:11.150" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:24:09.148" endtime="20250923 10:24:11.150"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:11.150" endtime="20250923 10:24:11.161"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:11.161" endtime="20250923 10:24:11.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:24:11.168" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:24:11.168" endtime="20250923 10:24:11.168"/>
</kw>
<status status="PASS" starttime="20250923 10:24:08.127" endtime="20250923 10:24:11.168"/>
</kw>
<status status="PASS" starttime="20250923 10:24:08.127" endtime="20250923 10:24:11.168"/>
</kw>
<status status="PASS" starttime="20250923 10:24:07.121" endtime="20250923 10:24:11.168"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:11.168" endtime="20250923 10:24:11.177"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:11.177" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-logout')]'.</msg>
<status status="PASS" starttime="20250923 10:24:11.177" endtime="20250923 10:24:11.314"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<msg timestamp="20250923 10:24:21.990" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-5.png"&gt;&lt;img src="selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:24:21.992" level="FAIL">Element 'id:userPanel' still visible after 10 seconds.</msg>
<status status="FAIL" starttime="20250923 10:24:11.314" endtime="20250923 10:24:22.173"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20250923 10:24:22.174" endtime="20250923 10:24:22.174"/>
</kw>
<status status="FAIL" starttime="20250923 10:24:11.168" endtime="20250923 10:24:22.174"/>
</kw>
<kw name="Login To DepFlow" library="depflow_keywords">
<arg>${USER_USERNAME}</arg>
<arg>${USER_PASSWORD}</arg>
<doc>Logs into DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 10:24:22.174" endtime="20250923 10:24:22.174"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 10:24:22.174" endtime="20250923 10:24:22.174"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>UserEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<status status="NOT RUN" starttime="20250923 10:24:22.174" endtime="20250923 10:24:22.174"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency created by regular user</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 10:24:22.175" endtime="20250923 10:24:22.175"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<status status="NOT RUN" starttime="20250923 10:24:22.175" endtime="20250923 10:24:22.175"/>
</kw>
<kw name="Verify Edit Button Visibility" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>True</arg>
<doc>Verifies edit button visibility based on RBAC rules with updated selectors</doc>
<status status="NOT RUN" starttime="20250923 10:24:22.175" endtime="20250923 10:24:22.175"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 10:24:22.175" endtime="20250923 10:24:22.175"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<status status="NOT RUN" starttime="20250923 10:24:22.175" endtime="20250923 10:24:22.175"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 10:24:22.175" endtime="20250923 10:24:22.175"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:24:22.177" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:24:22.176" endtime="20250923 10:24:22.184"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:23.186" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:24:22.184" endtime="20250923 10:24:23.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:24:23.187" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:24:23.187" endtime="20250923 10:24:23.187"/>
</kw>
<status status="PASS" starttime="20250923 10:24:22.176" endtime="20250923 10:24:23.188"/>
</kw>
<status status="PASS" starttime="20250923 10:24:22.175" endtime="20250923 10:24:23.188"/>
</kw>
<doc>Test that regular users can only edit dependencies they created</doc>
<tag>crud</tag>
<tag>edit</tag>
<tag>rbac</tag>
<tag>restriction</tag>
<tag>user</tag>
<status status="FAIL" starttime="20250923 10:24:07.121" endtime="20250923 10:24:23.188">Element 'id:userPanel' still visible after 10 seconds.</status>
</test>
<test id="s1-t16" name="TC028 - RBAC User Can Only Delete Own Dependencies" line="263">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:24:23.191" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:24:23.190" endtime="20250923 10:24:23.196"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:24.197" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:24:23.196" endtime="20250923 10:24:24.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:24:24.197" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:24:24.197" endtime="20250923 10:24:24.197"/>
</kw>
<status status="PASS" starttime="20250923 10:24:23.190" endtime="20250923 10:24:24.197"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:24:24.198" endtime="20250923 10:24:24.205"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:25.208" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:24:24.205" endtime="20250923 10:24:25.208"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:24:25.208" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:24:25.208" endtime="20250923 10:24:25.216"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:27.217" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:24:25.216" endtime="20250923 10:24:27.217"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:27.217" endtime="20250923 10:24:27.225"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:27.225" endtime="20250923 10:24:27.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:24:27.232" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:24:27.232" endtime="20250923 10:24:27.232"/>
</kw>
<status status="PASS" starttime="20250923 10:24:24.198" endtime="20250923 10:24:27.233"/>
</kw>
<status status="PASS" starttime="20250923 10:24:24.197" endtime="20250923 10:24:27.233"/>
</kw>
<status status="PASS" starttime="20250923 10:24:23.189" endtime="20250923 10:24:27.233"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:27.233" endtime="20250923 10:24:27.239"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:27.240" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-logout')]'.</msg>
<status status="PASS" starttime="20250923 10:24:27.240" endtime="20250923 10:24:27.264"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<msg timestamp="20250923 10:24:37.429" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-6.png"&gt;&lt;img src="selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:24:37.430" level="FAIL">Element 'id:userPanel' still visible after 10 seconds.</msg>
<status status="FAIL" starttime="20250923 10:24:27.264" endtime="20250923 10:24:37.430"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20250923 10:24:37.431" endtime="20250923 10:24:37.431"/>
</kw>
<status status="FAIL" starttime="20250923 10:24:27.233" endtime="20250923 10:24:37.431"/>
</kw>
<kw name="Login To DepFlow" library="depflow_keywords">
<arg>${USER_USERNAME}</arg>
<arg>${USER_PASSWORD}</arg>
<doc>Logs into DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 10:24:37.431" endtime="20250923 10:24:37.431"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 10:24:37.432" endtime="20250923 10:24:37.432"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>UserDeleteTest</arg>
<doc>Generates unique test data for test runs</doc>
<status status="NOT RUN" starttime="20250923 10:24:37.432" endtime="20250923 10:24:37.432"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for user delete RBAC test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 10:24:37.432" endtime="20250923 10:24:37.432"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<status status="NOT RUN" starttime="20250923 10:24:37.432" endtime="20250923 10:24:37.432"/>
</kw>
<kw name="Verify Delete Button Visibility" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>True</arg>
<doc>Verifies delete button visibility based on RBAC rules with updated selectors</doc>
<status status="NOT RUN" starttime="20250923 10:24:37.432" endtime="20250923 10:24:37.432"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<status status="NOT RUN" starttime="20250923 10:24:37.432" endtime="20250923 10:24:37.432"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 10:24:37.432" endtime="20250923 10:24:37.432"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 10:24:37.432" endtime="20250923 10:24:37.432"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<status status="NOT RUN" starttime="20250923 10:24:37.432" endtime="20250923 10:24:37.432"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 10:24:37.432" endtime="20250923 10:24:37.432"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:24:37.433" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:24:37.433" endtime="20250923 10:24:37.436"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:38.438" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:24:37.436" endtime="20250923 10:24:38.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:24:38.439" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:24:38.439" endtime="20250923 10:24:38.439"/>
</kw>
<status status="PASS" starttime="20250923 10:24:37.433" endtime="20250923 10:24:38.439"/>
</kw>
<status status="PASS" starttime="20250923 10:24:37.432" endtime="20250923 10:24:38.439"/>
</kw>
<doc>Test that regular users can only delete dependencies they created</doc>
<tag>crud</tag>
<tag>delete</tag>
<tag>rbac</tag>
<tag>restriction</tag>
<tag>user</tag>
<status status="FAIL" starttime="20250923 10:24:23.188" endtime="20250923 10:24:38.439">Element 'id:userPanel' still visible after 10 seconds.</status>
</test>
<test id="s1-t17" name="TC029 - Status Badge Color Verification" line="289">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:24:38.442" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:24:38.442" endtime="20250923 10:24:38.445"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:39.447" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:24:38.445" endtime="20250923 10:24:39.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:24:39.448" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:24:39.447" endtime="20250923 10:24:39.448"/>
</kw>
<status status="PASS" starttime="20250923 10:24:38.441" endtime="20250923 10:24:39.448"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:24:39.448" endtime="20250923 10:24:39.457"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:40.458" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:24:39.457" endtime="20250923 10:24:40.458"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:24:40.459" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:24:40.458" endtime="20250923 10:24:40.466"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:42.473" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:24:40.466" endtime="20250923 10:24:42.474"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:42.480" endtime="20250923 10:24:42.505"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:42.505" endtime="20250923 10:24:42.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:24:42.515" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:24:42.514" endtime="20250923 10:24:42.515"/>
</kw>
<status status="PASS" starttime="20250923 10:24:39.448" endtime="20250923 10:24:42.515"/>
</kw>
<status status="PASS" starttime="20250923 10:24:39.448" endtime="20250923 10:24:42.515"/>
</kw>
<status status="PASS" starttime="20250923 10:24:38.441" endtime="20250923 10:24:42.515"/>
</kw>
<for flavor="IN">
<var>${status}</var>
<value>@{STATUSES}</value>
<iter>
<var name="${status}">NOT STARTED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>StatusColor_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:24:42.518" level="INFO">${timestamp} = 20250923_102442</msg>
<status status="PASS" starttime="20250923 10:24:42.517" endtime="20250923 10:24:42.518"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:42.519" level="INFO">${unique_name} = StatusColor_NOT_STARTED_20250923_102442</msg>
<status status="PASS" starttime="20250923 10:24:42.519" endtime="20250923 10:24:42.519"/>
</kw>
<msg timestamp="20250923 10:24:42.519" level="INFO">${dep_name} = StatusColor_NOT_STARTED_20250923_102442</msg>
<status status="PASS" starttime="20250923 10:24:42.515" endtime="20250923 10:24:42.519"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Testing ${status} status color</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:42.519" level="INFO">${description} = Testing NOT STARTED status color</msg>
<status status="PASS" starttime="20250923 10:24:42.519" endtime="20250923 10:24:42.519"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:42.520" endtime="20250923 10:24:42.530"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:42.531" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:24:42.530" endtime="20250923 10:24:42.563"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:42.563" endtime="20250923 10:24:42.729"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:42.729" endtime="20250923 10:24:42.815"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:42.815" endtime="20250923 10:24:42.852"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:42.852" endtime="20250923 10:24:42.890"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:42.891" level="INFO">Typing text 'StatusColor_NOT_STARTED_20250923_102442' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:24:42.891" endtime="20250923 10:24:42.985"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:42.985" level="INFO">Typing text 'Testing NOT STARTED status color' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:24:42.985" endtime="20250923 10:24:43.017"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:24:43.018" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:24:43.018" endtime="20250923 10:24:43.046"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:24:43.047" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:24:43.046" endtime="20250923 10:24:43.063"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:24:43.063" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:24:43.063" endtime="20250923 10:24:43.079"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:24:43.080" endtime="20250923 10:24:43.080"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:43.080" endtime="20250923 10:24:43.087"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:43.087" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:24:43.087" endtime="20250923 10:24:43.113"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:24:43.113" endtime="20250923 10:24:43.122"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:45.123" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:24:43.122" endtime="20250923 10:24:45.124"/>
</kw>
<status status="PASS" starttime="20250923 10:24:42.519" endtime="20250923 10:24:45.127"/>
</kw>
<kw name="Verify Status Badge Color" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${status}</arg>
<doc>Verifies status badge has correct color styling with updated selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:45.129" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_NOT_STARTED_20250923_102442')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:24:45.129" endtime="20250923 10:24:45.129"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:45.129" endtime="20250923 10:24:45.143"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status_element}</var>
<arg>${dependency_row}//div[@class='dependency-status']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:45.143" level="INFO">${status_element} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_NOT_STARTED_20250923_102442')]/ancestor::div[@class='dependency-row']//div[@class='dependency-statu...</msg>
<status status="PASS" starttime="20250923 10:24:45.143" endtime="20250923 10:24:45.143"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${status_element}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:24:45.154" level="INFO">Element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_NOT_STARTED_20250923_102442')]/ancestor::div[@class='dependency-row']//div[@class='dependency-status']' is displayed.</msg>
<status status="PASS" starttime="20250923 10:24:45.143" endtime="20250923 10:24:45.154"/>
</kw>
<status status="PASS" starttime="20250923 10:24:45.128" endtime="20250923 10:24:45.154"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:45.155" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_NOT_STARTED_20250923_102442')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:24:45.155" endtime="20250923 10:24:45.155"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:45.155" endtime="20250923 10:24:45.164"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:45.165" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_NOT_STARTED_20250923_102442')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:24:45.165" endtime="20250923 10:24:45.165"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:45.165" endtime="20250923 10:24:45.175"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:45.176" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_NOT_STARTED_20250923_102442')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:24:45.175" endtime="20250923 10:24:45.334"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:46.336" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:24:45.335" endtime="20250923 10:24:46.337"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:24:46.337" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:24:46.337" endtime="20250923 10:24:46.342"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:48.343" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:24:46.342" endtime="20250923 10:24:48.343"/>
</kw>
<status status="PASS" starttime="20250923 10:24:45.154" endtime="20250923 10:24:48.343"/>
</kw>
<status status="PASS" starttime="20250923 10:24:42.515" endtime="20250923 10:24:48.343"/>
</iter>
<iter>
<var name="${status}">IN PROGRESS</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>StatusColor_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:24:48.345" level="INFO">${timestamp} = 20250923_102448</msg>
<status status="PASS" starttime="20250923 10:24:48.344" endtime="20250923 10:24:48.345"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:48.345" level="INFO">${unique_name} = StatusColor_IN_PROGRESS_20250923_102448</msg>
<status status="PASS" starttime="20250923 10:24:48.345" endtime="20250923 10:24:48.345"/>
</kw>
<msg timestamp="20250923 10:24:48.345" level="INFO">${dep_name} = StatusColor_IN_PROGRESS_20250923_102448</msg>
<status status="PASS" starttime="20250923 10:24:48.343" endtime="20250923 10:24:48.345"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Testing ${status} status color</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:48.345" level="INFO">${description} = Testing IN PROGRESS status color</msg>
<status status="PASS" starttime="20250923 10:24:48.345" endtime="20250923 10:24:48.345"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:48.346" endtime="20250923 10:24:48.355"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:48.356" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:24:48.355" endtime="20250923 10:24:48.438"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:48.438" endtime="20250923 10:24:48.656"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:48.657" endtime="20250923 10:24:48.666"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:48.666" endtime="20250923 10:24:48.675"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:48.675" endtime="20250923 10:24:48.681"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:48.682" level="INFO">Typing text 'StatusColor_IN_PROGRESS_20250923_102448' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:24:48.682" endtime="20250923 10:24:48.728"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:48.729" level="INFO">Typing text 'Testing IN PROGRESS status color' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:24:48.728" endtime="20250923 10:24:48.768"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:24:48.769" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:24:48.768" endtime="20250923 10:24:48.794"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:24:48.795" level="INFO">Selecting options from selection list 'id:addStatus' by value IN PROGRESS.</msg>
<status status="PASS" starttime="20250923 10:24:48.795" endtime="20250923 10:24:48.818"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:24:48.819" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:24:48.818" endtime="20250923 10:24:48.831"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:24:48.831" endtime="20250923 10:24:48.832"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:48.832" endtime="20250923 10:24:48.840"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:48.842" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:24:48.841" endtime="20250923 10:24:48.874"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:24:48.874" endtime="20250923 10:24:48.893"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:50.894" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:24:48.893" endtime="20250923 10:24:50.894"/>
</kw>
<status status="PASS" starttime="20250923 10:24:48.345" endtime="20250923 10:24:50.894"/>
</kw>
<kw name="Verify Status Badge Color" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${status}</arg>
<doc>Verifies status badge has correct color styling with updated selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:50.895" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_IN_PROGRESS_20250923_102448')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:24:50.894" endtime="20250923 10:24:50.895"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:50.895" endtime="20250923 10:24:50.904"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status_element}</var>
<arg>${dependency_row}//div[@class='dependency-status']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:50.904" level="INFO">${status_element} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_IN_PROGRESS_20250923_102448')]/ancestor::div[@class='dependency-row']//div[@class='dependency-statu...</msg>
<status status="PASS" starttime="20250923 10:24:50.904" endtime="20250923 10:24:50.904"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${status_element}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:24:50.913" level="INFO">Element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_IN_PROGRESS_20250923_102448')]/ancestor::div[@class='dependency-row']//div[@class='dependency-status']' is displayed.</msg>
<status status="PASS" starttime="20250923 10:24:50.904" endtime="20250923 10:24:50.913"/>
</kw>
<status status="PASS" starttime="20250923 10:24:50.894" endtime="20250923 10:24:50.913"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:50.914" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_IN_PROGRESS_20250923_102448')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:24:50.914" endtime="20250923 10:24:50.914"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:50.914" endtime="20250923 10:24:50.921"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:50.921" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_IN_PROGRESS_20250923_102448')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:24:50.921" endtime="20250923 10:24:50.921"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:50.921" endtime="20250923 10:24:50.930"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:50.930" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_IN_PROGRESS_20250923_102448')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:24:50.930" endtime="20250923 10:24:50.975"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:51.976" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:24:50.975" endtime="20250923 10:24:51.976"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:24:51.976" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:24:51.976" endtime="20250923 10:24:51.978"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:53.979" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:24:51.978" endtime="20250923 10:24:53.980"/>
</kw>
<status status="PASS" starttime="20250923 10:24:50.913" endtime="20250923 10:24:53.980"/>
</kw>
<status status="PASS" starttime="20250923 10:24:48.343" endtime="20250923 10:24:53.980"/>
</iter>
<iter>
<var name="${status}">BLOCKED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>StatusColor_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:24:53.982" level="INFO">${timestamp} = 20250923_102453</msg>
<status status="PASS" starttime="20250923 10:24:53.982" endtime="20250923 10:24:53.982"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:53.982" level="INFO">${unique_name} = StatusColor_BLOCKED_20250923_102453</msg>
<status status="PASS" starttime="20250923 10:24:53.982" endtime="20250923 10:24:53.982"/>
</kw>
<msg timestamp="20250923 10:24:53.983" level="INFO">${dep_name} = StatusColor_BLOCKED_20250923_102453</msg>
<status status="PASS" starttime="20250923 10:24:53.980" endtime="20250923 10:24:53.983"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Testing ${status} status color</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:53.983" level="INFO">${description} = Testing BLOCKED status color</msg>
<status status="PASS" starttime="20250923 10:24:53.983" endtime="20250923 10:24:53.983"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:53.985" endtime="20250923 10:24:53.997"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:53.998" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:24:53.997" endtime="20250923 10:24:54.027"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:54.027" endtime="20250923 10:24:54.037"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:54.037" endtime="20250923 10:24:54.047"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:54.047" endtime="20250923 10:24:54.057"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:54.057" endtime="20250923 10:24:54.066"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:54.067" level="INFO">Typing text 'StatusColor_BLOCKED_20250923_102453' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:24:54.066" endtime="20250923 10:24:54.106"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:54.106" level="INFO">Typing text 'Testing BLOCKED status color' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:24:54.106" endtime="20250923 10:24:54.141"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:24:54.142" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:24:54.141" endtime="20250923 10:24:54.168"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:24:54.169" level="INFO">Selecting options from selection list 'id:addStatus' by value BLOCKED.</msg>
<status status="PASS" starttime="20250923 10:24:54.168" endtime="20250923 10:24:54.195"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:24:54.195" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:24:54.195" endtime="20250923 10:24:54.211"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:24:54.211" endtime="20250923 10:24:54.212"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:54.212" endtime="20250923 10:24:54.220"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:54.220" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:24:54.220" endtime="20250923 10:24:54.253"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:24:54.253" endtime="20250923 10:24:54.263"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:56.264" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:24:54.264" endtime="20250923 10:24:56.265"/>
</kw>
<status status="PASS" starttime="20250923 10:24:53.983" endtime="20250923 10:24:56.265"/>
</kw>
<kw name="Verify Status Badge Color" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${status}</arg>
<doc>Verifies status badge has correct color styling with updated selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:56.265" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_BLOCKED_20250923_102453')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:24:56.265" endtime="20250923 10:24:56.265"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:56.265" endtime="20250923 10:24:56.275"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status_element}</var>
<arg>${dependency_row}//div[@class='dependency-status']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:56.275" level="INFO">${status_element} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_BLOCKED_20250923_102453')]/ancestor::div[@class='dependency-row']//div[@class='dependency-status']</msg>
<status status="PASS" starttime="20250923 10:24:56.275" endtime="20250923 10:24:56.275"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${status_element}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:24:56.283" level="INFO">Element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_BLOCKED_20250923_102453')]/ancestor::div[@class='dependency-row']//div[@class='dependency-status']' is displayed.</msg>
<status status="PASS" starttime="20250923 10:24:56.275" endtime="20250923 10:24:56.283"/>
</kw>
<status status="PASS" starttime="20250923 10:24:56.265" endtime="20250923 10:24:56.283"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:56.284" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_BLOCKED_20250923_102453')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:24:56.284" endtime="20250923 10:24:56.284"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:56.284" endtime="20250923 10:24:56.291"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:56.291" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_BLOCKED_20250923_102453')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:24:56.291" endtime="20250923 10:24:56.291"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:56.291" endtime="20250923 10:24:56.300"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:56.300" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_BLOCKED_20250923_102453')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:24:56.300" endtime="20250923 10:24:56.336"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:57.337" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:24:56.336" endtime="20250923 10:24:57.337"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:24:57.337" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:24:57.337" endtime="20250923 10:24:57.339"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:24:59.339" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:24:57.339" endtime="20250923 10:24:59.340"/>
</kw>
<status status="PASS" starttime="20250923 10:24:56.284" endtime="20250923 10:24:59.340"/>
</kw>
<status status="PASS" starttime="20250923 10:24:53.980" endtime="20250923 10:24:59.340"/>
</iter>
<iter>
<var name="${status}">COMPLETED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>StatusColor_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:24:59.342" level="INFO">${timestamp} = 20250923_102459</msg>
<status status="PASS" starttime="20250923 10:24:59.342" endtime="20250923 10:24:59.342"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:59.342" level="INFO">${unique_name} = StatusColor_COMPLETED_20250923_102459</msg>
<status status="PASS" starttime="20250923 10:24:59.342" endtime="20250923 10:24:59.342"/>
</kw>
<msg timestamp="20250923 10:24:59.342" level="INFO">${dep_name} = StatusColor_COMPLETED_20250923_102459</msg>
<status status="PASS" starttime="20250923 10:24:59.340" endtime="20250923 10:24:59.342"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Testing ${status} status color</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:24:59.342" level="INFO">${description} = Testing COMPLETED status color</msg>
<status status="PASS" starttime="20250923 10:24:59.342" endtime="20250923 10:24:59.342"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:59.343" endtime="20250923 10:24:59.351"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:59.351" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:24:59.351" endtime="20250923 10:24:59.379"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:59.380" endtime="20250923 10:24:59.404"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:59.404" endtime="20250923 10:24:59.417"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:59.418" endtime="20250923 10:24:59.431"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:59.431" endtime="20250923 10:24:59.440"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:59.441" level="INFO">Typing text 'StatusColor_COMPLETED_20250923_102459' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:24:59.441" endtime="20250923 10:24:59.495"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:59.496" level="INFO">Typing text 'Testing COMPLETED status color' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:24:59.495" endtime="20250923 10:24:59.548"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:24:59.549" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:24:59.548" endtime="20250923 10:24:59.585"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:24:59.586" level="INFO">Selecting options from selection list 'id:addStatus' by value COMPLETED.</msg>
<status status="PASS" starttime="20250923 10:24:59.585" endtime="20250923 10:24:59.624"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:24:59.624" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:24:59.624" endtime="20250923 10:24:59.645"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:24:59.646" endtime="20250923 10:24:59.646"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:24:59.647" endtime="20250923 10:24:59.655"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:24:59.655" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:24:59.655" endtime="20250923 10:24:59.689"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:24:59.690" endtime="20250923 10:24:59.705"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:01.723" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:24:59.705" endtime="20250923 10:25:01.723"/>
</kw>
<status status="PASS" starttime="20250923 10:24:59.342" endtime="20250923 10:25:01.723"/>
</kw>
<kw name="Verify Status Badge Color" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${status}</arg>
<doc>Verifies status badge has correct color styling with updated selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:01.724" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_COMPLETED_20250923_102459')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:25:01.724" endtime="20250923 10:25:01.724"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:01.724" endtime="20250923 10:25:01.744"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status_element}</var>
<arg>${dependency_row}//div[@class='dependency-status']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:01.745" level="INFO">${status_element} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_COMPLETED_20250923_102459')]/ancestor::div[@class='dependency-row']//div[@class='dependency-status'...</msg>
<status status="PASS" starttime="20250923 10:25:01.744" endtime="20250923 10:25:01.745"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${status_element}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:25:01.757" level="INFO">Element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_COMPLETED_20250923_102459')]/ancestor::div[@class='dependency-row']//div[@class='dependency-status']' is displayed.</msg>
<status status="PASS" starttime="20250923 10:25:01.745" endtime="20250923 10:25:01.757"/>
</kw>
<status status="PASS" starttime="20250923 10:25:01.723" endtime="20250923 10:25:01.757"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:01.758" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_COMPLETED_20250923_102459')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:25:01.757" endtime="20250923 10:25:01.758"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:01.758" endtime="20250923 10:25:01.764"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:01.764" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_COMPLETED_20250923_102459')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:25:01.764" endtime="20250923 10:25:01.764"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:01.764" endtime="20250923 10:25:01.772"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:01.772" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'StatusColor_COMPLETED_20250923_102459')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:25:01.772" endtime="20250923 10:25:01.797"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:02.799" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:01.798" endtime="20250923 10:25:02.799"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:25:02.799" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:25:02.799" endtime="20250923 10:25:02.804"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:04.806" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:02.804" endtime="20250923 10:25:04.807"/>
</kw>
<status status="PASS" starttime="20250923 10:25:01.757" endtime="20250923 10:25:04.807"/>
</kw>
<status status="PASS" starttime="20250923 10:24:59.340" endtime="20250923 10:25:04.807"/>
</iter>
<status status="PASS" starttime="20250923 10:24:42.515" endtime="20250923 10:25:04.808"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:25:04.810" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:25:04.809" endtime="20250923 10:25:04.818"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:05.818" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:04.818" endtime="20250923 10:25:05.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:25:05.819" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:25:05.819" endtime="20250923 10:25:05.819"/>
</kw>
<status status="PASS" starttime="20250923 10:25:04.809" endtime="20250923 10:25:05.819"/>
</kw>
<status status="PASS" starttime="20250923 10:25:04.809" endtime="20250923 10:25:05.819"/>
</kw>
<doc>Test that status badges display with correct colors</doc>
<tag>colors</tag>
<tag>crud</tag>
<tag>status</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 10:24:38.441" endtime="20250923 10:25:05.819"/>
</test>
<test id="s1-t18" name="TC030 - Priority Badge Color Verification" line="305">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:25:05.821" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:25:05.820" endtime="20250923 10:25:05.826"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:06.827" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:05.826" endtime="20250923 10:25:06.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:25:06.828" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:25:06.827" endtime="20250923 10:25:06.828"/>
</kw>
<status status="PASS" starttime="20250923 10:25:05.820" endtime="20250923 10:25:06.828"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:25:06.828" endtime="20250923 10:25:06.832"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:07.834" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:06.832" endtime="20250923 10:25:07.834"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:25:07.835" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:25:07.834" endtime="20250923 10:25:07.841"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:09.843" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:07.842" endtime="20250923 10:25:09.843"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:09.843" endtime="20250923 10:25:09.854"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:09.854" endtime="20250923 10:25:09.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:25:09.862" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:25:09.862" endtime="20250923 10:25:09.862"/>
</kw>
<status status="PASS" starttime="20250923 10:25:06.828" endtime="20250923 10:25:09.862"/>
</kw>
<status status="PASS" starttime="20250923 10:25:06.828" endtime="20250923 10:25:09.862"/>
</kw>
<status status="PASS" starttime="20250923 10:25:05.820" endtime="20250923 10:25:09.862"/>
</kw>
<for flavor="IN">
<var>${priority}</var>
<value>@{PRIORITIES}</value>
<iter>
<var name="${priority}">HIGH</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>PriorityColor_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:25:09.863" level="INFO">${timestamp} = 20250923_102509</msg>
<status status="PASS" starttime="20250923 10:25:09.863" endtime="20250923 10:25:09.863"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:09.863" level="INFO">${unique_name} = PriorityColor_HIGH_20250923_102509</msg>
<status status="PASS" starttime="20250923 10:25:09.863" endtime="20250923 10:25:09.863"/>
</kw>
<msg timestamp="20250923 10:25:09.863" level="INFO">${dep_name} = PriorityColor_HIGH_20250923_102509</msg>
<status status="PASS" starttime="20250923 10:25:09.862" endtime="20250923 10:25:09.863"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Testing ${priority} priority color</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:09.863" level="INFO">${description} = Testing HIGH priority color</msg>
<status status="PASS" starttime="20250923 10:25:09.863" endtime="20250923 10:25:09.863"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:09.864" endtime="20250923 10:25:09.872"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:09.872" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:25:09.872" endtime="20250923 10:25:09.902"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:09.903" endtime="20250923 10:25:09.923"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:09.923" endtime="20250923 10:25:09.968"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:09.969" endtime="20250923 10:25:09.992"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:09.992" endtime="20250923 10:25:10.001"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:10.002" level="INFO">Typing text 'PriorityColor_HIGH_20250923_102509' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:25:10.001" endtime="20250923 10:25:10.052"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:10.053" level="INFO">Typing text 'Testing HIGH priority color' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:25:10.052" endtime="20250923 10:25:10.089"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:25:10.090" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:25:10.089" endtime="20250923 10:25:10.119"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:10.120" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:25:10.119" endtime="20250923 10:25:10.135"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:10.135" level="INFO">Selecting options from selection list 'id:addPriority' by value HIGH.</msg>
<status status="PASS" starttime="20250923 10:25:10.135" endtime="20250923 10:25:10.160"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:25:10.160" endtime="20250923 10:25:10.160"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:10.160" endtime="20250923 10:25:10.167"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:10.168" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:25:10.167" endtime="20250923 10:25:10.196"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:25:10.196" endtime="20250923 10:25:10.204"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:12.205" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:10.204" endtime="20250923 10:25:12.205"/>
</kw>
<status status="PASS" starttime="20250923 10:25:09.863" endtime="20250923 10:25:12.205"/>
</kw>
<kw name="Verify Priority Badge Color" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${priority}</arg>
<doc>Verifies priority badge has correct color styling with updated selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:12.206" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_HIGH_20250923_102509')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:25:12.206" endtime="20250923 10:25:12.206"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:12.206" endtime="20250923 10:25:12.215"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${priority_element}</var>
<arg>${dependency_row}//div[@class='dependency-priority']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:12.215" level="INFO">${priority_element} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_HIGH_20250923_102509')]/ancestor::div[@class='dependency-row']//div[@class='dependency-priority']</msg>
<status status="PASS" starttime="20250923 10:25:12.215" endtime="20250923 10:25:12.215"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${priority_element}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:25:12.223" level="INFO">Element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_HIGH_20250923_102509')]/ancestor::div[@class='dependency-row']//div[@class='dependency-priority']' is displayed.</msg>
<status status="PASS" starttime="20250923 10:25:12.216" endtime="20250923 10:25:12.223"/>
</kw>
<status status="PASS" starttime="20250923 10:25:12.205" endtime="20250923 10:25:12.224"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:12.224" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_HIGH_20250923_102509')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:25:12.224" endtime="20250923 10:25:12.224"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:12.224" endtime="20250923 10:25:12.231"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:12.231" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_HIGH_20250923_102509')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:25:12.231" endtime="20250923 10:25:12.231"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:12.231" endtime="20250923 10:25:12.240"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:12.240" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_HIGH_20250923_102509')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:25:12.240" endtime="20250923 10:25:12.349"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:13.351" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:12.350" endtime="20250923 10:25:13.351"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:25:13.352" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:25:13.351" endtime="20250923 10:25:13.357"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:15.359" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:13.357" endtime="20250923 10:25:15.360"/>
</kw>
<status status="PASS" starttime="20250923 10:25:12.224" endtime="20250923 10:25:15.360"/>
</kw>
<status status="PASS" starttime="20250923 10:25:09.862" endtime="20250923 10:25:15.360"/>
</iter>
<iter>
<var name="${priority}">MEDIUM</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>PriorityColor_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:25:15.363" level="INFO">${timestamp} = 20250923_102515</msg>
<status status="PASS" starttime="20250923 10:25:15.362" endtime="20250923 10:25:15.363"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:15.363" level="INFO">${unique_name} = PriorityColor_MEDIUM_20250923_102515</msg>
<status status="PASS" starttime="20250923 10:25:15.363" endtime="20250923 10:25:15.363"/>
</kw>
<msg timestamp="20250923 10:25:15.363" level="INFO">${dep_name} = PriorityColor_MEDIUM_20250923_102515</msg>
<status status="PASS" starttime="20250923 10:25:15.361" endtime="20250923 10:25:15.363"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Testing ${priority} priority color</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:15.363" level="INFO">${description} = Testing MEDIUM priority color</msg>
<status status="PASS" starttime="20250923 10:25:15.363" endtime="20250923 10:25:15.363"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:15.366" endtime="20250923 10:25:15.393"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:15.393" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:25:15.393" endtime="20250923 10:25:15.561"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:15.561" endtime="20250923 10:25:15.573"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:15.573" endtime="20250923 10:25:15.583"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:15.584" endtime="20250923 10:25:15.593"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:15.594" endtime="20250923 10:25:15.602"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:15.603" level="INFO">Typing text 'PriorityColor_MEDIUM_20250923_102515' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:25:15.602" endtime="20250923 10:25:15.657"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:15.658" level="INFO">Typing text 'Testing MEDIUM priority color' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:25:15.658" endtime="20250923 10:25:15.698"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:25:15.698" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:25:15.698" endtime="20250923 10:25:15.727"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:15.727" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:25:15.727" endtime="20250923 10:25:15.742"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:15.743" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:25:15.742" endtime="20250923 10:25:15.759"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:25:15.759" endtime="20250923 10:25:15.760"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:15.761" endtime="20250923 10:25:15.772"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:15.773" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:25:15.772" endtime="20250923 10:25:15.819"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:25:15.819" endtime="20250923 10:25:15.830"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:17.832" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:15.831" endtime="20250923 10:25:17.832"/>
</kw>
<status status="PASS" starttime="20250923 10:25:15.363" endtime="20250923 10:25:17.832"/>
</kw>
<kw name="Verify Priority Badge Color" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${priority}</arg>
<doc>Verifies priority badge has correct color styling with updated selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:17.833" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_MEDIUM_20250923_102515')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:25:17.833" endtime="20250923 10:25:17.833"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:17.833" endtime="20250923 10:25:17.842"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${priority_element}</var>
<arg>${dependency_row}//div[@class='dependency-priority']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:17.843" level="INFO">${priority_element} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_MEDIUM_20250923_102515')]/ancestor::div[@class='dependency-row']//div[@class='dependency-priority...</msg>
<status status="PASS" starttime="20250923 10:25:17.843" endtime="20250923 10:25:17.843"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${priority_element}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:25:17.852" level="INFO">Element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_MEDIUM_20250923_102515')]/ancestor::div[@class='dependency-row']//div[@class='dependency-priority']' is displayed.</msg>
<status status="PASS" starttime="20250923 10:25:17.843" endtime="20250923 10:25:17.852"/>
</kw>
<status status="PASS" starttime="20250923 10:25:17.833" endtime="20250923 10:25:17.852"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:17.852" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_MEDIUM_20250923_102515')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:25:17.852" endtime="20250923 10:25:17.852"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:17.852" endtime="20250923 10:25:17.859"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:17.860" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_MEDIUM_20250923_102515')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:25:17.859" endtime="20250923 10:25:17.860"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:17.860" endtime="20250923 10:25:17.868"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:17.868" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_MEDIUM_20250923_102515')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:25:17.868" endtime="20250923 10:25:18.076"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:19.083" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:18.080" endtime="20250923 10:25:19.083"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:25:19.084" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:25:19.083" endtime="20250923 10:25:19.088"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:21.092" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:19.089" endtime="20250923 10:25:21.093"/>
</kw>
<status status="PASS" starttime="20250923 10:25:17.852" endtime="20250923 10:25:21.094"/>
</kw>
<status status="PASS" starttime="20250923 10:25:15.361" endtime="20250923 10:25:21.094"/>
</iter>
<iter>
<var name="${priority}">LOW</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>PriorityColor_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:25:21.097" level="INFO">${timestamp} = 20250923_102521</msg>
<status status="PASS" starttime="20250923 10:25:21.097" endtime="20250923 10:25:21.097"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:21.098" level="INFO">${unique_name} = PriorityColor_LOW_20250923_102521</msg>
<status status="PASS" starttime="20250923 10:25:21.097" endtime="20250923 10:25:21.098"/>
</kw>
<msg timestamp="20250923 10:25:21.098" level="INFO">${dep_name} = PriorityColor_LOW_20250923_102521</msg>
<status status="PASS" starttime="20250923 10:25:21.096" endtime="20250923 10:25:21.098"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Testing ${priority} priority color</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:21.098" level="INFO">${description} = Testing LOW priority color</msg>
<status status="PASS" starttime="20250923 10:25:21.098" endtime="20250923 10:25:21.098"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:21.099" endtime="20250923 10:25:21.110"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:21.110" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:25:21.110" endtime="20250923 10:25:21.139"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:21.139" endtime="20250923 10:25:21.360"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:21.361" endtime="20250923 10:25:21.368"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:21.368" endtime="20250923 10:25:21.374"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:21.374" endtime="20250923 10:25:21.381"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:21.382" level="INFO">Typing text 'PriorityColor_LOW_20250923_102521' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:25:21.381" endtime="20250923 10:25:21.446"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:21.447" level="INFO">Typing text 'Testing LOW priority color' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:25:21.446" endtime="20250923 10:25:21.489"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:25:21.490" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:25:21.489" endtime="20250923 10:25:21.529"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:21.530" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:25:21.529" endtime="20250923 10:25:21.546"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:21.547" level="INFO">Selecting options from selection list 'id:addPriority' by value LOW.</msg>
<status status="PASS" starttime="20250923 10:25:21.546" endtime="20250923 10:25:21.573"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:25:21.573" endtime="20250923 10:25:21.577"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:21.577" endtime="20250923 10:25:21.586"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:21.586" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:25:21.586" endtime="20250923 10:25:21.620"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:25:21.620" endtime="20250923 10:25:21.631"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:23.633" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:21.632" endtime="20250923 10:25:23.635"/>
</kw>
<status status="PASS" starttime="20250923 10:25:21.098" endtime="20250923 10:25:23.636"/>
</kw>
<kw name="Verify Priority Badge Color" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${priority}</arg>
<doc>Verifies priority badge has correct color styling with updated selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:23.639" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_LOW_20250923_102521')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:25:23.638" endtime="20250923 10:25:23.639"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:23.639" endtime="20250923 10:25:23.698"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${priority_element}</var>
<arg>${dependency_row}//div[@class='dependency-priority']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:23.699" level="INFO">${priority_element} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_LOW_20250923_102521')]/ancestor::div[@class='dependency-row']//div[@class='dependency-priority']</msg>
<status status="PASS" starttime="20250923 10:25:23.698" endtime="20250923 10:25:23.699"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${priority_element}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:25:23.707" level="INFO">Element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_LOW_20250923_102521')]/ancestor::div[@class='dependency-row']//div[@class='dependency-priority']' is displayed.</msg>
<status status="PASS" starttime="20250923 10:25:23.699" endtime="20250923 10:25:23.707"/>
</kw>
<status status="PASS" starttime="20250923 10:25:23.637" endtime="20250923 10:25:23.708"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:23.708" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_LOW_20250923_102521')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:25:23.708" endtime="20250923 10:25:23.708"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:23.708" endtime="20250923 10:25:23.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:23.715" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_LOW_20250923_102521')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:25:23.715" endtime="20250923 10:25:23.715"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:23.716" endtime="20250923 10:25:23.724"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:23.725" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'PriorityColor_LOW_20250923_102521')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:25:23.725" endtime="20250923 10:25:23.836"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:24.837" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:23.836" endtime="20250923 10:25:24.837"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:25:24.837" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:25:24.837" endtime="20250923 10:25:24.845"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:26.848" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:24.845" endtime="20250923 10:25:26.850"/>
</kw>
<status status="PASS" starttime="20250923 10:25:23.708" endtime="20250923 10:25:26.852"/>
</kw>
<status status="PASS" starttime="20250923 10:25:21.095" endtime="20250923 10:25:26.852"/>
</iter>
<status status="PASS" starttime="20250923 10:25:09.862" endtime="20250923 10:25:26.852"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:25:26.863" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:25:26.855" endtime="20250923 10:25:26.909"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:27.911" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:26.909" endtime="20250923 10:25:27.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:25:27.912" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:25:27.912" endtime="20250923 10:25:27.912"/>
</kw>
<status status="PASS" starttime="20250923 10:25:26.854" endtime="20250923 10:25:27.912"/>
</kw>
<status status="PASS" starttime="20250923 10:25:26.853" endtime="20250923 10:25:27.912"/>
</kw>
<doc>Test that priority badges display with correct colors</doc>
<tag>colors</tag>
<tag>crud</tag>
<tag>priority</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 10:25:05.819" endtime="20250923 10:25:27.912"/>
</test>
<test id="s1-t19" name="TC022 - Add Dependency With All Teams" line="321">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:25:27.913" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:25:27.913" endtime="20250923 10:25:27.920"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:28.924" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:27.921" endtime="20250923 10:25:28.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:25:28.926" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:25:28.925" endtime="20250923 10:25:28.926"/>
</kw>
<status status="PASS" starttime="20250923 10:25:27.913" endtime="20250923 10:25:28.926"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:25:28.930" endtime="20250923 10:25:28.942"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:29.944" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:28.942" endtime="20250923 10:25:29.944"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:25:29.945" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:25:29.944" endtime="20250923 10:25:29.957"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:31.958" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:29.957" endtime="20250923 10:25:31.959"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:31.959" endtime="20250923 10:25:31.974"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:31.974" endtime="20250923 10:25:31.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:25:31.984" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:25:31.984" endtime="20250923 10:25:31.984"/>
</kw>
<status status="PASS" starttime="20250923 10:25:28.930" endtime="20250923 10:25:31.984"/>
</kw>
<status status="PASS" starttime="20250923 10:25:28.928" endtime="20250923 10:25:31.984"/>
</kw>
<status status="PASS" starttime="20250923 10:25:27.913" endtime="20250923 10:25:31.985"/>
</kw>
<for flavor="IN">
<var>${team}</var>
<value>@{TEAMS}</value>
<iter>
<var name="${team}">Crowdgen</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:25:31.988" level="INFO">${timestamp} = 20250923_102531</msg>
<status status="PASS" starttime="20250923 10:25:31.987" endtime="20250923 10:25:31.988"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:31.988" level="INFO">${unique_name} = Team_Crowdgen_20250923_102531</msg>
<status status="PASS" starttime="20250923 10:25:31.988" endtime="20250923 10:25:31.988"/>
</kw>
<msg timestamp="20250923 10:25:31.988" level="INFO">${unique_name} = Team_Crowdgen_20250923_102531</msg>
<status status="PASS" starttime="20250923 10:25:31.985" endtime="20250923 10:25:31.988"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:31.988" level="INFO">${description} = Test dependency for Crowdgen team</msg>
<status status="PASS" starttime="20250923 10:25:31.988" endtime="20250923 10:25:31.988"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:31.989" endtime="20250923 10:25:31.998"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:31.999" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:25:31.998" endtime="20250923 10:25:32.027"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:32.027" endtime="20250923 10:25:32.036"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:32.037" endtime="20250923 10:25:32.047"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:32.047" endtime="20250923 10:25:32.056"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:32.057" endtime="20250923 10:25:32.065"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:32.065" level="INFO">Typing text 'Team_Crowdgen_20250923_102531' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:25:32.065" endtime="20250923 10:25:32.109"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:32.109" level="INFO">Typing text 'Test dependency for Crowdgen team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:25:32.109" endtime="20250923 10:25:32.145"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:25:32.146" level="INFO">Selecting options from selection list 'id:addTeam' by label Crowdgen.</msg>
<status status="PASS" starttime="20250923 10:25:32.145" endtime="20250923 10:25:32.176"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:32.176" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:25:32.176" endtime="20250923 10:25:32.191"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:32.192" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:25:32.191" endtime="20250923 10:25:32.208"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:25:32.208" endtime="20250923 10:25:32.209"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:32.209" endtime="20250923 10:25:32.218"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:32.218" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:25:32.218" endtime="20250923 10:25:32.247"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:25:32.248" endtime="20250923 10:25:32.256"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:34.257" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:32.257" endtime="20250923 10:25:34.257"/>
</kw>
<status status="PASS" starttime="20250923 10:25:31.988" endtime="20250923 10:25:34.257"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:25:34.258" endtime="20250923 10:25:34.270"/>
</kw>
<status status="PASS" starttime="20250923 10:25:34.258" endtime="20250923 10:25:34.270"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:35.272" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:34.271" endtime="20250923 10:25:35.272"/>
</kw>
<status status="PASS" starttime="20250923 10:25:31.985" endtime="20250923 10:25:35.272"/>
</iter>
<iter>
<var name="${team}">Annotation Tools</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:25:35.275" level="INFO">${timestamp} = 20250923_102535</msg>
<status status="PASS" starttime="20250923 10:25:35.274" endtime="20250923 10:25:35.275"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:35.275" level="INFO">${unique_name} = Team_Annotation_Tools_20250923_102535</msg>
<status status="PASS" starttime="20250923 10:25:35.275" endtime="20250923 10:25:35.275"/>
</kw>
<msg timestamp="20250923 10:25:35.275" level="INFO">${unique_name} = Team_Annotation_Tools_20250923_102535</msg>
<status status="PASS" starttime="20250923 10:25:35.273" endtime="20250923 10:25:35.275"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:35.275" level="INFO">${description} = Test dependency for Annotation Tools team</msg>
<status status="PASS" starttime="20250923 10:25:35.275" endtime="20250923 10:25:35.275"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:35.277" endtime="20250923 10:25:35.289"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:35.290" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:25:35.289" endtime="20250923 10:25:35.317"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:35.317" endtime="20250923 10:25:35.326"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:35.327" endtime="20250923 10:25:35.339"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:35.339" endtime="20250923 10:25:35.349"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:35.349" endtime="20250923 10:25:35.358"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:35.358" level="INFO">Typing text 'Team_Annotation_Tools_20250923_102535' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:25:35.358" endtime="20250923 10:25:35.399"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:35.399" level="INFO">Typing text 'Test dependency for Annotation Tools team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:25:35.399" endtime="20250923 10:25:35.439"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:25:35.439" level="INFO">Selecting options from selection list 'id:addTeam' by label Annotation Tools.</msg>
<status status="PASS" starttime="20250923 10:25:35.439" endtime="20250923 10:25:35.473"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:35.474" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:25:35.473" endtime="20250923 10:25:35.491"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:35.491" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:25:35.491" endtime="20250923 10:25:35.509"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:25:35.509" endtime="20250923 10:25:35.510"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:35.510" endtime="20250923 10:25:35.518"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:35.519" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:25:35.519" endtime="20250923 10:25:35.548"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:25:35.548" endtime="20250923 10:25:35.557"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:37.559" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:35.557" endtime="20250923 10:25:37.559"/>
</kw>
<status status="PASS" starttime="20250923 10:25:35.275" endtime="20250923 10:25:37.559"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:25:37.560" endtime="20250923 10:25:37.567"/>
</kw>
<status status="PASS" starttime="20250923 10:25:37.559" endtime="20250923 10:25:37.567"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:38.569" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:37.568" endtime="20250923 10:25:38.569"/>
</kw>
<status status="PASS" starttime="20250923 10:25:35.272" endtime="20250923 10:25:38.569"/>
</iter>
<iter>
<var name="${team}">ADAP Platform</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:25:38.570" level="INFO">${timestamp} = 20250923_102538</msg>
<status status="PASS" starttime="20250923 10:25:38.570" endtime="20250923 10:25:38.570"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:38.571" level="INFO">${unique_name} = Team_ADAP_Platform_20250923_102538</msg>
<status status="PASS" starttime="20250923 10:25:38.570" endtime="20250923 10:25:38.571"/>
</kw>
<msg timestamp="20250923 10:25:38.571" level="INFO">${unique_name} = Team_ADAP_Platform_20250923_102538</msg>
<status status="PASS" starttime="20250923 10:25:38.569" endtime="20250923 10:25:38.571"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:38.571" level="INFO">${description} = Test dependency for ADAP Platform team</msg>
<status status="PASS" starttime="20250923 10:25:38.571" endtime="20250923 10:25:38.571"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:38.572" endtime="20250923 10:25:38.581"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:38.581" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:25:38.581" endtime="20250923 10:25:38.602"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:38.602" endtime="20250923 10:25:38.818"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:38.818" endtime="20250923 10:25:38.823"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:38.824" endtime="20250923 10:25:38.830"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:38.830" endtime="20250923 10:25:38.837"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:38.837" level="INFO">Typing text 'Team_ADAP_Platform_20250923_102538' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:25:38.837" endtime="20250923 10:25:38.878"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:38.879" level="INFO">Typing text 'Test dependency for ADAP Platform team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:25:38.879" endtime="20250923 10:25:38.922"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:25:38.922" level="INFO">Selecting options from selection list 'id:addTeam' by label ADAP Platform.</msg>
<status status="PASS" starttime="20250923 10:25:38.922" endtime="20250923 10:25:38.972"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:38.973" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:25:38.972" endtime="20250923 10:25:38.986"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:38.986" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:25:38.986" endtime="20250923 10:25:39.001"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:25:39.001" endtime="20250923 10:25:39.002"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:39.002" endtime="20250923 10:25:39.010"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:39.012" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:25:39.011" endtime="20250923 10:25:39.047"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:25:39.048" endtime="20250923 10:25:39.058"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:41.060" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:39.058" endtime="20250923 10:25:41.061"/>
</kw>
<status status="PASS" starttime="20250923 10:25:38.571" endtime="20250923 10:25:41.061"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:25:41.062" endtime="20250923 10:25:41.076"/>
</kw>
<status status="PASS" starttime="20250923 10:25:41.061" endtime="20250923 10:25:41.077"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:42.079" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:41.077" endtime="20250923 10:25:42.079"/>
</kw>
<status status="PASS" starttime="20250923 10:25:38.569" endtime="20250923 10:25:42.079"/>
</iter>
<iter>
<var name="${team}">Product Management</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:25:42.081" level="INFO">${timestamp} = 20250923_102542</msg>
<status status="PASS" starttime="20250923 10:25:42.081" endtime="20250923 10:25:42.081"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:42.082" level="INFO">${unique_name} = Team_Product_Management_20250923_102542</msg>
<status status="PASS" starttime="20250923 10:25:42.082" endtime="20250923 10:25:42.082"/>
</kw>
<msg timestamp="20250923 10:25:42.082" level="INFO">${unique_name} = Team_Product_Management_20250923_102542</msg>
<status status="PASS" starttime="20250923 10:25:42.079" endtime="20250923 10:25:42.082"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:42.082" level="INFO">${description} = Test dependency for Product Management team</msg>
<status status="PASS" starttime="20250923 10:25:42.082" endtime="20250923 10:25:42.082"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:42.084" endtime="20250923 10:25:42.096"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:42.097" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:25:42.096" endtime="20250923 10:25:42.124"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:42.124" endtime="20250923 10:25:42.134"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:42.134" endtime="20250923 10:25:42.144"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:42.144" endtime="20250923 10:25:42.152"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:42.152" endtime="20250923 10:25:42.161"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:42.161" level="INFO">Typing text 'Team_Product_Management_20250923_102542' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:25:42.161" endtime="20250923 10:25:42.200"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:42.201" level="INFO">Typing text 'Test dependency for Product Management team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:25:42.201" endtime="20250923 10:25:42.240"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:25:42.240" level="INFO">Selecting options from selection list 'id:addTeam' by label Product Management.</msg>
<status status="PASS" starttime="20250923 10:25:42.240" endtime="20250923 10:25:42.268"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:42.269" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:25:42.268" endtime="20250923 10:25:42.284"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:42.284" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:25:42.284" endtime="20250923 10:25:42.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:25:42.300" endtime="20250923 10:25:42.300"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:42.300" endtime="20250923 10:25:42.307"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:42.307" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:25:42.307" endtime="20250923 10:25:42.336"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:25:42.336" endtime="20250923 10:25:42.349"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:44.349" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:42.349" endtime="20250923 10:25:44.349"/>
</kw>
<status status="PASS" starttime="20250923 10:25:42.082" endtime="20250923 10:25:44.349"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:25:44.350" endtime="20250923 10:25:44.362"/>
</kw>
<status status="PASS" starttime="20250923 10:25:44.350" endtime="20250923 10:25:44.362"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:45.363" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:44.362" endtime="20250923 10:25:45.363"/>
</kw>
<status status="PASS" starttime="20250923 10:25:42.079" endtime="20250923 10:25:45.363"/>
</iter>
<iter>
<var name="${team}">Quality Flow</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:25:45.366" level="INFO">${timestamp} = 20250923_102545</msg>
<status status="PASS" starttime="20250923 10:25:45.365" endtime="20250923 10:25:45.366"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:45.366" level="INFO">${unique_name} = Team_Quality_Flow_20250923_102545</msg>
<status status="PASS" starttime="20250923 10:25:45.366" endtime="20250923 10:25:45.366"/>
</kw>
<msg timestamp="20250923 10:25:45.366" level="INFO">${unique_name} = Team_Quality_Flow_20250923_102545</msg>
<status status="PASS" starttime="20250923 10:25:45.363" endtime="20250923 10:25:45.366"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:45.367" level="INFO">${description} = Test dependency for Quality Flow team</msg>
<status status="PASS" starttime="20250923 10:25:45.367" endtime="20250923 10:25:45.367"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:45.369" endtime="20250923 10:25:45.383"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:45.384" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:25:45.383" endtime="20250923 10:25:45.412"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:45.413" endtime="20250923 10:25:45.422"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:45.423" endtime="20250923 10:25:45.430"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:45.431" endtime="20250923 10:25:45.439"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:45.439" endtime="20250923 10:25:45.447"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:45.447" level="INFO">Typing text 'Team_Quality_Flow_20250923_102545' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:25:45.447" endtime="20250923 10:25:45.485"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:45.486" level="INFO">Typing text 'Test dependency for Quality Flow team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:25:45.485" endtime="20250923 10:25:45.524"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:25:45.525" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:25:45.524" endtime="20250923 10:25:45.552"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:45.552" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:25:45.552" endtime="20250923 10:25:45.568"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:45.569" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:25:45.568" endtime="20250923 10:25:45.585"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:25:45.585" endtime="20250923 10:25:45.585"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:45.586" endtime="20250923 10:25:45.594"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:45.595" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:25:45.594" endtime="20250923 10:25:45.627"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:25:45.627" endtime="20250923 10:25:45.635"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:47.637" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:45.635" endtime="20250923 10:25:47.637"/>
</kw>
<status status="PASS" starttime="20250923 10:25:45.367" endtime="20250923 10:25:47.637"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:25:47.638" endtime="20250923 10:25:47.650"/>
</kw>
<status status="PASS" starttime="20250923 10:25:47.637" endtime="20250923 10:25:47.650"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:48.651" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:47.650" endtime="20250923 10:25:48.651"/>
</kw>
<status status="PASS" starttime="20250923 10:25:45.363" endtime="20250923 10:25:48.651"/>
</iter>
<iter>
<var name="${team}">Data Collection</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:25:48.655" level="INFO">${timestamp} = 20250923_102548</msg>
<status status="PASS" starttime="20250923 10:25:48.655" endtime="20250923 10:25:48.655"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:48.655" level="INFO">${unique_name} = Team_Data_Collection_20250923_102548</msg>
<status status="PASS" starttime="20250923 10:25:48.655" endtime="20250923 10:25:48.655"/>
</kw>
<msg timestamp="20250923 10:25:48.656" level="INFO">${unique_name} = Team_Data_Collection_20250923_102548</msg>
<status status="PASS" starttime="20250923 10:25:48.652" endtime="20250923 10:25:48.656"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:48.656" level="INFO">${description} = Test dependency for Data Collection team</msg>
<status status="PASS" starttime="20250923 10:25:48.656" endtime="20250923 10:25:48.656"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:48.657" endtime="20250923 10:25:48.673"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:48.674" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:25:48.673" endtime="20250923 10:25:48.706"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:48.706" endtime="20250923 10:25:48.721"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:48.721" endtime="20250923 10:25:48.735"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:48.735" endtime="20250923 10:25:48.747"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:48.747" endtime="20250923 10:25:48.756"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:48.757" level="INFO">Typing text 'Team_Data_Collection_20250923_102548' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:25:48.756" endtime="20250923 10:25:48.797"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:48.798" level="INFO">Typing text 'Test dependency for Data Collection team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:25:48.797" endtime="20250923 10:25:48.835"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:25:48.835" level="INFO">Selecting options from selection list 'id:addTeam' by label Data Collection.</msg>
<status status="PASS" starttime="20250923 10:25:48.835" endtime="20250923 10:25:48.865"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:48.866" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:25:48.865" endtime="20250923 10:25:48.882"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:48.882" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:25:48.882" endtime="20250923 10:25:48.900"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:25:48.900" endtime="20250923 10:25:48.900"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:48.900" endtime="20250923 10:25:48.910"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:48.910" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:25:48.910" endtime="20250923 10:25:48.944"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:25:48.944" endtime="20250923 10:25:48.954"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:50.957" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:48.954" endtime="20250923 10:25:50.957"/>
</kw>
<status status="PASS" starttime="20250923 10:25:48.656" endtime="20250923 10:25:50.957"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:25:50.958" endtime="20250923 10:25:50.969"/>
</kw>
<status status="PASS" starttime="20250923 10:25:50.957" endtime="20250923 10:25:50.969"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:51.972" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:50.969" endtime="20250923 10:25:51.972"/>
</kw>
<status status="PASS" starttime="20250923 10:25:48.652" endtime="20250923 10:25:51.972"/>
</iter>
<status status="PASS" starttime="20250923 10:25:31.985" endtime="20250923 10:25:51.972"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:25:51.973" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:25:51.973" endtime="20250923 10:25:51.979"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:52.981" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:51.980" endtime="20250923 10:25:52.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:25:52.982" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:25:52.981" endtime="20250923 10:25:52.982"/>
</kw>
<status status="PASS" starttime="20250923 10:25:51.973" endtime="20250923 10:25:52.982"/>
</kw>
<status status="PASS" starttime="20250923 10:25:51.972" endtime="20250923 10:25:52.982"/>
</kw>
<doc>Test creating dependencies for all available teams</doc>
<tag>comprehensive</tag>
<tag>crud</tag>
<tag>teams</tag>
<status status="PASS" starttime="20250923 10:25:27.912" endtime="20250923 10:25:52.982"/>
</test>
<test id="s1-t20" name="TC023 - Add Dependency With All Status Options" line="334">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:25:52.984" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:25:52.984" endtime="20250923 10:25:52.990"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:53.991" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:52.990" endtime="20250923 10:25:53.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:25:53.992" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:25:53.992" endtime="20250923 10:25:53.992"/>
</kw>
<status status="PASS" starttime="20250923 10:25:52.983" endtime="20250923 10:25:53.992"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:25:53.993" endtime="20250923 10:25:54.001"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:55.002" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:54.001" endtime="20250923 10:25:55.002"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:25:55.003" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:25:55.002" endtime="20250923 10:25:55.018"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:57.019" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:55.018" endtime="20250923 10:25:57.019"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:57.019" endtime="20250923 10:25:57.035"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:57.035" endtime="20250923 10:25:57.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:25:57.045" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:25:57.045" endtime="20250923 10:25:57.045"/>
</kw>
<status status="PASS" starttime="20250923 10:25:53.992" endtime="20250923 10:25:57.045"/>
</kw>
<status status="PASS" starttime="20250923 10:25:53.992" endtime="20250923 10:25:57.045"/>
</kw>
<status status="PASS" starttime="20250923 10:25:52.983" endtime="20250923 10:25:57.045"/>
</kw>
<for flavor="IN">
<var>${status}</var>
<value>@{STATUSES}</value>
<iter>
<var name="${status}">NOT STARTED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Status_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:25:57.047" level="INFO">${timestamp} = 20250923_102557</msg>
<status status="PASS" starttime="20250923 10:25:57.047" endtime="20250923 10:25:57.047"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:57.047" level="INFO">${unique_name} = Status_NOT_STARTED_20250923_102557</msg>
<status status="PASS" starttime="20250923 10:25:57.047" endtime="20250923 10:25:57.047"/>
</kw>
<msg timestamp="20250923 10:25:57.047" level="INFO">${unique_name} = Status_NOT_STARTED_20250923_102557</msg>
<status status="PASS" starttime="20250923 10:25:57.046" endtime="20250923 10:25:57.047"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${status} status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:25:57.047" level="INFO">${description} = Test dependency with NOT STARTED status</msg>
<status status="PASS" starttime="20250923 10:25:57.047" endtime="20250923 10:25:57.047"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:57.048" endtime="20250923 10:25:57.056"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:57.057" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:25:57.057" endtime="20250923 10:25:57.079"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:57.079" endtime="20250923 10:25:57.300"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:57.300" endtime="20250923 10:25:57.310"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:57.310" endtime="20250923 10:25:57.319"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:57.319" endtime="20250923 10:25:57.327"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:57.328" level="INFO">Typing text 'Status_NOT_STARTED_20250923_102557' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:25:57.327" endtime="20250923 10:25:57.362"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:57.363" level="INFO">Typing text 'Test dependency with NOT STARTED status' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:25:57.362" endtime="20250923 10:25:57.398"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:25:57.398" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:25:57.398" endtime="20250923 10:25:57.425"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:57.425" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:25:57.425" endtime="20250923 10:25:57.440"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:25:57.440" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:25:57.440" endtime="20250923 10:25:57.455"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:25:57.455" endtime="20250923 10:25:57.456"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:25:57.456" endtime="20250923 10:25:57.463"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:25:57.463" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:25:57.463" endtime="20250923 10:25:57.492"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:25:57.492" endtime="20250923 10:25:57.500"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:25:59.501" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:25:57.500" endtime="20250923 10:25:59.502"/>
</kw>
<status status="PASS" starttime="20250923 10:25:57.047" endtime="20250923 10:25:59.502"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:25:59.504" endtime="20250923 10:25:59.515"/>
</kw>
<status status="PASS" starttime="20250923 10:25:59.503" endtime="20250923 10:25:59.515"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:00.517" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:25:59.515" endtime="20250923 10:26:00.517"/>
</kw>
<status status="PASS" starttime="20250923 10:25:57.045" endtime="20250923 10:26:00.517"/>
</iter>
<iter>
<var name="${status}">IN PROGRESS</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Status_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:26:00.518" level="INFO">${timestamp} = 20250923_102600</msg>
<status status="PASS" starttime="20250923 10:26:00.517" endtime="20250923 10:26:00.518"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:00.518" level="INFO">${unique_name} = Status_IN_PROGRESS_20250923_102600</msg>
<status status="PASS" starttime="20250923 10:26:00.518" endtime="20250923 10:26:00.518"/>
</kw>
<msg timestamp="20250923 10:26:00.518" level="INFO">${unique_name} = Status_IN_PROGRESS_20250923_102600</msg>
<status status="PASS" starttime="20250923 10:26:00.517" endtime="20250923 10:26:00.518"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${status} status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:00.518" level="INFO">${description} = Test dependency with IN PROGRESS status</msg>
<status status="PASS" starttime="20250923 10:26:00.518" endtime="20250923 10:26:00.518"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:00.519" endtime="20250923 10:26:00.526"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:00.526" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:26:00.526" endtime="20250923 10:26:00.545"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:00.545" endtime="20250923 10:26:00.762"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:00.762" endtime="20250923 10:26:00.772"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:00.772" endtime="20250923 10:26:00.779"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:00.779" endtime="20250923 10:26:00.787"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:00.788" level="INFO">Typing text 'Status_IN_PROGRESS_20250923_102600' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:26:00.787" endtime="20250923 10:26:00.824"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:00.824" level="INFO">Typing text 'Test dependency with IN PROGRESS status' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:26:00.824" endtime="20250923 10:26:00.868"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:26:00.869" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:26:00.869" endtime="20250923 10:26:00.891"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:00.891" level="INFO">Selecting options from selection list 'id:addStatus' by value IN PROGRESS.</msg>
<status status="PASS" starttime="20250923 10:26:00.891" endtime="20250923 10:26:00.914"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:00.915" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:26:00.914" endtime="20250923 10:26:00.927"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:26:00.927" endtime="20250923 10:26:00.928"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:00.928" endtime="20250923 10:26:00.937"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:00.937" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:26:00.937" endtime="20250923 10:26:00.964"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:26:00.965" endtime="20250923 10:26:00.974"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:02.976" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:26:00.974" endtime="20250923 10:26:02.979"/>
</kw>
<status status="PASS" starttime="20250923 10:26:00.518" endtime="20250923 10:26:02.979"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:26:02.981" endtime="20250923 10:26:02.995"/>
</kw>
<status status="PASS" starttime="20250923 10:26:02.980" endtime="20250923 10:26:02.995"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:03.996" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:02.995" endtime="20250923 10:26:03.997"/>
</kw>
<status status="PASS" starttime="20250923 10:26:00.517" endtime="20250923 10:26:03.997"/>
</iter>
<iter>
<var name="${status}">BLOCKED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Status_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:26:04.004" level="INFO">${timestamp} = 20250923_102604</msg>
<status status="PASS" starttime="20250923 10:26:04.004" endtime="20250923 10:26:04.004"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:04.005" level="INFO">${unique_name} = Status_BLOCKED_20250923_102604</msg>
<status status="PASS" starttime="20250923 10:26:04.004" endtime="20250923 10:26:04.005"/>
</kw>
<msg timestamp="20250923 10:26:04.005" level="INFO">${unique_name} = Status_BLOCKED_20250923_102604</msg>
<status status="PASS" starttime="20250923 10:26:03.999" endtime="20250923 10:26:04.005"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${status} status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:04.005" level="INFO">${description} = Test dependency with BLOCKED status</msg>
<status status="PASS" starttime="20250923 10:26:04.005" endtime="20250923 10:26:04.005"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:04.006" endtime="20250923 10:26:04.050"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:04.051" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:26:04.050" endtime="20250923 10:26:04.133"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:04.133" endtime="20250923 10:26:04.144"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:04.144" endtime="20250923 10:26:04.177"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:04.177" endtime="20250923 10:26:04.192"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:04.192" endtime="20250923 10:26:04.205"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:04.206" level="INFO">Typing text 'Status_BLOCKED_20250923_102604' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:26:04.206" endtime="20250923 10:26:04.301"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:04.302" level="INFO">Typing text 'Test dependency with BLOCKED status' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:26:04.301" endtime="20250923 10:26:04.391"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:26:04.392" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:26:04.392" endtime="20250923 10:26:04.425"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:04.425" level="INFO">Selecting options from selection list 'id:addStatus' by value BLOCKED.</msg>
<status status="PASS" starttime="20250923 10:26:04.425" endtime="20250923 10:26:04.458"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:04.459" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:26:04.458" endtime="20250923 10:26:04.475"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:26:04.475" endtime="20250923 10:26:04.476"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:04.476" endtime="20250923 10:26:04.484"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:04.484" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:26:04.484" endtime="20250923 10:26:04.552"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:26:04.552" endtime="20250923 10:26:04.566"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:06.568" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:26:04.566" endtime="20250923 10:26:06.570"/>
</kw>
<status status="PASS" starttime="20250923 10:26:04.005" endtime="20250923 10:26:06.573"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:26:06.576" endtime="20250923 10:26:06.590"/>
</kw>
<status status="PASS" starttime="20250923 10:26:06.574" endtime="20250923 10:26:06.590"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:07.592" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:06.590" endtime="20250923 10:26:07.592"/>
</kw>
<status status="PASS" starttime="20250923 10:26:03.998" endtime="20250923 10:26:07.592"/>
</iter>
<iter>
<var name="${status}">COMPLETED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Status_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:26:07.594" level="INFO">${timestamp} = 20250923_102607</msg>
<status status="PASS" starttime="20250923 10:26:07.594" endtime="20250923 10:26:07.594"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:07.594" level="INFO">${unique_name} = Status_COMPLETED_20250923_102607</msg>
<status status="PASS" starttime="20250923 10:26:07.594" endtime="20250923 10:26:07.594"/>
</kw>
<msg timestamp="20250923 10:26:07.594" level="INFO">${unique_name} = Status_COMPLETED_20250923_102607</msg>
<status status="PASS" starttime="20250923 10:26:07.593" endtime="20250923 10:26:07.594"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${status} status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:07.594" level="INFO">${description} = Test dependency with COMPLETED status</msg>
<status status="PASS" starttime="20250923 10:26:07.594" endtime="20250923 10:26:07.595"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:07.596" endtime="20250923 10:26:07.608"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:07.609" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:26:07.608" endtime="20250923 10:26:07.635"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:07.635" endtime="20250923 10:26:07.857"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:07.857" endtime="20250923 10:26:07.867"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:07.867" endtime="20250923 10:26:07.875"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:07.876" endtime="20250923 10:26:07.884"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:07.884" level="INFO">Typing text 'Status_COMPLETED_20250923_102607' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:26:07.884" endtime="20250923 10:26:07.922"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:07.922" level="INFO">Typing text 'Test dependency with COMPLETED status' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:26:07.922" endtime="20250923 10:26:07.959"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:26:07.960" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:26:07.959" endtime="20250923 10:26:07.985"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:07.985" level="INFO">Selecting options from selection list 'id:addStatus' by value COMPLETED.</msg>
<status status="PASS" starttime="20250923 10:26:07.985" endtime="20250923 10:26:08.013"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:08.014" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:26:08.014" endtime="20250923 10:26:08.033"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:26:08.033" endtime="20250923 10:26:08.033"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:08.033" endtime="20250923 10:26:08.041"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:08.042" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:26:08.041" endtime="20250923 10:26:08.069"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:26:08.069" endtime="20250923 10:26:08.077"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:10.078" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:26:08.077" endtime="20250923 10:26:10.079"/>
</kw>
<status status="PASS" starttime="20250923 10:26:07.595" endtime="20250923 10:26:10.079"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:26:10.080" endtime="20250923 10:26:10.092"/>
</kw>
<status status="PASS" starttime="20250923 10:26:10.079" endtime="20250923 10:26:10.092"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:11.094" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:10.092" endtime="20250923 10:26:11.094"/>
</kw>
<status status="PASS" starttime="20250923 10:26:07.592" endtime="20250923 10:26:11.094"/>
</iter>
<status status="PASS" starttime="20250923 10:25:57.045" endtime="20250923 10:26:11.094"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:26:11.097" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:26:11.096" endtime="20250923 10:26:11.106"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:12.107" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:11.106" endtime="20250923 10:26:12.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:26:12.107" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:26:12.107" endtime="20250923 10:26:12.107"/>
</kw>
<status status="PASS" starttime="20250923 10:26:11.095" endtime="20250923 10:26:12.107"/>
</kw>
<status status="PASS" starttime="20250923 10:26:11.095" endtime="20250923 10:26:12.107"/>
</kw>
<doc>Test creating dependencies with all available statuses</doc>
<tag>comprehensive</tag>
<tag>crud</tag>
<tag>status</tag>
<status status="PASS" starttime="20250923 10:25:52.982" endtime="20250923 10:26:12.107"/>
</test>
<test id="s1-t21" name="TC024 - Add Dependency With All Priority Levels" line="347">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:26:12.109" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:26:12.109" endtime="20250923 10:26:12.115"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:13.116" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:12.115" endtime="20250923 10:26:13.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:26:13.117" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:26:13.117" endtime="20250923 10:26:13.117"/>
</kw>
<status status="PASS" starttime="20250923 10:26:12.109" endtime="20250923 10:26:13.117"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:26:13.118" endtime="20250923 10:26:13.126"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:14.128" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:13.126" endtime="20250923 10:26:14.128"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:26:14.129" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:26:14.128" endtime="20250923 10:26:14.141"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:16.142" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:26:14.141" endtime="20250923 10:26:16.142"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:16.143" endtime="20250923 10:26:16.155"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:16.155" endtime="20250923 10:26:16.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:26:16.164" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:26:16.164" endtime="20250923 10:26:16.164"/>
</kw>
<status status="PASS" starttime="20250923 10:26:13.117" endtime="20250923 10:26:16.164"/>
</kw>
<status status="PASS" starttime="20250923 10:26:13.117" endtime="20250923 10:26:16.164"/>
</kw>
<status status="PASS" starttime="20250923 10:26:12.109" endtime="20250923 10:26:16.164"/>
</kw>
<for flavor="IN">
<var>${priority}</var>
<value>@{PRIORITIES}</value>
<iter>
<var name="${priority}">HIGH</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Priority_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:26:16.165" level="INFO">${timestamp} = 20250923_102616</msg>
<status status="PASS" starttime="20250923 10:26:16.165" endtime="20250923 10:26:16.165"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:16.165" level="INFO">${unique_name} = Priority_HIGH_20250923_102616</msg>
<status status="PASS" starttime="20250923 10:26:16.165" endtime="20250923 10:26:16.165"/>
</kw>
<msg timestamp="20250923 10:26:16.165" level="INFO">${unique_name} = Priority_HIGH_20250923_102616</msg>
<status status="PASS" starttime="20250923 10:26:16.164" endtime="20250923 10:26:16.165"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${priority} priority</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:16.165" level="INFO">${description} = Test dependency with HIGH priority</msg>
<status status="PASS" starttime="20250923 10:26:16.165" endtime="20250923 10:26:16.165"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:16.166" endtime="20250923 10:26:16.174"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:16.174" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:26:16.174" endtime="20250923 10:26:16.196"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:16.196" endtime="20250923 10:26:16.417"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:16.418" endtime="20250923 10:26:16.426"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:16.426" endtime="20250923 10:26:16.438"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:16.439" endtime="20250923 10:26:16.447"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:16.448" level="INFO">Typing text 'Priority_HIGH_20250923_102616' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:26:16.447" endtime="20250923 10:26:16.487"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:16.488" level="INFO">Typing text 'Test dependency with HIGH priority' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:26:16.487" endtime="20250923 10:26:16.527"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:26:16.527" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:26:16.527" endtime="20250923 10:26:16.558"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:16.559" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:26:16.559" endtime="20250923 10:26:16.575"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:16.576" level="INFO">Selecting options from selection list 'id:addPriority' by value HIGH.</msg>
<status status="PASS" starttime="20250923 10:26:16.576" endtime="20250923 10:26:16.603"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:26:16.603" endtime="20250923 10:26:16.604"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:16.604" endtime="20250923 10:26:16.613"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:16.613" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:26:16.613" endtime="20250923 10:26:16.641"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:26:16.642" endtime="20250923 10:26:16.650"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:18.652" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:26:16.650" endtime="20250923 10:26:18.652"/>
</kw>
<status status="PASS" starttime="20250923 10:26:16.165" endtime="20250923 10:26:18.652"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:26:18.653" endtime="20250923 10:26:18.664"/>
</kw>
<status status="PASS" starttime="20250923 10:26:18.653" endtime="20250923 10:26:18.664"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:19.666" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:18.664" endtime="20250923 10:26:19.666"/>
</kw>
<status status="PASS" starttime="20250923 10:26:16.164" endtime="20250923 10:26:19.666"/>
</iter>
<iter>
<var name="${priority}">MEDIUM</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Priority_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:26:19.667" level="INFO">${timestamp} = 20250923_102619</msg>
<status status="PASS" starttime="20250923 10:26:19.667" endtime="20250923 10:26:19.667"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:19.668" level="INFO">${unique_name} = Priority_MEDIUM_20250923_102619</msg>
<status status="PASS" starttime="20250923 10:26:19.668" endtime="20250923 10:26:19.668"/>
</kw>
<msg timestamp="20250923 10:26:19.668" level="INFO">${unique_name} = Priority_MEDIUM_20250923_102619</msg>
<status status="PASS" starttime="20250923 10:26:19.667" endtime="20250923 10:26:19.668"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${priority} priority</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:19.668" level="INFO">${description} = Test dependency with MEDIUM priority</msg>
<status status="PASS" starttime="20250923 10:26:19.668" endtime="20250923 10:26:19.668"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:19.671" endtime="20250923 10:26:19.685"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:19.685" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:26:19.685" endtime="20250923 10:26:19.712"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:19.713" endtime="20250923 10:26:19.932"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:19.932" endtime="20250923 10:26:19.940"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:19.941" endtime="20250923 10:26:19.948"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:19.948" endtime="20250923 10:26:19.956"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:19.956" level="INFO">Typing text 'Priority_MEDIUM_20250923_102619' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:26:19.956" endtime="20250923 10:26:19.990"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:19.991" level="INFO">Typing text 'Test dependency with MEDIUM priority' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:26:19.990" endtime="20250923 10:26:20.030"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:26:20.030" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:26:20.030" endtime="20250923 10:26:20.058"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:20.058" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:26:20.058" endtime="20250923 10:26:20.075"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:20.075" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:26:20.075" endtime="20250923 10:26:20.090"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:26:20.090" endtime="20250923 10:26:20.091"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:20.091" endtime="20250923 10:26:20.099"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:20.099" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:26:20.099" endtime="20250923 10:26:20.130"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:26:20.131" endtime="20250923 10:26:20.140"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:22.141" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:26:20.140" endtime="20250923 10:26:22.141"/>
</kw>
<status status="PASS" starttime="20250923 10:26:19.669" endtime="20250923 10:26:22.141"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:26:22.142" endtime="20250923 10:26:22.153"/>
</kw>
<status status="PASS" starttime="20250923 10:26:22.141" endtime="20250923 10:26:22.154"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:23.155" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:22.154" endtime="20250923 10:26:23.155"/>
</kw>
<status status="PASS" starttime="20250923 10:26:19.666" endtime="20250923 10:26:23.155"/>
</iter>
<iter>
<var name="${priority}">LOW</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Priority_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:26:23.159" level="INFO">${timestamp} = 20250923_102623</msg>
<status status="PASS" starttime="20250923 10:26:23.158" endtime="20250923 10:26:23.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:23.159" level="INFO">${unique_name} = Priority_LOW_20250923_102623</msg>
<status status="PASS" starttime="20250923 10:26:23.159" endtime="20250923 10:26:23.159"/>
</kw>
<msg timestamp="20250923 10:26:23.159" level="INFO">${unique_name} = Priority_LOW_20250923_102623</msg>
<status status="PASS" starttime="20250923 10:26:23.156" endtime="20250923 10:26:23.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${priority} priority</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:23.160" level="INFO">${description} = Test dependency with LOW priority</msg>
<status status="PASS" starttime="20250923 10:26:23.160" endtime="20250923 10:26:23.161"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:23.163" endtime="20250923 10:26:23.189"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:23.189" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:26:23.189" endtime="20250923 10:26:23.224"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:23.225" endtime="20250923 10:26:23.235"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:23.235" endtime="20250923 10:26:23.246"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:23.246" endtime="20250923 10:26:23.254"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:23.255" endtime="20250923 10:26:23.264"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:23.266" level="INFO">Typing text 'Priority_LOW_20250923_102623' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:26:23.264" endtime="20250923 10:26:23.312"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:23.313" level="INFO">Typing text 'Test dependency with LOW priority' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:26:23.312" endtime="20250923 10:26:23.453"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:26:23.454" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:26:23.453" endtime="20250923 10:26:23.480"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:23.481" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:26:23.480" endtime="20250923 10:26:23.497"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:23.497" level="INFO">Selecting options from selection list 'id:addPriority' by value LOW.</msg>
<status status="PASS" starttime="20250923 10:26:23.497" endtime="20250923 10:26:23.524"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:26:23.525" endtime="20250923 10:26:23.525"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:23.525" endtime="20250923 10:26:23.533"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:23.534" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:26:23.533" endtime="20250923 10:26:23.565"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:26:23.565" endtime="20250923 10:26:23.576"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:25.578" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:26:23.576" endtime="20250923 10:26:25.578"/>
</kw>
<status status="PASS" starttime="20250923 10:26:23.161" endtime="20250923 10:26:25.578"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:26:25.579" endtime="20250923 10:26:25.591"/>
</kw>
<status status="PASS" starttime="20250923 10:26:25.579" endtime="20250923 10:26:25.591"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:26.592" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:25.591" endtime="20250923 10:26:26.592"/>
</kw>
<status status="PASS" starttime="20250923 10:26:23.156" endtime="20250923 10:26:26.592"/>
</iter>
<status status="PASS" starttime="20250923 10:26:16.164" endtime="20250923 10:26:26.592"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:26:26.594" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:26:26.593" endtime="20250923 10:26:26.601"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:27.602" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:26.601" endtime="20250923 10:26:27.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:26:27.603" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:26:27.603" endtime="20250923 10:26:27.603"/>
</kw>
<status status="PASS" starttime="20250923 10:26:26.593" endtime="20250923 10:26:27.603"/>
</kw>
<status status="PASS" starttime="20250923 10:26:26.592" endtime="20250923 10:26:27.603"/>
</kw>
<doc>Test creating dependencies with all priority levels</doc>
<tag>comprehensive</tag>
<tag>crud</tag>
<tag>priority</tag>
<status status="PASS" starttime="20250923 10:26:12.108" endtime="20250923 10:26:27.603"/>
</test>
<test id="s1-t22" name="TC025 - Verify Counter Updates After CRUD Operations" line="360">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:26:27.606" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:26:27.605" endtime="20250923 10:26:27.610"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:28.611" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:27.610" endtime="20250923 10:26:28.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:26:28.612" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:26:28.611" endtime="20250923 10:26:28.612"/>
</kw>
<status status="PASS" starttime="20250923 10:26:27.605" endtime="20250923 10:26:28.612"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:26:28.613" endtime="20250923 10:26:28.621"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:29.622" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:28.621" endtime="20250923 10:26:29.622"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:26:29.623" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:26:29.622" endtime="20250923 10:26:29.639"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:31.641" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:26:29.639" endtime="20250923 10:26:31.642"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:31.644" endtime="20250923 10:26:31.665"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:31.665" endtime="20250923 10:26:31.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:26:31.673" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:26:31.673" endtime="20250923 10:26:31.673"/>
</kw>
<status status="PASS" starttime="20250923 10:26:28.612" endtime="20250923 10:26:31.673"/>
</kw>
<status status="PASS" starttime="20250923 10:26:28.612" endtime="20250923 10:26:31.673"/>
</kw>
<status status="PASS" starttime="20250923 10:26:27.604" endtime="20250923 10:26:31.673"/>
</kw>
<kw name="Get Counter Value" library="depflow_keywords">
<var>${initial_count}</var>
<arg>${TOTAL_COUNT}</arg>
<doc>Gets the numeric value from a counter element</doc>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${counter_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:31.688" level="INFO">${text} = 5</msg>
<status status="PASS" starttime="20250923 10:26:31.675" endtime="20250923 10:26:31.688"/>
</kw>
<msg timestamp="20250923 10:26:31.688" level="INFO">${initial_count} = 5</msg>
<status status="PASS" starttime="20250923 10:26:31.675" endtime="20250923 10:26:31.688"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>CounterTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:26:31.688" level="INFO">${timestamp} = 20250923_102631</msg>
<status status="PASS" starttime="20250923 10:26:31.688" endtime="20250923 10:26:31.688"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:31.689" level="INFO">${unique_name} = CounterTest_20250923_102631</msg>
<status status="PASS" starttime="20250923 10:26:31.688" endtime="20250923 10:26:31.689"/>
</kw>
<msg timestamp="20250923 10:26:31.689" level="INFO">${dep_name} = CounterTest_20250923_102631</msg>
<status status="PASS" starttime="20250923 10:26:31.688" endtime="20250923 10:26:31.689"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>Test for counter updates</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:31.689" endtime="20250923 10:26:31.697"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:31.697" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:26:31.697" endtime="20250923 10:26:31.722"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:31.723" endtime="20250923 10:26:31.952"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:31.952" endtime="20250923 10:26:31.961"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:31.961" endtime="20250923 10:26:31.969"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:31.970" endtime="20250923 10:26:31.979"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:31.980" level="INFO">Typing text 'CounterTest_20250923_102631' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:26:31.979" endtime="20250923 10:26:32.018"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:32.018" level="INFO">Typing text 'Test for counter updates' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:26:32.018" endtime="20250923 10:26:32.055"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:26:32.055" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:26:32.055" endtime="20250923 10:26:32.084"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:32.084" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:26:32.084" endtime="20250923 10:26:32.102"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:32.102" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:26:32.102" endtime="20250923 10:26:32.117"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:26:32.117" endtime="20250923 10:26:32.118"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:32.118" endtime="20250923 10:26:32.125"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:32.126" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:26:32.126" endtime="20250923 10:26:32.154"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:26:32.155" endtime="20250923 10:26:32.162"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:34.164" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:26:32.163" endtime="20250923 10:26:34.164"/>
</kw>
<status status="PASS" starttime="20250923 10:26:31.689" endtime="20250923 10:26:34.164"/>
</kw>
<kw name="Get Counter Value" library="depflow_keywords">
<var>${after_add_count}</var>
<arg>${TOTAL_COUNT}</arg>
<doc>Gets the numeric value from a counter element</doc>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${counter_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:34.179" level="INFO">${text} = 7</msg>
<status status="PASS" starttime="20250923 10:26:34.165" endtime="20250923 10:26:34.180"/>
</kw>
<msg timestamp="20250923 10:26:34.180" level="INFO">${after_add_count} = 7</msg>
<status status="PASS" starttime="20250923 10:26:34.164" endtime="20250923 10:26:34.180"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_count}</var>
<arg>${initial_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250923 10:26:34.180" level="INFO">${expected_count} = 6</msg>
<status status="PASS" starttime="20250923 10:26:34.180" endtime="20250923 10:26:34.180"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${after_add_count}</arg>
<arg>${expected_count}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250923 10:26:34.181" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<msg timestamp="20250923 10:26:34.181" level="FAIL">7.0 != 6.0</msg>
<status status="FAIL" starttime="20250923 10:26:34.180" endtime="20250923 10:26:34.181"/>
</kw>
<kw name="Delete Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with updated div-based selectors</doc>
<status status="NOT RUN" starttime="20250923 10:26:34.181" endtime="20250923 10:26:34.181"/>
</kw>
<kw name="Get Counter Value" library="depflow_keywords">
<var>${after_delete_count}</var>
<arg>${TOTAL_COUNT}</arg>
<doc>Gets the numeric value from a counter element</doc>
<status status="NOT RUN" starttime="20250923 10:26:34.181" endtime="20250923 10:26:34.181"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${after_delete_count}</arg>
<arg>${initial_count}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="NOT RUN" starttime="20250923 10:26:34.181" endtime="20250923 10:26:34.181"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:26:34.183" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:26:34.182" endtime="20250923 10:26:34.188"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:35.191" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:34.189" endtime="20250923 10:26:35.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:26:35.191" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:26:35.191" endtime="20250923 10:26:35.191"/>
</kw>
<status status="PASS" starttime="20250923 10:26:34.182" endtime="20250923 10:26:35.191"/>
</kw>
<status status="PASS" starttime="20250923 10:26:34.181" endtime="20250923 10:26:35.191"/>
</kw>
<doc>Test that counters update correctly after CRUD operations</doc>
<tag>counters</tag>
<tag>crud</tag>
<tag>integration</tag>
<status status="FAIL" starttime="20250923 10:26:27.604" endtime="20250923 10:26:35.192">7.0 != 6.0</status>
</test>
<test id="s1-t23" name="TC026 - Add Dependency With Special Characters" line="383">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:26:35.195" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:26:35.194" endtime="20250923 10:26:35.201"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:36.204" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:35.201" endtime="20250923 10:26:36.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:26:36.208" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:26:36.208" endtime="20250923 10:26:36.209"/>
</kw>
<status status="PASS" starttime="20250923 10:26:35.194" endtime="20250923 10:26:36.209"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:26:36.211" endtime="20250923 10:26:36.227"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:37.230" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:36.227" endtime="20250923 10:26:37.230"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:26:37.231" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:26:37.230" endtime="20250923 10:26:37.235"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:39.263" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:26:37.235" endtime="20250923 10:26:39.293"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:39.318" endtime="20250923 10:26:39.400"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:39.401" endtime="20250923 10:26:39.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:26:39.411" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:26:39.411" endtime="20250923 10:26:39.411"/>
</kw>
<status status="PASS" starttime="20250923 10:26:36.210" endtime="20250923 10:26:39.411"/>
</kw>
<status status="PASS" starttime="20250923 10:26:36.209" endtime="20250923 10:26:39.411"/>
</kw>
<status status="PASS" starttime="20250923 10:26:35.193" endtime="20250923 10:26:39.411"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${special_name}</var>
<arg>Test-Dep_With@Special#Chars!</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:39.412" level="INFO">${special_name} = Test-Dep_With@Special#Chars!</msg>
<status status="PASS" starttime="20250923 10:26:39.411" endtime="20250923 10:26:39.412"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${special_desc}</var>
<arg>Description with special chars: @#$%^&amp;*()_+-={}[]|\\:";'&lt;&gt;?,./</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:26:39.412" level="INFO">${special_desc} = Description with special chars: @#$%^&amp;*()_+-={}[]|\:";'&lt;&gt;?,./</msg>
<status status="PASS" starttime="20250923 10:26:39.412" endtime="20250923 10:26:39.412"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${special_name}</arg>
<arg>${special_desc}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:39.413" endtime="20250923 10:26:39.426"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:39.426" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:26:39.426" endtime="20250923 10:26:39.482"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:39.482" endtime="20250923 10:26:39.495"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:39.495" endtime="20250923 10:26:39.509"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:39.509" endtime="20250923 10:26:39.529"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:39.529" endtime="20250923 10:26:39.564"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:39.565" level="INFO">Typing text 'Test-Dep_With@Special#Chars!' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:26:39.564" endtime="20250923 10:26:39.620"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:39.621" level="INFO">Typing text 'Description with special chars: @#$%^&amp;*()_+-={}[]|\:";'&lt;&gt;?,./' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:26:39.621" endtime="20250923 10:26:39.681"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:26:39.682" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:26:39.681" endtime="20250923 10:26:39.723"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:39.724" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:26:39.723" endtime="20250923 10:26:39.740"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:39.741" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:26:39.740" endtime="20250923 10:26:39.759"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:26:39.759" endtime="20250923 10:26:39.760"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:39.760" endtime="20250923 10:26:39.772"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:39.772" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:26:39.772" endtime="20250923 10:26:39.804"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:26:39.804" endtime="20250923 10:26:39.815"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:41.817" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:26:39.815" endtime="20250923 10:26:41.818"/>
</kw>
<status status="PASS" starttime="20250923 10:26:39.412" endtime="20250923 10:26:41.819"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${special_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:26:41.821" endtime="20250923 10:26:41.836"/>
</kw>
<status status="PASS" starttime="20250923 10:26:41.820" endtime="20250923 10:26:41.836"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:26:41.838" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:26:41.837" endtime="20250923 10:26:41.843"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:42.844" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:41.843" endtime="20250923 10:26:42.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:26:42.845" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:26:42.845" endtime="20250923 10:26:42.845"/>
</kw>
<status status="PASS" starttime="20250923 10:26:41.837" endtime="20250923 10:26:42.845"/>
</kw>
<status status="PASS" starttime="20250923 10:26:41.837" endtime="20250923 10:26:42.845"/>
</kw>
<doc>Test creating dependency with special characters in name and description</doc>
<tag>crud</tag>
<tag>edge_case</tag>
<tag>special_characters</tag>
<status status="PASS" starttime="20250923 10:26:35.192" endtime="20250923 10:26:42.845"/>
</test>
<test id="s1-t24" name="TC027 - Add Dependency With Long Text" line="393">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:26:42.848" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:26:42.848" endtime="20250923 10:26:42.854"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:43.856" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:42.854" endtime="20250923 10:26:43.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:26:43.857" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:26:43.857" endtime="20250923 10:26:43.857"/>
</kw>
<status status="PASS" starttime="20250923 10:26:42.847" endtime="20250923 10:26:43.857"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:26:43.858" endtime="20250923 10:26:43.867"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:44.868" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:26:43.867" endtime="20250923 10:26:44.869"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:26:44.869" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:26:44.869" endtime="20250923 10:26:44.874"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:46.875" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:26:44.874" endtime="20250923 10:26:46.877"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:46.879" endtime="20250923 10:26:46.904"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:46.904" endtime="20250923 10:26:46.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:26:46.915" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:26:46.915" endtime="20250923 10:26:46.915"/>
</kw>
<status status="PASS" starttime="20250923 10:26:43.858" endtime="20250923 10:26:46.915"/>
</kw>
<status status="PASS" starttime="20250923 10:26:43.857" endtime="20250923 10:26:46.915"/>
</kw>
<status status="PASS" starttime="20250923 10:26:42.847" endtime="20250923 10:26:46.915"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${long_name}</var>
<arg>'Very Long Dependency Name That Exceeds Normal Length To Test Field Boundaries' * 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250923 10:26:46.915" level="INFO">${long_name} = Very Long Dependency Name That Exceeds Normal Length To Test Field BoundariesVery Long Dependency Name That Exceeds Normal Length To Test Field Boundaries</msg>
<status status="PASS" starttime="20250923 10:26:46.915" endtime="20250923 10:26:46.915"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${long_desc}</var>
<arg>'This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. ' * 3</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250923 10:26:46.916" level="INFO">${long_desc} = This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. This is a very long description that tests the maximum length bou...</msg>
<status status="PASS" starttime="20250923 10:26:46.915" endtime="20250923 10:26:46.916"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${long_name}</arg>
<arg>${long_desc}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:46.917" endtime="20250923 10:26:46.925"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:46.926" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:26:46.926" endtime="20250923 10:26:46.952"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:46.952" endtime="20250923 10:26:47.174"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:47.174" endtime="20250923 10:26:47.184"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:47.184" endtime="20250923 10:26:47.193"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:47.194" endtime="20250923 10:26:47.208"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:47.208" level="INFO">Typing text 'Very Long Dependency Name That Exceeds Normal Length To Test Field BoundariesVery Long Dependency Name That Exceeds Normal Length To Test Field Boundaries' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:26:47.208" endtime="20250923 10:26:47.273"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:47.273" level="INFO">Typing text 'This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. ' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:26:47.273" endtime="20250923 10:26:47.406"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:26:47.406" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:26:47.406" endtime="20250923 10:26:47.431"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:47.432" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:26:47.431" endtime="20250923 10:26:47.443"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:26:47.444" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:26:47.443" endtime="20250923 10:26:47.456"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:26:47.456" endtime="20250923 10:26:47.457"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:26:47.457" endtime="20250923 10:26:47.463"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:26:47.464" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:26:47.463" endtime="20250923 10:26:47.488"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:26:47.488" endtime="20250923 10:26:47.496"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:26:49.498" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:26:47.496" endtime="20250923 10:26:49.504"/>
</kw>
<status status="PASS" starttime="20250923 10:26:46.916" endtime="20250923 10:26:49.505"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${long_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<msg timestamp="20250923 10:27:00.236" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-7.png"&gt;&lt;img src="selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:27:00.240" level="FAIL">Element 'xpath://div[@class='dependency-name' and contains(text(), 'Very Long Dependency Name That Exceeds Normal Length To Test Field BoundariesVery Long Dependency Name That Exceeds Normal Length To Test Field Boundaries')]' did not appear in 10 seconds.</msg>
<status status="FAIL" starttime="20250923 10:26:49.510" endtime="20250923 10:27:00.243"/>
</kw>
<status status="FAIL" starttime="20250923 10:26:49.506" endtime="20250923 10:27:00.243"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:27:00.246" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:27:00.245" endtime="20250923 10:27:00.255"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:27:01.257" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:27:00.255" endtime="20250923 10:27:01.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:27:01.259" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:27:01.258" endtime="20250923 10:27:01.259"/>
</kw>
<status status="PASS" starttime="20250923 10:27:00.244" endtime="20250923 10:27:01.259"/>
</kw>
<status status="PASS" starttime="20250923 10:27:00.244" endtime="20250923 10:27:01.259"/>
</kw>
<doc>Test creating dependency with maximum length text fields</doc>
<tag>boundary</tag>
<tag>crud</tag>
<tag>edge_case</tag>
<status status="FAIL" starttime="20250923 10:26:42.846" endtime="20250923 10:27:01.259">Element 'xpath://div[@class='dependency-name' and contains(text(), 'Very Long Dependency Name That Exceeds Normal Length To Test Field BoundariesVery Long Dependency Name That Exceeds Normal Length To Test Field Boundaries')]' did not appear in 10 seconds.</status>
</test>
<test id="s1-t25" name="TC028 - Bulk Delete Dependencies" line="403">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:27:01.263" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:27:01.262" endtime="20250923 10:27:01.269"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:27:02.270" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:27:01.269" endtime="20250923 10:27:02.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:27:02.271" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:27:02.271" endtime="20250923 10:27:02.271"/>
</kw>
<status status="PASS" starttime="20250923 10:27:01.261" endtime="20250923 10:27:02.271"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:27:02.272" endtime="20250923 10:27:02.284"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:27:03.285" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:27:02.284" endtime="20250923 10:27:03.285"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:27:03.286" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:27:03.285" endtime="20250923 10:27:03.300"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:27:05.303" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:27:03.300" endtime="20250923 10:27:05.303"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:05.304" endtime="20250923 10:27:05.326"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:05.327" endtime="20250923 10:27:05.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:27:05.336" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:27:05.335" endtime="20250923 10:27:05.336"/>
</kw>
<status status="PASS" starttime="20250923 10:27:02.271" endtime="20250923 10:27:05.336"/>
</kw>
<status status="PASS" starttime="20250923 10:27:02.271" endtime="20250923 10:27:05.336"/>
</kw>
<status status="PASS" starttime="20250923 10:27:01.261" endtime="20250923 10:27:05.336"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{dep_names}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250923 10:27:05.336" level="INFO">@{dep_names} = [ ]</msg>
<status status="PASS" starttime="20250923 10:27:05.336" endtime="20250923 10:27:05.336"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>3</value>
<iter>
<var name="${i}">0</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>BulkDelete_${i}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:27:05.338" level="INFO">${timestamp} = 20250923_102705</msg>
<status status="PASS" starttime="20250923 10:27:05.337" endtime="20250923 10:27:05.338"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:27:05.338" level="INFO">${unique_name} = BulkDelete_0_20250923_102705</msg>
<status status="PASS" starttime="20250923 10:27:05.338" endtime="20250923 10:27:05.338"/>
</kw>
<msg timestamp="20250923 10:27:05.338" level="INFO">${dep_name} = BulkDelete_0_20250923_102705</msg>
<status status="PASS" starttime="20250923 10:27:05.337" endtime="20250923 10:27:05.338"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${dep_names}</arg>
<arg>${dep_name}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250923 10:27:05.338" endtime="20250923 10:27:05.338"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>Bulk delete test dependency ${i}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:05.339" endtime="20250923 10:27:05.347"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:05.347" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:27:05.347" endtime="20250923 10:27:05.378"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:05.378" endtime="20250923 10:27:05.391"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:05.391" endtime="20250923 10:27:05.406"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:05.406" endtime="20250923 10:27:05.428"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:05.429" endtime="20250923 10:27:05.444"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:05.445" level="INFO">Typing text 'BulkDelete_0_20250923_102705' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:27:05.444" endtime="20250923 10:27:05.482"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:05.483" level="INFO">Typing text 'Bulk delete test dependency 0' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:27:05.483" endtime="20250923 10:27:05.517"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:27:05.517" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:27:05.517" endtime="20250923 10:27:05.542"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:27:05.542" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:27:05.542" endtime="20250923 10:27:05.559"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:27:05.559" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:27:05.559" endtime="20250923 10:27:05.576"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:27:05.576" endtime="20250923 10:27:05.577"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:05.577" endtime="20250923 10:27:05.585"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:05.585" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:27:05.585" endtime="20250923 10:27:05.617"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:27:05.618" endtime="20250923 10:27:05.638"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:27:07.640" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:27:05.638" endtime="20250923 10:27:07.640"/>
</kw>
<status status="PASS" starttime="20250923 10:27:05.338" endtime="20250923 10:27:07.640"/>
</kw>
<status status="PASS" starttime="20250923 10:27:05.337" endtime="20250923 10:27:07.640"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>BulkDelete_${i}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:27:07.641" level="INFO">${timestamp} = 20250923_102707</msg>
<status status="PASS" starttime="20250923 10:27:07.641" endtime="20250923 10:27:07.641"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:27:07.642" level="INFO">${unique_name} = BulkDelete_1_20250923_102707</msg>
<status status="PASS" starttime="20250923 10:27:07.641" endtime="20250923 10:27:07.642"/>
</kw>
<msg timestamp="20250923 10:27:07.642" level="INFO">${dep_name} = BulkDelete_1_20250923_102707</msg>
<status status="PASS" starttime="20250923 10:27:07.640" endtime="20250923 10:27:07.642"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${dep_names}</arg>
<arg>${dep_name}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250923 10:27:07.642" endtime="20250923 10:27:07.642"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>Bulk delete test dependency ${i}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:07.644" endtime="20250923 10:27:07.655"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:07.655" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:27:07.655" endtime="20250923 10:27:07.684"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:07.684" endtime="20250923 10:27:07.911"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:07.912" endtime="20250923 10:27:07.921"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:07.921" endtime="20250923 10:27:07.933"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:07.933" endtime="20250923 10:27:07.945"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:07.946" level="INFO">Typing text 'BulkDelete_1_20250923_102707' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:27:07.946" endtime="20250923 10:27:07.982"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:07.983" level="INFO">Typing text 'Bulk delete test dependency 1' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:27:07.983" endtime="20250923 10:27:08.018"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:27:08.019" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:27:08.018" endtime="20250923 10:27:08.047"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:27:08.048" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:27:08.047" endtime="20250923 10:27:08.067"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:27:08.068" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:27:08.067" endtime="20250923 10:27:08.083"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:27:08.084" endtime="20250923 10:27:08.085"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:08.085" endtime="20250923 10:27:08.092"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:08.093" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:27:08.092" endtime="20250923 10:27:08.120"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:27:08.120" endtime="20250923 10:27:08.128"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:27:10.131" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:27:08.128" endtime="20250923 10:27:10.131"/>
</kw>
<status status="PASS" starttime="20250923 10:27:07.642" endtime="20250923 10:27:10.131"/>
</kw>
<status status="PASS" starttime="20250923 10:27:07.640" endtime="20250923 10:27:10.131"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>BulkDelete_${i}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:27:10.133" level="INFO">${timestamp} = 20250923_102710</msg>
<status status="PASS" starttime="20250923 10:27:10.133" endtime="20250923 10:27:10.133"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:27:10.133" level="INFO">${unique_name} = BulkDelete_2_20250923_102710</msg>
<status status="PASS" starttime="20250923 10:27:10.133" endtime="20250923 10:27:10.133"/>
</kw>
<msg timestamp="20250923 10:27:10.134" level="INFO">${dep_name} = BulkDelete_2_20250923_102710</msg>
<status status="PASS" starttime="20250923 10:27:10.132" endtime="20250923 10:27:10.134"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${dep_names}</arg>
<arg>${dep_name}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250923 10:27:10.134" endtime="20250923 10:27:10.134"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>Bulk delete test dependency ${i}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:10.136" endtime="20250923 10:27:10.149"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:10.150" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:27:10.150" endtime="20250923 10:27:10.178"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:10.178" endtime="20250923 10:27:10.189"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:10.189" endtime="20250923 10:27:10.197"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:10.197" endtime="20250923 10:27:10.208"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:10.208" endtime="20250923 10:27:10.217"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:10.218" level="INFO">Typing text 'BulkDelete_2_20250923_102710' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:27:10.218" endtime="20250923 10:27:10.260"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:10.260" level="INFO">Typing text 'Bulk delete test dependency 2' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:27:10.260" endtime="20250923 10:27:10.297"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:27:10.297" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:27:10.297" endtime="20250923 10:27:10.327"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:27:10.327" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:27:10.327" endtime="20250923 10:27:10.346"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:27:10.347" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:27:10.346" endtime="20250923 10:27:10.363"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:27:10.363" endtime="20250923 10:27:10.364"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:10.364" endtime="20250923 10:27:10.372"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:10.373" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:27:10.373" endtime="20250923 10:27:10.405"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:27:10.405" endtime="20250923 10:27:10.416"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:27:12.418" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:27:10.416" endtime="20250923 10:27:12.418"/>
</kw>
<status status="PASS" starttime="20250923 10:27:10.134" endtime="20250923 10:27:12.419"/>
</kw>
<status status="PASS" starttime="20250923 10:27:10.132" endtime="20250923 10:27:12.419"/>
</iter>
<status status="PASS" starttime="20250923 10:27:05.337" endtime="20250923 10:27:12.419"/>
</for>
<for flavor="IN">
<var>${dep_name}</var>
<value>@{dep_names}</value>
<iter>
<var name="${dep_name}">BulkDelete_0_20250923_102705</var>
<kw name="Delete Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with updated div-based selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:27:12.420" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_0_20250923_102705')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:27:12.420" endtime="20250923 10:27:12.420"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:12.420" endtime="20250923 10:27:12.437"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:27:12.437" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_0_20250923_102705')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:27:12.437" endtime="20250923 10:27:12.437"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:12.437" endtime="20250923 10:27:12.449"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:12.449" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_0_20250923_102705')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:27:12.449" endtime="20250923 10:27:12.551"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:27:12.551" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:27:12.551" endtime="20250923 10:27:12.563"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:27:14.565" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:27:12.564" endtime="20250923 10:27:14.566"/>
</kw>
<status status="PASS" starttime="20250923 10:27:12.419" endtime="20250923 10:27:14.566"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<msg timestamp="20250923 10:27:24.584" level="INFO">Current page does not contain element 'xpath://div[@class='dependency-name' and contains(text(), 'BulkDelete_0_20250923_102705')]'.</msg>
<status status="PASS" starttime="20250923 10:27:14.568" endtime="20250923 10:27:24.585"/>
</kw>
<status status="PASS" starttime="20250923 10:27:14.566" endtime="20250923 10:27:24.586"/>
</kw>
<status status="PASS" starttime="20250923 10:27:12.419" endtime="20250923 10:27:24.586"/>
</iter>
<iter>
<var name="${dep_name}">BulkDelete_1_20250923_102707</var>
<kw name="Delete Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with updated div-based selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:27:24.587" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_1_20250923_102707')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:27:24.587" endtime="20250923 10:27:24.588"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:24.588" endtime="20250923 10:27:24.612"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:27:24.612" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_1_20250923_102707')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:27:24.612" endtime="20250923 10:27:24.612"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:24.612" endtime="20250923 10:27:24.626"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:24.627" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_1_20250923_102707')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:27:24.627" endtime="20250923 10:27:24.794"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:27:24.805" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:27:24.804" endtime="20250923 10:27:24.817"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:27:26.824" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:27:24.818" endtime="20250923 10:27:26.824"/>
</kw>
<status status="PASS" starttime="20250923 10:27:24.586" endtime="20250923 10:27:26.825"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<msg timestamp="20250923 10:27:36.854" level="INFO">Current page does not contain element 'xpath://div[@class='dependency-name' and contains(text(), 'BulkDelete_1_20250923_102707')]'.</msg>
<status status="PASS" starttime="20250923 10:27:26.825" endtime="20250923 10:27:36.855"/>
</kw>
<status status="PASS" starttime="20250923 10:27:26.825" endtime="20250923 10:27:36.855"/>
</kw>
<status status="PASS" starttime="20250923 10:27:24.586" endtime="20250923 10:27:36.855"/>
</iter>
<iter>
<var name="${dep_name}">BulkDelete_2_20250923_102710</var>
<kw name="Delete Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with updated div-based selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:27:36.857" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_2_20250923_102710')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:27:36.857" endtime="20250923 10:27:36.857"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:36.857" endtime="20250923 10:27:36.869"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:27:36.869" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_2_20250923_102710')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:27:36.869" endtime="20250923 10:27:36.869"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:27:36.869" endtime="20250923 10:27:36.879"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:27:36.879" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_2_20250923_102710')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:27:36.879" endtime="20250923 10:27:37.002"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:27:37.003" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:27:37.003" endtime="20250923 10:27:37.014"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:27:39.019" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:27:37.014" endtime="20250923 10:27:39.020"/>
</kw>
<status status="PASS" starttime="20250923 10:27:36.856" endtime="20250923 10:27:39.020"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<msg timestamp="20250923 10:27:49.060" level="INFO">Current page does not contain element 'xpath://div[@class='dependency-name' and contains(text(), 'BulkDelete_2_20250923_102710')]'.</msg>
<status status="PASS" starttime="20250923 10:27:39.021" endtime="20250923 10:27:49.061"/>
</kw>
<status status="PASS" starttime="20250923 10:27:39.020" endtime="20250923 10:27:49.062"/>
</kw>
<status status="PASS" starttime="20250923 10:27:36.856" endtime="20250923 10:27:49.062"/>
</iter>
<status status="PASS" starttime="20250923 10:27:12.419" endtime="20250923 10:27:49.062"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:27:49.063" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:27:49.063" endtime="20250923 10:27:49.070"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:27:50.072" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:27:49.070" endtime="20250923 10:27:50.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:27:50.073" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:27:50.072" endtime="20250923 10:27:50.073"/>
</kw>
<status status="PASS" starttime="20250923 10:27:49.062" endtime="20250923 10:27:50.073"/>
</kw>
<status status="PASS" starttime="20250923 10:27:49.062" endtime="20250923 10:27:50.073"/>
</kw>
<doc>Test deleting multiple dependencies in sequence</doc>
<tag>bulk</tag>
<tag>crud</tag>
<tag>delete</tag>
<status status="PASS" starttime="20250923 10:27:01.260" endtime="20250923 10:27:50.073"/>
</test>
<kw name="Test Mode Suite Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:27:50.077" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:27:50.077" endtime="20250923 10:27:50.080"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:27:51.082" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:27:50.080" endtime="20250923 10:27:51.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:27:51.082" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:27:51.082" endtime="20250923 10:27:51.082"/>
</kw>
<status status="PASS" starttime="20250923 10:27:50.077" endtime="20250923 10:27:51.083"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 10:27:51.083" endtime="20250923 10:27:51.415"/>
</kw>
<status status="PASS" starttime="20250923 10:27:51.083" endtime="20250923 10:27:51.416"/>
</kw>
<status status="PASS" starttime="20250923 10:27:50.077" endtime="20250923 10:27:51.416"/>
</kw>
<doc>Dependency CRUD Operations Test Suite for DepFlow Application</doc>
<status status="FAIL" starttime="20250923 10:20:57.473" endtime="20250923 10:27:51.416"/>
</suite>
<statistics>
<total>
<stat pass="17" fail="8" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1" skip="0">admin</stat>
<stat pass="0" fail="1" skip="0">boundary</stat>
<stat pass="1" fail="0" skip="0">bulk</stat>
<stat pass="2" fail="0" skip="0">cancel</stat>
<stat pass="2" fail="0" skip="0">colors</stat>
<stat pass="3" fail="0" skip="0">comprehensive</stat>
<stat pass="2" fail="0" skip="0">confirmation</stat>
<stat pass="0" fail="1" skip="0">counters</stat>
<stat pass="2" fail="0" skip="0">create</stat>
<stat pass="15" fail="8" skip="0">crud</stat>
<stat pass="1" fail="0" skip="0">dashboard</stat>
<stat pass="4" fail="1" skip="0">delete</stat>
<stat pass="1" fail="1" skip="0">edge_case</stat>
<stat pass="0" fail="3" skip="0">edit</stat>
<stat pass="2" fail="0" skip="0">inline_edit</stat>
<stat pass="0" fail="1" skip="0">integration</stat>
<stat pass="1" fail="0" skip="0">minimal</stat>
<stat pass="1" fail="0" skip="0">modal</stat>
<stat pass="0" fail="2" skip="0">negative</stat>
<stat pass="3" fail="0" skip="0">priority</stat>
<stat pass="1" fail="3" skip="0">rbac</stat>
<stat pass="0" fail="2" skip="0">restriction</stat>
<stat pass="3" fail="0" skip="0">smoke</stat>
<stat pass="1" fail="0" skip="0">special_characters</stat>
<stat pass="3" fail="0" skip="0">status</stat>
<stat pass="1" fail="0" skip="0">teams</stat>
<stat pass="5" fail="0" skip="0">ui</stat>
<stat pass="2" fail="1" skip="0">update</stat>
<stat pass="0" fail="2" skip="0">user</stat>
<stat pass="0" fail="2" skip="0">validation</stat>
</tag>
<suite>
<stat pass="17" fail="8" skip="0" id="s1" name="02 Dependency Crud Tests">02 Dependency Crud Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
