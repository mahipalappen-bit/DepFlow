<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20250923 07:06:52.562" rpa="false" schemaversion="4">
<suite id="s1" name="01 Authentication Tests" source="/Users/mmoola/Cursor/Dependency Management App/tests/test_suites/01_authentication_tests.robot">
<kw name="Setup Test Environment" library="depflow_keywords" type="SETUP">
<doc>Sets up test environment with fresh browser</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:06:53.162" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:06:53.162" endtime="20250923 07:06:56.195"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:06:56.201" endtime="20250923 07:06:56.565"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:06:56.565" endtime="20250923 07:06:56.567"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:06:56.567" endtime="20250923 07:06:56.583"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:06:59.585" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:06:56.583" endtime="20250923 07:06:59.585"/>
</kw>
<status status="PASS" starttime="20250923 07:06:53.162" endtime="20250923 07:06:59.586"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250923 07:06:59.773" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20250923 07:06:59.586" endtime="20250923 07:06:59.773"/>
</kw>
<status status="PASS" starttime="20250923 07:06:53.162" endtime="20250923 07:06:59.774"/>
</kw>
<test id="s1-t1" name="TC001 - Verify Landing Page Loads Successfully" line="23">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:06:59.775" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:06:59.775" endtime="20250923 07:07:01.280"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:07:01.281" endtime="20250923 07:07:01.660"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:07:01.660" endtime="20250923 07:07:01.662"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:07:01.662" endtime="20250923 07:07:01.669"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:04.670" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:07:01.669" endtime="20250923 07:07:04.671"/>
</kw>
<status status="PASS" starttime="20250923 07:06:59.774" endtime="20250923 07:07:04.672"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:04.678" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:04.673" endtime="20250923 07:07:04.683"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:04.684" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:04.684" endtime="20250923 07:07:04.688"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:07:04.689" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:07:04.690" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:07:04.690" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:07:04.689" endtime="20250923 07:07:04.698"/>
</kw>
<status status="PASS" starttime="20250923 07:07:04.688" endtime="20250923 07:07:04.698"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:05.699" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:04.698" endtime="20250923 07:07:05.700"/>
</kw>
<status status="PASS" starttime="20250923 07:07:04.672" endtime="20250923 07:07:05.700"/>
</kw>
<status status="PASS" starttime="20250923 07:06:59.774" endtime="20250923 07:07:05.700"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>DepFlow - Enterprise Dependency Management Platform</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20250923 07:07:05.703" level="INFO">Page title is 'DepFlow - Enterprise Dependency Management Platform'.</msg>
<status status="PASS" starttime="20250923 07:07:05.700" endtime="20250923 07:07:05.703"/>
</kw>
<kw name="Verify DepFlow Logo Present" library="depflow_keywords">
<doc>Verifies DepFlow logo is present on page</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:07:05.709" level="INFO">Current page contains element 'xpath://div[contains(@class, 'depflow-logo')]'.</msg>
<status status="PASS" starttime="20250923 07:07:05.704" endtime="20250923 07:07:05.709"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 07:07:05.742" level="INFO">Element 'xpath://div[contains(@class, 'depflow-logo')]' is displayed.</msg>
<status status="PASS" starttime="20250923 07:07:05.709" endtime="20250923 07:07:05.742"/>
</kw>
<status status="PASS" starttime="20250923 07:07:05.703" endtime="20250923 07:07:05.742"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:07:05.749" level="INFO">Current page contains element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:07:05.742" endtime="20250923 07:07:05.749"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${GET_STARTED_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:07:05.757" level="INFO">Current page contains element 'xpath://button[contains(@onclick, 'scrollToDemo')]'.</msg>
<status status="PASS" starttime="20250923 07:07:05.749" endtime="20250923 07:07:05.757"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Streamlined Software Lifecycle Management</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:07:05.763" level="INFO">Current page contains text 'Streamlined Software Lifecycle Management'.</msg>
<status status="PASS" starttime="20250923 07:07:05.757" endtime="20250923 07:07:05.764"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:05.764" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:05.764" endtime="20250923 07:07:05.766"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:05.766" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:05.766" endtime="20250923 07:07:05.768"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:07:05.768" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:07:05.768" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:07:05.768" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:07:05.768" endtime="20250923 07:07:05.770"/>
</kw>
<status status="PASS" starttime="20250923 07:07:05.768" endtime="20250923 07:07:05.770"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:06.771" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:05.770" endtime="20250923 07:07:06.772"/>
</kw>
<status status="PASS" starttime="20250923 07:07:05.764" endtime="20250923 07:07:06.772"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:07:06.772" endtime="20250923 07:07:07.240"/>
</kw>
<status status="PASS" starttime="20250923 07:07:06.772" endtime="20250923 07:07:07.240"/>
</kw>
<status status="PASS" starttime="20250923 07:07:05.764" endtime="20250923 07:07:07.240"/>
</kw>
<doc>Verify that the DepFlow landing page loads with all expected elements</doc>
<tag>landing</tag>
<tag>smoke</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 07:06:59.774" endtime="20250923 07:07:07.240"/>
</test>
<test id="s1-t2" name="TC002 - Verify Login Modal Opens" line="33">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:07:07.241" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:07:07.241" endtime="20250923 07:07:08.694"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:07:08.694" endtime="20250923 07:07:09.062"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:07:09.062" endtime="20250923 07:07:09.063"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:07:09.063" endtime="20250923 07:07:09.072"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:12.074" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:07:09.072" endtime="20250923 07:07:12.075"/>
</kw>
<status status="PASS" starttime="20250923 07:07:07.241" endtime="20250923 07:07:12.075"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:12.076" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:12.075" endtime="20250923 07:07:12.082"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:12.083" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:12.082" endtime="20250923 07:07:12.087"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:07:12.088" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:07:12.088" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:07:12.088" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:07:12.087" endtime="20250923 07:07:12.094"/>
</kw>
<status status="PASS" starttime="20250923 07:07:12.087" endtime="20250923 07:07:12.094"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:13.096" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:12.094" endtime="20250923 07:07:13.096"/>
</kw>
<status status="PASS" starttime="20250923 07:07:12.075" endtime="20250923 07:07:13.096"/>
</kw>
<status status="PASS" starttime="20250923 07:07:07.240" endtime="20250923 07:07:13.096"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:07:13.097" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:07:13.096" endtime="20250923 07:07:13.149"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:07:13.149" endtime="20250923 07:07:13.164"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USERNAME_FIELD}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:07:13.171" level="INFO">Current page contains element 'id:email'.</msg>
<status status="PASS" starttime="20250923 07:07:13.164" endtime="20250923 07:07:13.171"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:07:13.176" level="INFO">Current page contains element 'id:password'.</msg>
<status status="PASS" starttime="20250923 07:07:13.171" endtime="20250923 07:07:13.176"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LOGIN_SUBMIT_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:07:13.182" level="INFO">Current page contains element 'xpath://button[contains(@class, 'btn-login')]'.</msg>
<status status="PASS" starttime="20250923 07:07:13.177" endtime="20250923 07:07:13.182"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${ADMIN_CREDENTIALS_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:07:13.188" level="INFO">Current page contains element 'xpath://button[contains(@onclick, 'fillAdminCredentials')]'.</msg>
<status status="PASS" starttime="20250923 07:07:13.182" endtime="20250923 07:07:13.188"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:13.189" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:13.189" endtime="20250923 07:07:13.193"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:13.194" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:13.193" endtime="20250923 07:07:13.196"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:07:13.196" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:07:13.196" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:07:13.196" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:07:13.196" endtime="20250923 07:07:13.201"/>
</kw>
<status status="PASS" starttime="20250923 07:07:13.196" endtime="20250923 07:07:13.201"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:14.203" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:13.201" endtime="20250923 07:07:14.204"/>
</kw>
<status status="PASS" starttime="20250923 07:07:13.188" endtime="20250923 07:07:14.204"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:07:14.205" endtime="20250923 07:07:14.340"/>
</kw>
<status status="PASS" starttime="20250923 07:07:14.204" endtime="20250923 07:07:14.340"/>
</kw>
<status status="PASS" starttime="20250923 07:07:13.188" endtime="20250923 07:07:14.340"/>
</kw>
<doc>Verify that clicking Login button opens the login modal</doc>
<tag>modal</tag>
<tag>smoke</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 07:07:07.240" endtime="20250923 07:07:14.340"/>
</test>
<test id="s1-t3" name="TC003 - Successful Admin Login" line="44">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:07:14.342" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:07:14.342" endtime="20250923 07:07:15.790"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:07:15.791" endtime="20250923 07:07:16.160"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:07:16.161" endtime="20250923 07:07:16.162"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:07:16.162" endtime="20250923 07:07:16.169"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:19.171" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:07:16.169" endtime="20250923 07:07:19.171"/>
</kw>
<status status="PASS" starttime="20250923 07:07:14.341" endtime="20250923 07:07:19.171"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:19.172" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:19.171" endtime="20250923 07:07:19.179"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:19.180" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:19.179" endtime="20250923 07:07:19.184"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:07:19.185" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:07:19.185" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:07:19.185" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:07:19.184" endtime="20250923 07:07:19.189"/>
</kw>
<status status="PASS" starttime="20250923 07:07:19.184" endtime="20250923 07:07:19.189"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:20.191" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:19.189" endtime="20250923 07:07:20.194"/>
</kw>
<status status="PASS" starttime="20250923 07:07:19.171" endtime="20250923 07:07:20.194"/>
</kw>
<status status="PASS" starttime="20250923 07:07:14.341" endtime="20250923 07:07:20.194"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${modal_visible}</var>
<arg>Element Should Be Visible</arg>
<arg>${LOGIN_MODAL}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 07:07:20.374" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:07:20.375" level="FAIL">The element 'id:loginModal' should be visible, but it is not.</msg>
<status status="FAIL" starttime="20250923 07:07:20.195" endtime="20250923 07:07:20.421"/>
</kw>
<msg timestamp="20250923 07:07:20.421" level="INFO">${modal_visible} = False</msg>
<status status="PASS" starttime="20250923 07:07:20.195" endtime="20250923 07:07:20.421"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${modal_visible}</arg>
<arg>Execute Javascript</arg>
<arg>closeLoginModal()</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 07:07:20.421" endtime="20250923 07:07:20.421"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:21.422" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:20.422" endtime="20250923 07:07:21.423"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:07:21.424" endtime="20250923 07:07:21.432"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:22.434" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:21.432" endtime="20250923 07:07:22.434"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:22.435" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:22.434" endtime="20250923 07:07:22.454"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:24.454" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:07:22.454" endtime="20250923 07:07:24.455"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:07:24.455" endtime="20250923 07:07:24.473"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:07:24.473" endtime="20250923 07:07:24.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:07:24.487" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:07:24.487" endtime="20250923 07:07:24.487"/>
</kw>
<status status="PASS" starttime="20250923 07:07:21.424" endtime="20250923 07:07:24.487"/>
</kw>
<status status="PASS" starttime="20250923 07:07:21.424" endtime="20250923 07:07:24.487"/>
</kw>
<status status="PASS" starttime="20250923 07:07:21.423" endtime="20250923 07:07:24.487"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>DepFlow - Enterprise Dependency Management Platform</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20250923 07:07:24.489" level="INFO">Page title is 'DepFlow - Enterprise Dependency Management Platform'.</msg>
<status status="PASS" starttime="20250923 07:07:24.487" endtime="20250923 07:07:24.489"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:07:24.493" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:07:24.489" endtime="20250923 07:07:24.493"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:07:24.496" level="INFO">Current page contains element 'id:dashboardPage'.</msg>
<status status="PASS" starttime="20250923 07:07:24.493" endtime="20250923 07:07:24.496"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Admin User</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:07:24.503" level="INFO">Current page contains text 'Admin User'.</msg>
<status status="PASS" starttime="20250923 07:07:24.497" endtime="20250923 07:07:24.503"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>admin@demo.com</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:07:24.509" level="INFO">Current page contains text 'admin@demo.com'.</msg>
<status status="PASS" starttime="20250923 07:07:24.503" endtime="20250923 07:07:24.509"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:24.510" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:24.510" endtime="20250923 07:07:24.512"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:24.512" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:24.512" endtime="20250923 07:07:24.514"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:07:24.514" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:07:24.514" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:07:24.514" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:07:24.514" endtime="20250923 07:07:24.516"/>
</kw>
<status status="PASS" starttime="20250923 07:07:24.514" endtime="20250923 07:07:24.516"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:25.517" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:24.516" endtime="20250923 07:07:25.517"/>
</kw>
<status status="PASS" starttime="20250923 07:07:24.509" endtime="20250923 07:07:25.517"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:07:25.518" endtime="20250923 07:07:25.742"/>
</kw>
<status status="PASS" starttime="20250923 07:07:25.517" endtime="20250923 07:07:25.742"/>
</kw>
<status status="PASS" starttime="20250923 07:07:24.509" endtime="20250923 07:07:25.742"/>
</kw>
<doc>Test successful login with admin credentials using quick fill</doc>
<tag>admin</tag>
<tag>authentication</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20250923 07:07:14.341" endtime="20250923 07:07:25.742"/>
</test>
<test id="s1-t4" name="TC004 - Successful Manual Login" line="63">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:07:25.744" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:07:25.743" endtime="20250923 07:07:27.055"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:07:27.056" endtime="20250923 07:07:27.425"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:07:27.425" endtime="20250923 07:07:27.426"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:07:27.426" endtime="20250923 07:07:27.434"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:30.437" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:07:27.434" endtime="20250923 07:07:30.437"/>
</kw>
<status status="PASS" starttime="20250923 07:07:25.743" endtime="20250923 07:07:30.438"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:30.439" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:30.438" endtime="20250923 07:07:30.445"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:30.446" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:30.445" endtime="20250923 07:07:30.449"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:07:30.450" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:07:30.451" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:07:30.451" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:07:30.450" endtime="20250923 07:07:30.455"/>
</kw>
<status status="PASS" starttime="20250923 07:07:30.449" endtime="20250923 07:07:30.455"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:31.457" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:30.455" endtime="20250923 07:07:31.457"/>
</kw>
<status status="PASS" starttime="20250923 07:07:30.438" endtime="20250923 07:07:31.458"/>
</kw>
<status status="PASS" starttime="20250923 07:07:25.743" endtime="20250923 07:07:31.458"/>
</kw>
<kw name="Login To DepFlow" library="depflow_keywords">
<arg>${ADMIN_USERNAME}</arg>
<arg>${ADMIN_PASSWORD}</arg>
<doc>Logs into DepFlow application</doc>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:33.461" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:07:31.459" endtime="20250923 07:07:33.462"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>localStorage.clear(); sessionStorage.clear();</arg>
<arg>const modals = ['loginModal', 'addDependencyModal', 'editDependencyModal'];</arg>
<arg>modals.forEach(id =&gt; {</arg>
<arg>const modal = document.getElementById(id);</arg>
<arg>if (modal) {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>}</arg>
<arg>});</arg>
<arg>// Ensure landing page is visible and dashboard is hidden</arg>
<arg>document.getElementById('landingPage').style.display = 'block';</arg>
<arg>document.getElementById('dashboardPage').classList.remove('show');</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:33.463" level="INFO">Executing JavaScript:
localStorage.clear(); sessionStorage.clear();const modals = ['loginModal', 'addDependencyModal', 'editDependencyModal'];modals.forEach(id =&gt; {const modal = document.getElementById(id);if (modal) {modal.style.display = 'none';modal.classList.remove('show');}});// Ensure landing page is visible and dashboard is hiddendocument.getElementById('landingPage').style.display = 'block';document.getElementById('dashboardPage').classList.remove('show');
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:33.462" endtime="20250923 07:07:33.470"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:34.472" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:33.470" endtime="20250923 07:07:34.476"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${modal_visible}</var>
<arg>Element Should Be Visible</arg>
<arg>${LOGIN_MODAL}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 07:07:34.653" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:07:34.653" level="FAIL">The element 'id:loginModal' should be visible, but it is not.</msg>
<status status="FAIL" starttime="20250923 07:07:34.477" endtime="20250923 07:07:34.653"/>
</kw>
<msg timestamp="20250923 07:07:34.653" level="INFO">${modal_visible} = False</msg>
<status status="PASS" starttime="20250923 07:07:34.476" endtime="20250923 07:07:34.653"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${modal_visible}</arg>
<arg>Execute Javascript</arg>
<arg>closeLoginModal();</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 07:07:34.653" endtime="20250923 07:07:34.653"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:35.654" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:34.653" endtime="20250923 07:07:35.655"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>const loginBtn = document.querySelector('button[onclick*="openLoginModal"]');</arg>
<arg>if (loginBtn) { loginBtn.click(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:35.656" level="INFO">Executing JavaScript:
const loginBtn = document.querySelector('button[onclick*="openLoginModal"]');if (loginBtn) { loginBtn.click(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:35.655" endtime="20250923 07:07:35.665"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:07:35.665" endtime="20250923 07:07:35.899"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${USERNAME_FIELD}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 07:07:35.899" endtime="20250923 07:07:35.928"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 07:07:35.928" endtime="20250923 07:07:35.942"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USERNAME_FIELD}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 07:07:35.943" level="INFO">Typing text 'admin@demo.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20250923 07:07:35.942" endtime="20250923 07:07:36.043"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 07:07:36.044" level="INFO">Typing text 'admin123456' into text field 'id:password'.</msg>
<status status="PASS" starttime="20250923 07:07:36.043" endtime="20250923 07:07:36.078"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_SUBMIT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:07:36.078" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-login')]'.</msg>
<msg timestamp="20250923 07:07:37.250" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-4.png"&gt;&lt;img src="selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:07:37.251" level="FAIL">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000100883418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x000000010087b3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x00000001003a5050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x00000001003f1f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x00000001003f04d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x00000001003ee2ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001003ed6e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
7   chromedriver                        0x00000001003e2220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
8   chromedriver                        0x00000001003e1cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
9   chromedriver                        0x000000010042d604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
10  chromedriver                        0x00000001003e00d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x0000000100847b08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x000000010084ad20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x0000000100828e58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x000000010084b5cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x000000010081a59c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x000000010086a9f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x000000010086ab70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x000000010087b000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 07:07:36.078" endtime="20250923 07:07:37.265"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:07:37.265" endtime="20250923 07:07:37.265"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:07:37.265" endtime="20250923 07:07:37.265"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:07:37.266" endtime="20250923 07:07:37.266"/>
</kw>
<status status="FAIL" starttime="20250923 07:07:31.458" endtime="20250923 07:07:37.266"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 07:07:37.266" endtime="20250923 07:07:37.266"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" starttime="20250923 07:07:37.266" endtime="20250923 07:07:37.266"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:07:37.266" endtime="20250923 07:07:37.266"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:37.266" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:37.266" endtime="20250923 07:07:37.270"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:37.271" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:37.270" endtime="20250923 07:07:37.273"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:07:37.273" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:07:37.273" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:07:37.273" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:07:37.273" endtime="20250923 07:07:37.275"/>
</kw>
<status status="PASS" starttime="20250923 07:07:37.273" endtime="20250923 07:07:37.275"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:38.277" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:37.275" endtime="20250923 07:07:38.277"/>
</kw>
<status status="PASS" starttime="20250923 07:07:37.266" endtime="20250923 07:07:38.277"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:07:38.279" endtime="20250923 07:07:38.474"/>
</kw>
<status status="PASS" starttime="20250923 07:07:38.279" endtime="20250923 07:07:38.474"/>
</kw>
<status status="PASS" starttime="20250923 07:07:37.266" endtime="20250923 07:07:38.474"/>
</kw>
<doc>Test successful login with manual credential entry</doc>
<tag>authentication</tag>
<tag>manual</tag>
<status status="FAIL" starttime="20250923 07:07:25.743" endtime="20250923 07:07:38.474">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000100883418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x000000010087b3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x00000001003a5050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x00000001003f1f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x00000001003f04d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x00000001003ee2ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001003ed6e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
    [ Message content over the limit has been removed. ]
... _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x0000000100847b08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x000000010084ad20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x0000000100828e58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x000000010084b5cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x000000010081a59c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x000000010086a9f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x000000010086ab70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x000000010087b000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8</status>
</test>
<test id="s1-t5" name="TC005 - Invalid Login Credentials" line="72">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:07:38.476" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:07:38.476" endtime="20250923 07:07:39.769"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:07:39.770" endtime="20250923 07:07:40.139"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:07:40.140" endtime="20250923 07:07:40.141"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:07:40.141" endtime="20250923 07:07:40.148"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:43.149" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:07:40.148" endtime="20250923 07:07:43.149"/>
</kw>
<status status="PASS" starttime="20250923 07:07:38.476" endtime="20250923 07:07:43.149"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:43.150" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:43.150" endtime="20250923 07:07:43.157"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:43.157" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:43.157" endtime="20250923 07:07:43.160"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:07:43.161" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:07:43.162" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:07:43.162" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:07:43.161" endtime="20250923 07:07:43.167"/>
</kw>
<status status="PASS" starttime="20250923 07:07:43.161" endtime="20250923 07:07:43.167"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:44.169" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:43.167" endtime="20250923 07:07:44.169"/>
</kw>
<status status="PASS" starttime="20250923 07:07:43.149" endtime="20250923 07:07:44.169"/>
</kw>
<status status="PASS" starttime="20250923 07:07:38.475" endtime="20250923 07:07:44.169"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:07:44.170" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:07:44.170" endtime="20250923 07:07:44.213"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:07:44.213" endtime="20250923 07:07:44.450"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USERNAME_FIELD}</arg>
<arg>invalid@user.com</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 07:07:44.451" level="INFO">Typing text 'invalid@user.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20250923 07:07:44.451" endtime="20250923 07:07:44.551"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<arg>wrongpassword</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 07:07:44.551" level="INFO">Typing text 'wrongpassword' into text field 'id:password'.</msg>
<status status="PASS" starttime="20250923 07:07:44.551" endtime="20250923 07:07:44.587"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_SUBMIT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:07:44.588" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-login')]'.</msg>
<msg timestamp="20250923 07:07:45.774" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-5.png"&gt;&lt;img src="selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:07:45.774" level="FAIL">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000104a87418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000104a7f3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x00000001045a9050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x00000001045f5f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x00000001045f44d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x00000001045f22ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001045f16e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
7   chromedriver                        0x00000001045e6220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
8   chromedriver                        0x00000001045e5cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
9   chromedriver                        0x0000000104631604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
10  chromedriver                        0x00000001045e40d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x0000000104a4bb08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x0000000104a4ed20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x0000000104a2ce58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x0000000104a4f5cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x0000000104a1e59c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x0000000104a6e9f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x0000000104a6eb70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x0000000104a7f000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 07:07:44.587" endtime="20250923 07:07:45.774"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:07:45.774" endtime="20250923 07:07:45.774"/>
</kw>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<status status="NOT RUN" starttime="20250923 07:07:45.774" endtime="20250923 07:07:45.774"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:45.775" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:45.775" endtime="20250923 07:07:45.780"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:45.780" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:45.780" endtime="20250923 07:07:45.783"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:07:45.783" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:07:45.783" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:07:45.783" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:07:45.783" endtime="20250923 07:07:45.785"/>
</kw>
<status status="PASS" starttime="20250923 07:07:45.783" endtime="20250923 07:07:45.785"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:46.786" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:45.785" endtime="20250923 07:07:46.787"/>
</kw>
<status status="PASS" starttime="20250923 07:07:45.774" endtime="20250923 07:07:46.787"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:07:46.788" endtime="20250923 07:07:47.172"/>
</kw>
<status status="PASS" starttime="20250923 07:07:46.787" endtime="20250923 07:07:47.172"/>
</kw>
<status status="PASS" starttime="20250923 07:07:45.774" endtime="20250923 07:07:47.172"/>
</kw>
<doc>Test login failure with invalid credentials</doc>
<tag>authentication</tag>
<tag>negative</tag>
<status status="FAIL" starttime="20250923 07:07:38.475" endtime="20250923 07:07:47.172">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000104a87418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000104a7f3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x00000001045a9050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x00000001045f5f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x00000001045f44d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x00000001045f22ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001045f16e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
    [ Message content over the limit has been removed. ]
... _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x0000000104a4bb08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x0000000104a4ed20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x0000000104a2ce58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x0000000104a4f5cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x0000000104a1e59c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x0000000104a6e9f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x0000000104a6eb70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x0000000104a7f000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8</status>
</test>
<test id="s1-t6" name="TC006 - Empty Credentials Login" line="86">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:07:47.173" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:07:47.173" endtime="20250923 07:07:48.567"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:07:48.568" endtime="20250923 07:07:48.940"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:07:48.941" endtime="20250923 07:07:48.942"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:07:48.942" endtime="20250923 07:07:48.949"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:51.951" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:07:48.949" endtime="20250923 07:07:51.952"/>
</kw>
<status status="PASS" starttime="20250923 07:07:47.173" endtime="20250923 07:07:51.952"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:51.953" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:51.953" endtime="20250923 07:07:51.959"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:51.959" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:51.959" endtime="20250923 07:07:51.963"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:07:51.966" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:07:51.967" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:07:51.967" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:07:51.964" endtime="20250923 07:07:51.971"/>
</kw>
<status status="PASS" starttime="20250923 07:07:51.963" endtime="20250923 07:07:51.972"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:52.973" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:51.972" endtime="20250923 07:07:52.973"/>
</kw>
<status status="PASS" starttime="20250923 07:07:51.952" endtime="20250923 07:07:52.973"/>
</kw>
<status status="PASS" starttime="20250923 07:07:47.173" endtime="20250923 07:07:52.973"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:07:52.974" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:07:52.974" endtime="20250923 07:07:53.015"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:07:53.015" endtime="20250923 07:07:53.040"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${USERNAME_FIELD}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 07:07:53.043" endtime="20250923 07:07:53.067"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 07:07:53.067" endtime="20250923 07:07:53.083"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_SUBMIT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:07:53.083" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-login')]'.</msg>
<msg timestamp="20250923 07:07:54.278" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-6.png"&gt;&lt;img src="selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:07:54.279" level="FAIL">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x00000001045fb418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x00000001045f33b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x000000010411d050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x0000000104169f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x00000001041684d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x00000001041662ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001041656e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
7   chromedriver                        0x000000010415a220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
8   chromedriver                        0x0000000104159cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
9   chromedriver                        0x00000001041a5604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
10  chromedriver                        0x00000001041580d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x00000001045bfb08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x00000001045c2d20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x00000001045a0e58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x00000001045c35cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x000000010459259c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x00000001045e29f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x00000001045e2b70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x00000001045f3000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 07:07:53.083" endtime="20250923 07:07:54.279"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:07:54.279" endtime="20250923 07:07:54.279"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:54.280" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:54.280" endtime="20250923 07:07:54.283"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:07:54.283" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:07:54.283" endtime="20250923 07:07:54.284"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:07:54.285" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:07:54.285" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:07:54.285" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:07:54.285" endtime="20250923 07:07:54.288"/>
</kw>
<status status="PASS" starttime="20250923 07:07:54.284" endtime="20250923 07:07:54.288"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:07:55.289" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:07:54.288" endtime="20250923 07:07:55.289"/>
</kw>
<status status="PASS" starttime="20250923 07:07:54.279" endtime="20250923 07:07:55.289"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:07:55.290" endtime="20250923 07:07:55.452"/>
</kw>
<status status="PASS" starttime="20250923 07:07:55.289" endtime="20250923 07:07:55.452"/>
</kw>
<status status="PASS" starttime="20250923 07:07:54.279" endtime="20250923 07:07:55.452"/>
</kw>
<doc>Test login with empty username and password fields</doc>
<tag>authentication</tag>
<tag>negative</tag>
<tag>validation</tag>
<status status="FAIL" starttime="20250923 07:07:47.172" endtime="20250923 07:07:55.452">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x00000001045fb418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x00000001045f33b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x000000010411d050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x0000000104169f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x00000001041684d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x00000001041662ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001041656e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
    [ Message content over the limit has been removed. ]
... _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x00000001045bfb08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x00000001045c2d20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x00000001045a0e58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x00000001045c35cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x000000010459259c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x00000001045e29f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x00000001045e2b70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x00000001045f3000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8</status>
</test>
<test id="s1-t7" name="TC007 - Successful Logout" line="99">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:07:55.455" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:07:55.454" endtime="20250923 07:07:56.815"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:07:56.815" endtime="20250923 07:07:57.180"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:07:57.181" endtime="20250923 07:07:57.183"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:07:57.184" endtime="20250923 07:07:57.192"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:00.193" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:07:57.192" endtime="20250923 07:08:00.193"/>
</kw>
<status status="PASS" starttime="20250923 07:07:55.454" endtime="20250923 07:08:00.194"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:00.195" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:00.194" endtime="20250923 07:08:00.202"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:00.203" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:00.202" endtime="20250923 07:08:00.207"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:08:00.208" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:08:00.209" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:08:00.209" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:08:00.208" endtime="20250923 07:08:00.214"/>
</kw>
<status status="PASS" starttime="20250923 07:08:00.208" endtime="20250923 07:08:00.214"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:01.216" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:00.214" endtime="20250923 07:08:01.216"/>
</kw>
<status status="PASS" starttime="20250923 07:08:00.194" endtime="20250923 07:08:01.216"/>
</kw>
<status status="PASS" starttime="20250923 07:07:55.454" endtime="20250923 07:08:01.216"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${modal_visible}</var>
<arg>Element Should Be Visible</arg>
<arg>${LOGIN_MODAL}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 07:08:01.414" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-7.png"&gt;&lt;img src="selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:08:01.414" level="FAIL">The element 'id:loginModal' should be visible, but it is not.</msg>
<status status="FAIL" starttime="20250923 07:08:01.217" endtime="20250923 07:08:01.414"/>
</kw>
<msg timestamp="20250923 07:08:01.414" level="INFO">${modal_visible} = False</msg>
<status status="PASS" starttime="20250923 07:08:01.216" endtime="20250923 07:08:01.414"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${modal_visible}</arg>
<arg>Execute Javascript</arg>
<arg>closeLoginModal()</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 07:08:01.414" endtime="20250923 07:08:01.414"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:02.417" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:01.415" endtime="20250923 07:08:02.417"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:08:02.418" endtime="20250923 07:08:02.426"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:03.427" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:02.426" endtime="20250923 07:08:03.427"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:03.428" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:03.427" endtime="20250923 07:08:03.446"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:05.448" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:08:03.447" endtime="20250923 07:08:05.448"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:08:05.448" endtime="20250923 07:08:05.465"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:08:05.465" endtime="20250923 07:08:05.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:08:05.478" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:08:05.477" endtime="20250923 07:08:05.478"/>
</kw>
<status status="PASS" starttime="20250923 07:08:02.418" endtime="20250923 07:08:05.478"/>
</kw>
<status status="PASS" starttime="20250923 07:08:02.417" endtime="20250923 07:08:05.478"/>
</kw>
<status status="PASS" starttime="20250923 07:08:02.417" endtime="20250923 07:08:05.478"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:08:05.478" endtime="20250923 07:08:05.489"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:08:05.489" endtime="20250923 07:08:05.497"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:08:05.497" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-logout')]'.</msg>
<status status="PASS" starttime="20250923 07:08:05.497" endtime="20250923 07:08:05.572"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<msg timestamp="20250923 07:08:15.804" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-8.png"&gt;&lt;img src="selenium-screenshot-8.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:08:15.804" level="FAIL">Element 'id:userPanel' still visible after 10 seconds.</msg>
<status status="FAIL" starttime="20250923 07:08:05.572" endtime="20250923 07:08:15.813"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20250923 07:08:15.814" endtime="20250923 07:08:15.814"/>
</kw>
<status status="FAIL" starttime="20250923 07:08:05.489" endtime="20250923 07:08:15.814"/>
</kw>
<kw name="Verify DepFlow Logo Present" library="depflow_keywords">
<doc>Verifies DepFlow logo is present on page</doc>
<status status="NOT RUN" starttime="20250923 07:08:15.814" endtime="20250923 07:08:15.814"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" starttime="20250923 07:08:15.814" endtime="20250923 07:08:15.814"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<status status="NOT RUN" starttime="20250923 07:08:15.814" endtime="20250923 07:08:15.814"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:15.815" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:15.814" endtime="20250923 07:08:15.817"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:15.817" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:15.817" endtime="20250923 07:08:15.819"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:08:15.820" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:08:15.820" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:08:15.820" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:08:15.819" endtime="20250923 07:08:15.823"/>
</kw>
<status status="PASS" starttime="20250923 07:08:15.819" endtime="20250923 07:08:15.823"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:16.823" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:15.823" endtime="20250923 07:08:16.824"/>
</kw>
<status status="PASS" starttime="20250923 07:08:15.814" endtime="20250923 07:08:16.824"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:08:16.825" endtime="20250923 07:08:17.200"/>
</kw>
<status status="PASS" starttime="20250923 07:08:16.824" endtime="20250923 07:08:17.200"/>
</kw>
<status status="PASS" starttime="20250923 07:08:15.814" endtime="20250923 07:08:17.200"/>
</kw>
<doc>Test successful logout functionality</doc>
<tag>authentication</tag>
<tag>logout</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20250923 07:07:55.453" endtime="20250923 07:08:17.200">Element 'id:userPanel' still visible after 10 seconds.</status>
</test>
<test id="s1-t8" name="TC008 - Admin Credentials Auto-Fill" line="117">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:08:17.201" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:08:17.201" endtime="20250923 07:08:18.645"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:08:18.645" endtime="20250923 07:08:19.014"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:08:19.014" endtime="20250923 07:08:19.016"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:08:19.016" endtime="20250923 07:08:19.024"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:22.027" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:08:19.024" endtime="20250923 07:08:22.027"/>
</kw>
<status status="PASS" starttime="20250923 07:08:17.200" endtime="20250923 07:08:22.028"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:22.029" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:22.028" endtime="20250923 07:08:22.033"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:22.033" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:22.033" endtime="20250923 07:08:22.036"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:08:22.037" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:08:22.037" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:08:22.037" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:08:22.037" endtime="20250923 07:08:22.042"/>
</kw>
<status status="PASS" starttime="20250923 07:08:22.036" endtime="20250923 07:08:22.042"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:23.045" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:22.042" endtime="20250923 07:08:23.045"/>
</kw>
<status status="PASS" starttime="20250923 07:08:22.028" endtime="20250923 07:08:23.045"/>
</kw>
<status status="PASS" starttime="20250923 07:08:17.200" endtime="20250923 07:08:23.045"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:08:23.046" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:08:23.046" endtime="20250923 07:08:23.090"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:08:23.090" endtime="20250923 07:08:23.107"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADMIN_CREDENTIALS_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:08:23.108" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'fillAdminCredentials')]'.</msg>
<status status="PASS" starttime="20250923 07:08:23.107" endtime="20250923 07:08:23.144"/>
</kw>
<kw name="Get Value" library="SeleniumLibrary">
<var>${username_value}</var>
<arg>${USERNAME_FIELD}</arg>
<doc>Returns the value attribute of the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:08:23.156" level="INFO">${username_value} = admin@demo.com</msg>
<status status="PASS" starttime="20250923 07:08:23.144" endtime="20250923 07:08:23.156"/>
</kw>
<kw name="Get Value" library="SeleniumLibrary">
<var>${password_value}</var>
<arg>${PASSWORD_FIELD}</arg>
<doc>Returns the value attribute of the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:08:23.164" level="INFO">${password_value} = admin123456</msg>
<status status="PASS" starttime="20250923 07:08:23.156" endtime="20250923 07:08:23.164"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${username_value}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250923 07:08:23.164" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20250923 07:08:23.164" endtime="20250923 07:08:23.164"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${password_value}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250923 07:08:23.164" level="INFO">Length is 11</msg>
<status status="PASS" starttime="20250923 07:08:23.164" endtime="20250923 07:08:23.164"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:23.165" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:23.165" endtime="20250923 07:08:23.168"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:23.169" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:23.168" endtime="20250923 07:08:23.170"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:08:23.171" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:08:23.171" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:08:23.171" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:08:23.171" endtime="20250923 07:08:23.173"/>
</kw>
<status status="PASS" starttime="20250923 07:08:23.170" endtime="20250923 07:08:23.173"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:24.174" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:23.173" endtime="20250923 07:08:24.175"/>
</kw>
<status status="PASS" starttime="20250923 07:08:23.165" endtime="20250923 07:08:24.175"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:08:24.176" endtime="20250923 07:08:24.369"/>
</kw>
<status status="PASS" starttime="20250923 07:08:24.175" endtime="20250923 07:08:24.369"/>
</kw>
<status status="PASS" starttime="20250923 07:08:23.165" endtime="20250923 07:08:24.369"/>
</kw>
<doc>Test the admin credentials auto-fill functionality</doc>
<tag>authentication</tag>
<tag>convenience</tag>
<status status="PASS" starttime="20250923 07:08:17.200" endtime="20250923 07:08:24.369"/>
</test>
<test id="s1-t9" name="TC009 - Login Modal Close Functionality" line="131">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:08:24.371" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:08:24.370" endtime="20250923 07:08:25.998"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:08:25.999" endtime="20250923 07:08:26.359"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:08:26.360" endtime="20250923 07:08:26.362"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:08:26.362" endtime="20250923 07:08:26.370"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:29.371" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:08:26.370" endtime="20250923 07:08:29.371"/>
</kw>
<status status="PASS" starttime="20250923 07:08:24.370" endtime="20250923 07:08:29.372"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:29.373" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:29.372" endtime="20250923 07:08:29.380"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:29.380" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:29.380" endtime="20250923 07:08:29.384"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:08:29.385" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:08:29.386" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:08:29.386" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:08:29.385" endtime="20250923 07:08:29.390"/>
</kw>
<status status="PASS" starttime="20250923 07:08:29.384" endtime="20250923 07:08:29.391"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:30.393" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:29.391" endtime="20250923 07:08:30.393"/>
</kw>
<status status="PASS" starttime="20250923 07:08:29.372" endtime="20250923 07:08:30.393"/>
</kw>
<status status="PASS" starttime="20250923 07:08:24.370" endtime="20250923 07:08:30.393"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:08:30.395" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:08:30.394" endtime="20250923 07:08:30.437"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:08:30.437" endtime="20250923 07:08:30.453"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:08:30.454" level="INFO">Sending key(s) ('ESCAPE',) to id:loginModal element.</msg>
<msg timestamp="20250923 07:08:30.742" level="INFO">Pressing special key ESCAPE to element.</msg>
<msg timestamp="20250923 07:08:30.743" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:08:30.453" endtime="20250923 07:08:30.750"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 07:08:30.751" endtime="20250923 07:08:30.761"/>
</kw>
<kw name="Verify DepFlow Logo Present" library="depflow_keywords">
<doc>Verifies DepFlow logo is present on page</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:08:30.765" level="INFO">Current page contains element 'xpath://div[contains(@class, 'depflow-logo')]'.</msg>
<status status="PASS" starttime="20250923 07:08:30.761" endtime="20250923 07:08:30.765"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 07:08:30.773" level="INFO">Element 'xpath://div[contains(@class, 'depflow-logo')]' is displayed.</msg>
<status status="PASS" starttime="20250923 07:08:30.766" endtime="20250923 07:08:30.773"/>
</kw>
<status status="PASS" starttime="20250923 07:08:30.761" endtime="20250923 07:08:30.773"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:30.774" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:30.774" endtime="20250923 07:08:30.776"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:30.776" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:30.776" endtime="20250923 07:08:30.778"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:08:30.779" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:08:30.779" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:08:30.779" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:08:30.778" endtime="20250923 07:08:30.781"/>
</kw>
<status status="PASS" starttime="20250923 07:08:30.778" endtime="20250923 07:08:30.781"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:31.783" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:30.781" endtime="20250923 07:08:31.783"/>
</kw>
<status status="PASS" starttime="20250923 07:08:30.774" endtime="20250923 07:08:31.783"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:08:31.784" endtime="20250923 07:08:31.936"/>
</kw>
<status status="PASS" starttime="20250923 07:08:31.783" endtime="20250923 07:08:31.936"/>
</kw>
<status status="PASS" starttime="20250923 07:08:30.773" endtime="20250923 07:08:31.936"/>
</kw>
<doc>Test closing the login modal without logging in</doc>
<tag>modal</tag>
<tag>ui</tag>
<tag>usability</tag>
<status status="PASS" starttime="20250923 07:08:24.370" endtime="20250923 07:08:31.936"/>
</test>
<test id="s1-t10" name="TC010 - Session Persistence Check" line="145">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:08:31.937" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:08:31.937" endtime="20250923 07:08:33.384"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:08:33.384" endtime="20250923 07:08:33.744"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:08:33.745" endtime="20250923 07:08:33.746"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:08:33.746" endtime="20250923 07:08:33.754"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:36.756" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:08:33.754" endtime="20250923 07:08:36.756"/>
</kw>
<status status="PASS" starttime="20250923 07:08:31.937" endtime="20250923 07:08:36.756"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:36.758" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:36.757" endtime="20250923 07:08:36.763"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:36.765" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:36.764" endtime="20250923 07:08:36.768"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:08:36.769" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:08:36.769" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:08:36.769" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:08:36.769" endtime="20250923 07:08:36.775"/>
</kw>
<status status="PASS" starttime="20250923 07:08:36.769" endtime="20250923 07:08:36.775"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:37.776" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:36.775" endtime="20250923 07:08:37.777"/>
</kw>
<status status="PASS" starttime="20250923 07:08:36.756" endtime="20250923 07:08:37.777"/>
</kw>
<status status="PASS" starttime="20250923 07:08:31.937" endtime="20250923 07:08:37.777"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:08:37.778" endtime="20250923 07:08:37.786"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:38.787" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:37.786" endtime="20250923 07:08:38.787"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:38.788" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:38.787" endtime="20250923 07:08:38.805"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:40.806" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:08:38.805" endtime="20250923 07:08:40.806"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:08:40.806" endtime="20250923 07:08:40.826"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:08:40.826" endtime="20250923 07:08:40.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:08:40.838" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:08:40.838" endtime="20250923 07:08:40.839"/>
</kw>
<status status="PASS" starttime="20250923 07:08:37.777" endtime="20250923 07:08:40.839"/>
</kw>
<status status="PASS" starttime="20250923 07:08:37.777" endtime="20250923 07:08:40.839"/>
</kw>
<status status="PASS" starttime="20250923 07:08:37.777" endtime="20250923 07:08:40.839"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:08:40.839" endtime="20250923 07:08:40.846"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:08:40.850" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:08:40.847" endtime="20250923 07:08:40.850"/>
</kw>
<status status="PASS" starttime="20250923 07:08:40.839" endtime="20250923 07:08:40.850"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:08:40.853" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:08:40.850" endtime="20250923 07:08:40.853"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>admin@demo.com</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:08:40.859" level="INFO">Current page contains text 'admin@demo.com'.</msg>
<status status="PASS" starttime="20250923 07:08:40.853" endtime="20250923 07:08:40.859"/>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20250923 07:08:40.859" endtime="20250923 07:08:40.878"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:08:40.879" endtime="20250923 07:08:40.890"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:08:40.893" level="INFO">Current page contains element 'id:dashboardPage'.</msg>
<status status="PASS" starttime="20250923 07:08:40.890" endtime="20250923 07:08:40.893"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>admin@demo.com</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:08:40.898" level="INFO">Current page contains text 'admin@demo.com'.</msg>
<status status="PASS" starttime="20250923 07:08:40.893" endtime="20250923 07:08:40.899"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${user_data}</var>
<arg>return localStorage.getItem('depflow_user')</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:40.899" level="INFO">Executing JavaScript:
return localStorage.getItem('depflow_user')
Without any arguments.</msg>
<msg timestamp="20250923 07:08:40.901" level="INFO">${user_data} = {"email":"admin@demo.com","name":"Admin User","role":"admin"}</msg>
<status status="PASS" starttime="20250923 07:08:40.899" endtime="20250923 07:08:40.901"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${user_data}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250923 07:08:40.901" level="INFO">Length is 61</msg>
<status status="PASS" starttime="20250923 07:08:40.901" endtime="20250923 07:08:40.901"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${user_data}</arg>
<arg>admin@demo.com</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250923 07:08:40.901" endtime="20250923 07:08:40.901"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:40.901" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:40.901" endtime="20250923 07:08:40.903"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:40.903" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:40.903" endtime="20250923 07:08:40.906"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:08:40.906" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:08:40.906" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:08:40.906" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:08:40.906" endtime="20250923 07:08:40.908"/>
</kw>
<status status="PASS" starttime="20250923 07:08:40.906" endtime="20250923 07:08:40.908"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:41.910" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:40.909" endtime="20250923 07:08:41.910"/>
</kw>
<status status="PASS" starttime="20250923 07:08:40.901" endtime="20250923 07:08:41.910"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:08:41.911" endtime="20250923 07:08:42.065"/>
</kw>
<status status="PASS" starttime="20250923 07:08:41.910" endtime="20250923 07:08:42.066"/>
</kw>
<status status="PASS" starttime="20250923 07:08:40.901" endtime="20250923 07:08:42.066"/>
</kw>
<doc>Test that user session persists across page operations and browser refresh</doc>
<tag>authentication</tag>
<tag>persistence</tag>
<tag>session</tag>
<status status="PASS" starttime="20250923 07:08:31.936" endtime="20250923 07:08:42.066"/>
</test>
<test id="s1-t11" name="TC011 - User Role Display Verification" line="167">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:08:42.067" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:08:42.067" endtime="20250923 07:08:43.649"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:08:43.650" endtime="20250923 07:08:44.012"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:08:44.012" endtime="20250923 07:08:44.014"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:08:44.014" endtime="20250923 07:08:44.024"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:47.025" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:08:44.024" endtime="20250923 07:08:47.026"/>
</kw>
<status status="PASS" starttime="20250923 07:08:42.067" endtime="20250923 07:08:47.026"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:47.027" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:47.026" endtime="20250923 07:08:47.030"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:47.031" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:47.030" endtime="20250923 07:08:47.033"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:08:47.034" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:08:47.034" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:08:47.034" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:08:47.033" endtime="20250923 07:08:47.038"/>
</kw>
<status status="PASS" starttime="20250923 07:08:47.033" endtime="20250923 07:08:47.038"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:48.040" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:47.038" endtime="20250923 07:08:48.041"/>
</kw>
<status status="PASS" starttime="20250923 07:08:47.026" endtime="20250923 07:08:48.041"/>
</kw>
<status status="PASS" starttime="20250923 07:08:42.066" endtime="20250923 07:08:48.041"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:08:48.042" endtime="20250923 07:08:48.051"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:49.054" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:48.051" endtime="20250923 07:08:49.054"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:49.054" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:49.054" endtime="20250923 07:08:49.070"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:51.071" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:08:49.070" endtime="20250923 07:08:51.072"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:08:51.072" endtime="20250923 07:08:51.094"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:08:51.095" endtime="20250923 07:08:51.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:08:51.106" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:08:51.106" endtime="20250923 07:08:51.106"/>
</kw>
<status status="PASS" starttime="20250923 07:08:48.042" endtime="20250923 07:08:51.106"/>
</kw>
<status status="PASS" starttime="20250923 07:08:48.042" endtime="20250923 07:08:51.106"/>
</kw>
<status status="PASS" starttime="20250923 07:08:48.041" endtime="20250923 07:08:51.106"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:08:51.106" endtime="20250923 07:08:51.114"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Admin</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:08:51.120" level="INFO">Current page contains text 'Admin'.</msg>
<status status="PASS" starttime="20250923 07:08:51.114" endtime="20250923 07:08:51.120"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Admin User</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:08:51.126" level="INFO">Current page contains text 'Admin User'.</msg>
<status status="PASS" starttime="20250923 07:08:51.121" endtime="20250923 07:08:51.126"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:51.127" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:51.127" endtime="20250923 07:08:51.129"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:51.129" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:51.129" endtime="20250923 07:08:51.131"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:08:51.131" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:08:51.131" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:08:51.131" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:08:51.131" endtime="20250923 07:08:51.133"/>
</kw>
<status status="PASS" starttime="20250923 07:08:51.131" endtime="20250923 07:08:51.133"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:52.135" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:51.133" endtime="20250923 07:08:52.136"/>
</kw>
<status status="PASS" starttime="20250923 07:08:51.127" endtime="20250923 07:08:52.136"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:08:52.136" endtime="20250923 07:08:52.276"/>
</kw>
<status status="PASS" starttime="20250923 07:08:52.136" endtime="20250923 07:08:52.276"/>
</kw>
<status status="PASS" starttime="20250923 07:08:51.127" endtime="20250923 07:08:52.276"/>
</kw>
<doc>Verify that user role is correctly displayed after login</doc>
<tag>authentication</tag>
<tag>role</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 07:08:42.066" endtime="20250923 07:08:52.276"/>
</test>
<test id="s1-t12" name="TC012 - Multiple Login Attempts" line="176">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:08:52.278" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:08:52.277" endtime="20250923 07:08:53.757"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:08:53.757" endtime="20250923 07:08:54.122"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:08:54.122" endtime="20250923 07:08:54.123"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:08:54.123" endtime="20250923 07:08:54.130"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:57.131" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:08:54.130" endtime="20250923 07:08:57.131"/>
</kw>
<status status="PASS" starttime="20250923 07:08:52.277" endtime="20250923 07:08:57.132"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:57.134" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:57.132" endtime="20250923 07:08:57.141"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:57.141" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:57.141" endtime="20250923 07:08:57.145"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:08:57.146" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:08:57.146" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:08:57.146" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:08:57.146" endtime="20250923 07:08:57.151"/>
</kw>
<status status="PASS" starttime="20250923 07:08:57.145" endtime="20250923 07:08:57.151"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:08:58.152" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:57.152" endtime="20250923 07:08:58.152"/>
</kw>
<status status="PASS" starttime="20250923 07:08:57.132" endtime="20250923 07:08:58.152"/>
</kw>
<status status="PASS" starttime="20250923 07:08:52.277" endtime="20250923 07:08:58.152"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>3</value>
<iter>
<var name="${i}">0</var>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:08:58.153" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:08:58.153" endtime="20250923 07:08:58.200"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:08:58.200" endtime="20250923 07:08:58.217"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USERNAME_FIELD}</arg>
<arg>invalid${i}@demo.com</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 07:08:58.218" level="INFO">Typing text 'invalid0@demo.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20250923 07:08:58.217" endtime="20250923 07:08:58.328"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<arg>wrongpass${i}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 07:08:58.328" level="INFO">Typing text 'wrongpass0' into text field 'id:password'.</msg>
<status status="PASS" starttime="20250923 07:08:58.328" endtime="20250923 07:08:58.385"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_SUBMIT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:08:58.385" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-login')]'.</msg>
<msg timestamp="20250923 07:08:59.643" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-9.png"&gt;&lt;img src="selenium-screenshot-9.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:08:59.644" level="FAIL">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000102c9f418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000102c973b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x00000001027c1050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x000000010280df6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x000000010280c4d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x000000010280a2ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001028096e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
7   chromedriver                        0x00000001027fe220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
8   chromedriver                        0x00000001027fdcac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
9   chromedriver                        0x0000000102849604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
10  chromedriver                        0x00000001027fc0d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x0000000102c63b08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x0000000102c66d20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x0000000102c44e58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x0000000102c675cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x0000000102c3659c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x0000000102c869f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x0000000102c86b70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x0000000102c97000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 07:08:58.385" endtime="20250923 07:08:59.644"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:08:59.645" endtime="20250923 07:08:59.645"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:08:59.645" endtime="20250923 07:08:59.645"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="NOT RUN" starttime="20250923 07:08:59.645" endtime="20250923 07:08:59.645"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:08:59.645" endtime="20250923 07:08:59.645"/>
</kw>
<status status="FAIL" starttime="20250923 07:08:58.153" endtime="20250923 07:08:59.645"/>
</iter>
<status status="FAIL" starttime="20250923 07:08:58.152" endtime="20250923 07:08:59.645"/>
</for>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:59.646" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:59.646" endtime="20250923 07:08:59.655"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:08:59.655" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:08:59.655" endtime="20250923 07:08:59.659"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:08:59.660" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:08:59.660" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:08:59.660" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:08:59.660" endtime="20250923 07:08:59.665"/>
</kw>
<status status="PASS" starttime="20250923 07:08:59.660" endtime="20250923 07:08:59.665"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:00.666" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:08:59.665" endtime="20250923 07:09:00.666"/>
</kw>
<status status="PASS" starttime="20250923 07:08:59.646" endtime="20250923 07:09:00.667"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:09:00.668" endtime="20250923 07:09:00.843"/>
</kw>
<status status="PASS" starttime="20250923 07:09:00.667" endtime="20250923 07:09:00.843"/>
</kw>
<status status="PASS" starttime="20250923 07:08:59.645" endtime="20250923 07:09:00.843"/>
</kw>
<doc>Test multiple failed login attempts handling</doc>
<tag>authentication</tag>
<tag>negative</tag>
<tag>security</tag>
<status status="FAIL" starttime="20250923 07:08:52.276" endtime="20250923 07:09:00.843">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000102c9f418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000102c973b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x00000001027c1050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x000000010280df6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x000000010280c4d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x000000010280a2ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001028096e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
    [ Message content over the limit has been removed. ]
... _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x0000000102c63b08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x0000000102c66d20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x0000000102c44e58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x0000000102c675cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x0000000102c3659c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x0000000102c869f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x0000000102c86b70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x0000000102c97000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8</status>
</test>
<test id="s1-t13" name="TC013 - User Role Login Test" line="196">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:09:00.845" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:09:00.845" endtime="20250923 07:09:02.536"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:09:02.539" endtime="20250923 07:09:02.909"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:09:02.909" endtime="20250923 07:09:02.911"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:09:02.911" endtime="20250923 07:09:02.920"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:05.923" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:09:02.920" endtime="20250923 07:09:05.924"/>
</kw>
<status status="PASS" starttime="20250923 07:09:00.844" endtime="20250923 07:09:05.925"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:05.930" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:05.928" endtime="20250923 07:09:05.938"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:05.939" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:05.939" endtime="20250923 07:09:05.942"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:09:05.944" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:09:05.944" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:09:05.944" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:09:05.943" endtime="20250923 07:09:05.950"/>
</kw>
<status status="PASS" starttime="20250923 07:09:05.942" endtime="20250923 07:09:05.951"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:06.953" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:09:05.951" endtime="20250923 07:09:06.953"/>
</kw>
<status status="PASS" starttime="20250923 07:09:05.925" endtime="20250923 07:09:06.953"/>
</kw>
<status status="PASS" starttime="20250923 07:09:00.844" endtime="20250923 07:09:06.953"/>
</kw>
<kw name="Login To DepFlow" library="depflow_keywords">
<arg>${USER_USERNAME}</arg>
<arg>${USER_PASSWORD}</arg>
<doc>Logs into DepFlow application</doc>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:08.955" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:09:06.954" endtime="20250923 07:09:08.955"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>localStorage.clear(); sessionStorage.clear();</arg>
<arg>const modals = ['loginModal', 'addDependencyModal', 'editDependencyModal'];</arg>
<arg>modals.forEach(id =&gt; {</arg>
<arg>const modal = document.getElementById(id);</arg>
<arg>if (modal) {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>}</arg>
<arg>});</arg>
<arg>// Ensure landing page is visible and dashboard is hidden</arg>
<arg>document.getElementById('landingPage').style.display = 'block';</arg>
<arg>document.getElementById('dashboardPage').classList.remove('show');</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:08.956" level="INFO">Executing JavaScript:
localStorage.clear(); sessionStorage.clear();const modals = ['loginModal', 'addDependencyModal', 'editDependencyModal'];modals.forEach(id =&gt; {const modal = document.getElementById(id);if (modal) {modal.style.display = 'none';modal.classList.remove('show');}});// Ensure landing page is visible and dashboard is hiddendocument.getElementById('landingPage').style.display = 'block';document.getElementById('dashboardPage').classList.remove('show');
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:08.955" endtime="20250923 07:09:08.964"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:09.965" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:09:08.964" endtime="20250923 07:09:09.966"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${modal_visible}</var>
<arg>Element Should Be Visible</arg>
<arg>${LOGIN_MODAL}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 07:09:10.151" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-10.png"&gt;&lt;img src="selenium-screenshot-10.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:09:10.151" level="FAIL">The element 'id:loginModal' should be visible, but it is not.</msg>
<status status="FAIL" starttime="20250923 07:09:09.966" endtime="20250923 07:09:10.151"/>
</kw>
<msg timestamp="20250923 07:09:10.151" level="INFO">${modal_visible} = False</msg>
<status status="PASS" starttime="20250923 07:09:09.966" endtime="20250923 07:09:10.151"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${modal_visible}</arg>
<arg>Execute Javascript</arg>
<arg>closeLoginModal();</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 07:09:10.151" endtime="20250923 07:09:10.152"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:11.153" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:09:10.152" endtime="20250923 07:09:11.153"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>const loginBtn = document.querySelector('button[onclick*="openLoginModal"]');</arg>
<arg>if (loginBtn) { loginBtn.click(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:11.153" level="INFO">Executing JavaScript:
const loginBtn = document.querySelector('button[onclick*="openLoginModal"]');if (loginBtn) { loginBtn.click(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:11.153" endtime="20250923 07:09:11.161"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:09:11.162" endtime="20250923 07:09:11.390"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${USERNAME_FIELD}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 07:09:11.390" endtime="20250923 07:09:11.419"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 07:09:11.419" endtime="20250923 07:09:11.437"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USERNAME_FIELD}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 07:09:11.437" level="INFO">Typing text 'user@demo.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20250923 07:09:11.437" endtime="20250923 07:09:11.553"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 07:09:11.553" level="INFO">Typing text 'user123456' into text field 'id:password'.</msg>
<status status="PASS" starttime="20250923 07:09:11.553" endtime="20250923 07:09:11.605"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_SUBMIT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:09:11.605" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-login')]'.</msg>
<msg timestamp="20250923 07:09:12.799" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-11.png"&gt;&lt;img src="selenium-screenshot-11.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:09:12.800" level="FAIL">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x000000010272f418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x00000001027273b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000102251050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x000000010229df6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x000000010229c4d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x000000010229a2ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001022996e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
7   chromedriver                        0x000000010228e220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
8   chromedriver                        0x000000010228dcac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
9   chromedriver                        0x00000001022d9604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
10  chromedriver                        0x000000010228c0d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x00000001026f3b08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x00000001026f6d20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x00000001026d4e58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x00000001026f75cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x00000001026c659c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x00000001027169f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x0000000102716b70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x0000000102727000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 07:09:11.605" endtime="20250923 07:09:12.800"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:09:12.800" endtime="20250923 07:09:12.800"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:09:12.800" endtime="20250923 07:09:12.800"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 07:09:12.800" endtime="20250923 07:09:12.800"/>
</kw>
<status status="FAIL" starttime="20250923 07:09:06.953" endtime="20250923 07:09:12.801"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>DepFlow - Enterprise Dependency Management Platform</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<status status="NOT RUN" starttime="20250923 07:09:12.801" endtime="20250923 07:09:12.801"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" starttime="20250923 07:09:12.801" endtime="20250923 07:09:12.801"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" starttime="20250923 07:09:12.801" endtime="20250923 07:09:12.801"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>user@demo.com</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 07:09:12.801" endtime="20250923 07:09:12.801"/>
</kw>
<kw name="Page Should Not Contain" library="SeleniumLibrary">
<arg>Admin User</arg>
<doc>Verifies the current page does not contain ``text``.</doc>
<status status="NOT RUN" starttime="20250923 07:09:12.801" endtime="20250923 07:09:12.801"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:12.802" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:12.801" endtime="20250923 07:09:12.807"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:12.808" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:12.807" endtime="20250923 07:09:12.810"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:09:12.811" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:09:12.811" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:09:12.811" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:09:12.810" endtime="20250923 07:09:12.813"/>
</kw>
<status status="PASS" starttime="20250923 07:09:12.810" endtime="20250923 07:09:12.813"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:13.816" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:09:12.813" endtime="20250923 07:09:13.816"/>
</kw>
<status status="PASS" starttime="20250923 07:09:12.801" endtime="20250923 07:09:13.816"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:09:13.817" endtime="20250923 07:09:14.213"/>
</kw>
<status status="PASS" starttime="20250923 07:09:13.816" endtime="20250923 07:09:14.213"/>
</kw>
<status status="PASS" starttime="20250923 07:09:12.801" endtime="20250923 07:09:14.213"/>
</kw>
<doc>Test successful login with regular user credentials</doc>
<tag>authentication</tag>
<tag>role</tag>
<tag>user</tag>
<status status="FAIL" starttime="20250923 07:09:00.844" endtime="20250923 07:09:14.213">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x000000010272f418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x00000001027273b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000102251050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x000000010229df6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x000000010229c4d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x000000010229a2ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001022996e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
    [ Message content over the limit has been removed. ]
... _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x00000001026f3b08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x00000001026f6d20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x00000001026d4e58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x00000001026f75cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x00000001026c659c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x00000001027169f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x0000000102716b70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x0000000102727000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8</status>
</test>
<test id="s1-t14" name="TC014 - JWT Token Storage Verification" line="209">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:09:14.214" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:09:14.214" endtime="20250923 07:09:15.799"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:09:15.800" endtime="20250923 07:09:16.169"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:09:16.169" endtime="20250923 07:09:16.170"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:09:16.170" endtime="20250923 07:09:16.178"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:19.181" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:09:16.179" endtime="20250923 07:09:19.186"/>
</kw>
<status status="PASS" starttime="20250923 07:09:14.214" endtime="20250923 07:09:19.186"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:19.188" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:19.188" endtime="20250923 07:09:19.194"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:19.194" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:19.194" endtime="20250923 07:09:19.197"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:09:19.197" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:09:19.198" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:09:19.198" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:09:19.197" endtime="20250923 07:09:19.202"/>
</kw>
<status status="PASS" starttime="20250923 07:09:19.197" endtime="20250923 07:09:19.202"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:20.202" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:09:19.202" endtime="20250923 07:09:20.203"/>
</kw>
<status status="PASS" starttime="20250923 07:09:19.187" endtime="20250923 07:09:20.203"/>
</kw>
<status status="PASS" starttime="20250923 07:09:14.214" endtime="20250923 07:09:20.203"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:09:20.204" endtime="20250923 07:09:20.210"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:21.213" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:09:20.210" endtime="20250923 07:09:21.213"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:21.214" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:21.213" endtime="20250923 07:09:21.231"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:23.235" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:09:21.232" endtime="20250923 07:09:23.236"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:09:23.236" endtime="20250923 07:09:23.259"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:09:23.260" endtime="20250923 07:09:23.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:09:23.271" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:09:23.271" endtime="20250923 07:09:23.271"/>
</kw>
<status status="PASS" starttime="20250923 07:09:20.204" endtime="20250923 07:09:23.271"/>
</kw>
<status status="PASS" starttime="20250923 07:09:20.204" endtime="20250923 07:09:23.271"/>
</kw>
<status status="PASS" starttime="20250923 07:09:20.203" endtime="20250923 07:09:23.271"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:09:23.271" endtime="20250923 07:09:23.278"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:09:23.282" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:09:23.278" endtime="20250923 07:09:23.282"/>
</kw>
<status status="PASS" starttime="20250923 07:09:23.271" endtime="20250923 07:09:23.282"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${token}</var>
<arg>return localStorage.getItem('token')</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:23.282" level="INFO">Executing JavaScript:
return localStorage.getItem('token')
Without any arguments.</msg>
<msg timestamp="20250923 07:09:23.285" level="INFO">${token} = test-jwt-token-1758591561219</msg>
<status status="PASS" starttime="20250923 07:09:23.282" endtime="20250923 07:09:23.285"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${token}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250923 07:09:23.285" level="INFO">Length is 28</msg>
<status status="PASS" starttime="20250923 07:09:23.285" endtime="20250923 07:09:23.285"/>
</kw>
<kw name="Split String" library="String">
<var>${token_parts}</var>
<arg>${token}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20250923 07:09:23.285" level="INFO">${token_parts} = ['test-jwt-token-1758591561219']</msg>
<status status="PASS" starttime="20250923 07:09:23.285" endtime="20250923 07:09:23.285"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${parts_count}</var>
<arg>${token_parts}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20250923 07:09:23.285" level="INFO">Length is 1</msg>
<msg timestamp="20250923 07:09:23.285" level="INFO">${parts_count} = 1</msg>
<status status="PASS" starttime="20250923 07:09:23.285" endtime="20250923 07:09:23.285"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${parts_count}</arg>
<arg>3</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250923 07:09:23.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250923 07:09:23.285" level="FAIL">1.0 != 3.0</msg>
<status status="FAIL" starttime="20250923 07:09:23.285" endtime="20250923 07:09:23.285"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:23.286" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:23.286" endtime="20250923 07:09:23.288"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:23.289" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:23.288" endtime="20250923 07:09:23.290"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:09:23.291" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:09:23.291" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:09:23.291" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:09:23.290" endtime="20250923 07:09:23.293"/>
</kw>
<status status="PASS" starttime="20250923 07:09:23.290" endtime="20250923 07:09:23.293"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:24.295" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:09:23.293" endtime="20250923 07:09:24.295"/>
</kw>
<status status="PASS" starttime="20250923 07:09:23.286" endtime="20250923 07:09:24.296"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:09:24.297" endtime="20250923 07:09:24.534"/>
</kw>
<status status="PASS" starttime="20250923 07:09:24.296" endtime="20250923 07:09:24.534"/>
</kw>
<status status="PASS" starttime="20250923 07:09:23.286" endtime="20250923 07:09:24.534"/>
</kw>
<doc>Test that JWT token is properly stored after login</doc>
<tag>authentication</tag>
<tag>jwt</tag>
<tag>storage</tag>
<tag>token</tag>
<status status="FAIL" starttime="20250923 07:09:14.213" endtime="20250923 07:09:24.534">1.0 != 3.0</status>
</test>
<test id="s1-t15" name="TC015 - Login With Copy-Paste Credentials" line="225">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:09:24.535" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:09:24.535" endtime="20250923 07:09:26.801"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:09:26.806" endtime="20250923 07:09:27.185"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:09:27.185" endtime="20250923 07:09:27.186"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:09:27.186" endtime="20250923 07:09:27.194"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:30.196" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:09:27.194" endtime="20250923 07:09:30.198"/>
</kw>
<status status="PASS" starttime="20250923 07:09:24.535" endtime="20250923 07:09:30.199"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:30.206" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:30.201" endtime="20250923 07:09:30.214"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:30.214" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:30.214" endtime="20250923 07:09:30.217"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:09:30.218" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:09:30.219" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:09:30.219" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:09:30.218" endtime="20250923 07:09:30.227"/>
</kw>
<status status="PASS" starttime="20250923 07:09:30.218" endtime="20250923 07:09:30.227"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:31.228" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:09:30.228" endtime="20250923 07:09:31.229"/>
</kw>
<status status="PASS" starttime="20250923 07:09:30.200" endtime="20250923 07:09:31.229"/>
</kw>
<status status="PASS" starttime="20250923 07:09:24.535" endtime="20250923 07:09:31.229"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:09:31.230" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:09:31.229" endtime="20250923 07:09:31.281"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:09:31.281" endtime="20250923 07:09:31.296"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.getElementById('email').value = '${ADMIN_USERNAME}';</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:31.296" level="INFO">Executing JavaScript:
document.getElementById('email').value = 'admin@demo.com';
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:31.296" endtime="20250923 07:09:31.299"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.getElementById('password').value = '${ADMIN_PASSWORD}';</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:31.300" level="INFO">Executing JavaScript:
document.getElementById('password').value = 'admin123456';
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:31.299" endtime="20250923 07:09:31.306"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_SUBMIT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:09:31.307" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-login')]'.</msg>
<msg timestamp="20250923 07:09:32.514" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-12.png"&gt;&lt;img src="selenium-screenshot-12.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:09:32.514" level="FAIL">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x00000001027c7418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x00000001027bf3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x00000001022e9050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x0000000102335f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x00000001023344d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x00000001023322ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001023316e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
7   chromedriver                        0x0000000102326220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
8   chromedriver                        0x0000000102325cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
9   chromedriver                        0x0000000102371604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
10  chromedriver                        0x00000001023240d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x000000010278bb08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x000000010278ed20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x000000010276ce58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x000000010278f5cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x000000010275e59c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x00000001027ae9f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x00000001027aeb70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x00000001027bf000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 07:09:31.306" endtime="20250923 07:09:32.515"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:09:32.515" endtime="20250923 07:09:32.515"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>admin@demo.com</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 07:09:32.515" endtime="20250923 07:09:32.515"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:32.516" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:32.515" endtime="20250923 07:09:32.520"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:32.520" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:32.520" endtime="20250923 07:09:32.523"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:09:32.523" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:09:32.524" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:09:32.524" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:09:32.523" endtime="20250923 07:09:32.527"/>
</kw>
<status status="PASS" starttime="20250923 07:09:32.523" endtime="20250923 07:09:32.527"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:33.528" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:09:32.527" endtime="20250923 07:09:33.528"/>
</kw>
<status status="PASS" starttime="20250923 07:09:32.515" endtime="20250923 07:09:33.528"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:09:33.530" endtime="20250923 07:09:33.683"/>
</kw>
<status status="PASS" starttime="20250923 07:09:33.529" endtime="20250923 07:09:33.684"/>
</kw>
<status status="PASS" starttime="20250923 07:09:32.515" endtime="20250923 07:09:33.684"/>
</kw>
<doc>Test login functionality with copy-paste credentials</doc>
<tag>authentication</tag>
<tag>usability</tag>
<status status="FAIL" starttime="20250923 07:09:24.534" endtime="20250923 07:09:33.684">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x00000001027c7418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x00000001027bf3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x00000001022e9050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x0000000102335f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x00000001023344d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x00000001023322ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001023316e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
    [ Message content over the limit has been removed. ]
... _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x000000010278bb08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x000000010278ed20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x000000010276ce58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x000000010278f5cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x000000010275e59c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x00000001027ae9f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x00000001027aeb70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x00000001027bf000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8</status>
</test>
<test id="s1-t16" name="TC016 - Logout Clears Session Storage" line="240">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:09:33.686" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:09:33.686" endtime="20250923 07:09:35.183"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:09:35.184" endtime="20250923 07:09:35.547"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:09:35.547" endtime="20250923 07:09:35.548"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:09:35.548" endtime="20250923 07:09:35.558"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:38.561" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:09:35.559" endtime="20250923 07:09:38.561"/>
</kw>
<status status="PASS" starttime="20250923 07:09:33.686" endtime="20250923 07:09:38.561"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:38.563" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:38.562" endtime="20250923 07:09:38.569"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:38.569" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:38.569" endtime="20250923 07:09:38.573"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:09:38.574" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:09:38.574" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:09:38.574" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:09:38.573" endtime="20250923 07:09:38.579"/>
</kw>
<status status="PASS" starttime="20250923 07:09:38.573" endtime="20250923 07:09:38.579"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:39.580" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:09:38.579" endtime="20250923 07:09:39.580"/>
</kw>
<status status="PASS" starttime="20250923 07:09:38.562" endtime="20250923 07:09:39.581"/>
</kw>
<status status="PASS" starttime="20250923 07:09:33.685" endtime="20250923 07:09:39.581"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:09:39.583" endtime="20250923 07:09:39.592"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:40.594" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:09:39.592" endtime="20250923 07:09:40.594"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:40.595" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:40.594" endtime="20250923 07:09:40.613"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:42.615" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:09:40.613" endtime="20250923 07:09:42.615"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:09:42.616" endtime="20250923 07:09:42.631"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:09:42.631" endtime="20250923 07:09:42.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:09:42.643" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:09:42.642" endtime="20250923 07:09:42.643"/>
</kw>
<status status="PASS" starttime="20250923 07:09:39.582" endtime="20250923 07:09:42.643"/>
</kw>
<status status="PASS" starttime="20250923 07:09:39.582" endtime="20250923 07:09:42.643"/>
</kw>
<status status="PASS" starttime="20250923 07:09:39.581" endtime="20250923 07:09:42.643"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:09:42.643" endtime="20250923 07:09:42.651"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:09:42.655" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:09:42.651" endtime="20250923 07:09:42.655"/>
</kw>
<status status="PASS" starttime="20250923 07:09:42.643" endtime="20250923 07:09:42.655"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${user_data_before}</var>
<arg>return localStorage.getItem('depflow_user')</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:42.655" level="INFO">Executing JavaScript:
return localStorage.getItem('depflow_user')
Without any arguments.</msg>
<msg timestamp="20250923 07:09:42.658" level="INFO">${user_data_before} = {"email":"admin@demo.com","name":"Admin User","role":"admin"}</msg>
<status status="PASS" starttime="20250923 07:09:42.655" endtime="20250923 07:09:42.658"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${token_before}</var>
<arg>return localStorage.getItem('token')</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:42.658" level="INFO">Executing JavaScript:
return localStorage.getItem('token')
Without any arguments.</msg>
<msg timestamp="20250923 07:09:42.661" level="INFO">${token_before} = test-jwt-token-1758591580600</msg>
<status status="PASS" starttime="20250923 07:09:42.658" endtime="20250923 07:09:42.661"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${user_data_before}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250923 07:09:42.661" level="INFO">Length is 61</msg>
<status status="PASS" starttime="20250923 07:09:42.661" endtime="20250923 07:09:42.661"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${token_before}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250923 07:09:42.661" level="INFO">Length is 28</msg>
<status status="PASS" starttime="20250923 07:09:42.661" endtime="20250923 07:09:42.661"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:09:42.662" endtime="20250923 07:09:42.672"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:09:42.672" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-logout')]'.</msg>
<status status="PASS" starttime="20250923 07:09:42.672" endtime="20250923 07:09:42.745"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<msg timestamp="20250923 07:09:52.860" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-13.png"&gt;&lt;img src="selenium-screenshot-13.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:09:52.860" level="FAIL">Element 'id:userPanel' still visible after 10 seconds.</msg>
<status status="FAIL" starttime="20250923 07:09:42.745" endtime="20250923 07:09:52.861"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20250923 07:09:52.861" endtime="20250923 07:09:52.861"/>
</kw>
<status status="FAIL" starttime="20250923 07:09:42.661" endtime="20250923 07:09:52.861"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${user_data_after}</var>
<arg>return localStorage.getItem('depflow_user')</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<status status="NOT RUN" starttime="20250923 07:09:52.861" endtime="20250923 07:09:52.861"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${token_after}</var>
<arg>return localStorage.getItem('token')</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<status status="NOT RUN" starttime="20250923 07:09:52.861" endtime="20250923 07:09:52.861"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${user_data_after}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250923 07:09:52.861" endtime="20250923 07:09:52.861"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${token_after}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250923 07:09:52.861" endtime="20250923 07:09:52.861"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:52.861" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:52.861" endtime="20250923 07:09:52.864"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:52.864" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:52.864" endtime="20250923 07:09:52.866"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:09:52.866" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:09:52.866" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:09:52.866" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:09:52.866" endtime="20250923 07:09:52.868"/>
</kw>
<status status="PASS" starttime="20250923 07:09:52.866" endtime="20250923 07:09:52.868"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:53.870" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:09:52.868" endtime="20250923 07:09:53.870"/>
</kw>
<status status="PASS" starttime="20250923 07:09:52.861" endtime="20250923 07:09:53.870"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:09:53.871" endtime="20250923 07:09:54.009"/>
</kw>
<status status="PASS" starttime="20250923 07:09:53.871" endtime="20250923 07:09:54.009"/>
</kw>
<status status="PASS" starttime="20250923 07:09:52.861" endtime="20250923 07:09:54.009"/>
</kw>
<doc>Test that logout properly clears session data</doc>
<tag>authentication</tag>
<tag>logout</tag>
<tag>security</tag>
<tag>storage</tag>
<status status="FAIL" starttime="20250923 07:09:33.685" endtime="20250923 07:09:54.009">Element 'id:userPanel' still visible after 10 seconds.</status>
</test>
<test id="s1-t17" name="TC017 - Backend Authentication API Test" line="262">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:09:54.010" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:09:54.010" endtime="20250923 07:09:55.551"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:09:55.556" endtime="20250923 07:09:55.916"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:09:55.916" endtime="20250923 07:09:55.917"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:09:55.917" endtime="20250923 07:09:55.925"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:58.927" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:09:55.925" endtime="20250923 07:09:58.929"/>
</kw>
<status status="PASS" starttime="20250923 07:09:54.010" endtime="20250923 07:09:58.931"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:58.935" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:58.934" endtime="20250923 07:09:58.942"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:09:58.943" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:09:58.942" endtime="20250923 07:09:58.946"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:09:58.947" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:09:58.948" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:09:58.948" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:09:58.947" endtime="20250923 07:09:58.952"/>
</kw>
<status status="PASS" starttime="20250923 07:09:58.946" endtime="20250923 07:09:58.952"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:09:59.953" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:09:58.952" endtime="20250923 07:09:59.953"/>
</kw>
<status status="PASS" starttime="20250923 07:09:58.933" endtime="20250923 07:09:59.954"/>
</kw>
<status status="PASS" starttime="20250923 07:09:54.009" endtime="20250923 07:09:59.954"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>auth_test</arg>
<arg>${BACKEND_URL}</arg>
<arg>timeout=30</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250923 07:09:59.955" level="INFO">Creating Session using : alias=auth_test, url=http://localhost:8000, headers={},                     cookies={}, auth=None, timeout=30, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20250923 07:09:59.954" endtime="20250923 07:09:59.955"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>email=${ADMIN_USERNAME}</arg>
<arg>password=${ADMIN_PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250923 07:09:59.956" level="INFO">${payload} = {'email': 'admin@demo.com', 'password': 'admin123456'}</msg>
<status status="PASS" starttime="20250923 07:09:59.956" endtime="20250923 07:09:59.956"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>auth_test</arg>
<arg>/api/v1/auth/login</arg>
<arg>json=${payload}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250923 07:10:00.097" level="INFO">POST Request : url=http://localhost:8000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '54', 'Content-Type': 'application/json'} 
 body=b'{"email": "admin@demo.com", "password": "admin123456"}' 
 </msg>
<msg timestamp="20250923 07:10:00.098" level="INFO">POST Response : url=http://localhost:8000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'Content-Security-Policy': "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests", 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Resource-Policy': 'same-origin', 'Origin-Agent-Cluster': '?1', 'Referrer-Policy': 'no-referrer', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Content-Type-Options': 'nosniff', 'X-DNS-Prefetch-Control': 'off', 'X-Download-Options': 'noopen', 'X-Frame-Options': 'SAMEORIGIN', 'X-Permitted-Cross-Domain-Policies': 'none', 'X-XSS-Protection': '0', 'Access-Control-Allow-Origin': 'http://localhost:3000', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'X-RateLimit-Limit': '1000', 'X-RateLimit-Remaining': '999', 'Date': 'Tue, 23 Sep 2025 01:40:00 GMT', 'X-RateLimit-Reset': '1758592501', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '770', 'ETag': 'W/"302-hOe0pPG81sIkAU0kAx+q9PvkZSU"', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"user":{"id":"1758557784428cla5an3d0","email":"admin@demo.com","firstName":"Admin","lastName":"User","role":"admin","teamIds":[],"isActive":true,"emailVerified":true,"createdAt":"2025-09-22T16:16:24.497Z","updatedAt":"2025-09-22T16:16:24.497Z"},"tokens":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxNzU4NTU3Nzg0NDI4Y2xhNWFuM2QwIiwiZW1haWwiOiJhZG1pbkBkZW1vLmNvbSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc1ODU5MTYwMCwiZXhwIjoxNzU4Njc4MDAwfQ.poL2QjrUO_VPJ4JHnzbRg1R9Se1oMM96acAh71oGY4k","refreshToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxNzU4NTU3Nzg0NDI4Y2xhNWFuM2QwIiwiZW1haWwiOiJhZG1pbkBkZW1vLmNvbSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc1ODU5MTYwMCwiZXhwIjoxNzU4Njc4MDAwfQ.poL2QjrUO_VPJ4JHnzbRg1R9Se1oMM96acAh71oGY4k"}}} 
 </msg>
<msg timestamp="20250923 07:10:00.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250923 07:09:59.956" endtime="20250923 07:10:00.098"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250923 07:10:00.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250923 07:10:00.098" endtime="20250923 07:10:00.098"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:10:00.099" level="INFO">${json_response} = {'success': True, 'data': {'user': {'id': '1758557784428cla5an3d0', 'email': 'admin@demo.com', 'firstName': 'Admin', 'lastName': 'User', 'role': 'admin', 'teamIds': [], 'isActive': True, 'emailVerifie...</msg>
<status status="PASS" starttime="20250923 07:10:00.098" endtime="20250923 07:10:00.099"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>token</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20250923 07:10:00.099" level="FAIL">Dictionary does not contain key 'token'.</msg>
<status status="FAIL" starttime="20250923 07:10:00.099" endtime="20250923 07:10:00.099"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>user</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" starttime="20250923 07:10:00.099" endtime="20250923 07:10:00.099"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${user}</var>
<arg>${json_response}</arg>
<arg>user</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" starttime="20250923 07:10:00.099" endtime="20250923 07:10:00.099"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${user}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" starttime="20250923 07:10:00.099" endtime="20250923 07:10:00.099"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${user}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" starttime="20250923 07:10:00.099" endtime="20250923 07:10:00.099"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${user}</arg>
<arg>role</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" starttime="20250923 07:10:00.100" endtime="20250923 07:10:00.100"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:00.100" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:00.100" endtime="20250923 07:10:00.102"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:00.102" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:00.102" endtime="20250923 07:10:00.104"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:10:00.104" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:10:00.104" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:10:00.104" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:10:00.104" endtime="20250923 07:10:00.107"/>
</kw>
<status status="PASS" starttime="20250923 07:10:00.104" endtime="20250923 07:10:00.107"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:10:01.109" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:10:00.107" endtime="20250923 07:10:01.109"/>
</kw>
<status status="PASS" starttime="20250923 07:10:00.100" endtime="20250923 07:10:01.109"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:10:01.110" endtime="20250923 07:10:01.286"/>
</kw>
<status status="PASS" starttime="20250923 07:10:01.110" endtime="20250923 07:10:01.286"/>
</kw>
<status status="PASS" starttime="20250923 07:10:00.100" endtime="20250923 07:10:01.286"/>
</kw>
<doc>Test backend authentication endpoint directly</doc>
<tag>api</tag>
<tag>authentication</tag>
<tag>backend</tag>
<status status="FAIL" starttime="20250923 07:09:54.009" endtime="20250923 07:10:01.286">Dictionary does not contain key 'token'.</status>
</test>
<test id="s1-t18" name="TC018 - Invalid Backend Authentication" line="284">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:10:01.287" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:10:01.287" endtime="20250923 07:10:02.964"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:10:02.964" endtime="20250923 07:10:03.326"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:10:03.326" endtime="20250923 07:10:03.328"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:10:03.328" endtime="20250923 07:10:03.334"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:10:06.336" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:10:03.334" endtime="20250923 07:10:06.336"/>
</kw>
<status status="PASS" starttime="20250923 07:10:01.287" endtime="20250923 07:10:06.336"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:06.337" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:06.337" endtime="20250923 07:10:06.343"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:06.343" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:06.343" endtime="20250923 07:10:06.347"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:10:06.348" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:10:06.348" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:10:06.348" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:10:06.347" endtime="20250923 07:10:06.352"/>
</kw>
<status status="PASS" starttime="20250923 07:10:06.347" endtime="20250923 07:10:06.353"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:10:07.355" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:10:06.353" endtime="20250923 07:10:07.355"/>
</kw>
<status status="PASS" starttime="20250923 07:10:06.336" endtime="20250923 07:10:07.356"/>
</kw>
<status status="PASS" starttime="20250923 07:10:01.287" endtime="20250923 07:10:07.356"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>auth_test</arg>
<arg>${BACKEND_URL}</arg>
<arg>timeout=30</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250923 07:10:07.356" level="INFO">Creating Session using : alias=auth_test, url=http://localhost:8000, headers={},                     cookies={}, auth=None, timeout=30, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20250923 07:10:07.356" endtime="20250923 07:10:07.357"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>email=invalid@demo.com</arg>
<arg>password=wrongpassword</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250923 07:10:07.357" level="INFO">${payload} = {'email': 'invalid@demo.com', 'password': 'wrongpassword'}</msg>
<status status="PASS" starttime="20250923 07:10:07.357" endtime="20250923 07:10:07.357"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>auth_test</arg>
<arg>/api/v1/auth/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250923 07:10:07.367" level="INFO">POST Request : url=http://localhost:8000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '58', 'Content-Type': 'application/json'} 
 body=b'{"email": "invalid@demo.com", "password": "wrongpassword"}' 
 </msg>
<msg timestamp="20250923 07:10:07.367" level="INFO">POST Response : url=http://localhost:8000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'Content-Security-Policy': "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests", 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Resource-Policy': 'same-origin', 'Origin-Agent-Cluster': '?1', 'Referrer-Policy': 'no-referrer', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Content-Type-Options': 'nosniff', 'X-DNS-Prefetch-Control': 'off', 'X-Download-Options': 'noopen', 'X-Frame-Options': 'SAMEORIGIN', 'X-Permitted-Cross-Domain-Policies': 'none', 'X-XSS-Protection': '0', 'Access-Control-Allow-Origin': 'http://localhost:3000', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'X-RateLimit-Limit': '1000', 'X-RateLimit-Remaining': '998', 'Date': 'Tue, 23 Sep 2025 01:40:07 GMT', 'X-RateLimit-Reset': '1758592501', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '94', 'ETag': 'W/"5e-9T9AtAxLyKTGnuY/QFcHTB/LfOo"', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"error":{"code":"INVALID_CREDENTIALS","message":"Invalid email or password"}} 
 </msg>
<msg timestamp="20250923 07:10:07.367" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20250923 07:10:07.358" endtime="20250923 07:10:07.367"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250923 07:10:07.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250923 07:10:07.367" endtime="20250923 07:10:07.369"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:10:07.370" level="INFO">${json_response} = {'success': False, 'error': {'code': 'INVALID_CREDENTIALS', 'message': 'Invalid email or password'}}</msg>
<status status="PASS" starttime="20250923 07:10:07.369" endtime="20250923 07:10:07.370"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json_response['success']}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250923 07:10:07.370" endtime="20250923 07:10:07.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json_response['message']}</arg>
<arg>Invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250923 07:10:07.372" level="FAIL">Resolving variable '${json_response['message']}' failed: KeyError: 'message'</msg>
<status status="FAIL" starttime="20250923 07:10:07.371" endtime="20250923 07:10:07.372"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:07.373" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:07.373" endtime="20250923 07:10:07.377"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:07.378" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:07.377" endtime="20250923 07:10:07.380"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:10:07.381" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:10:07.381" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:10:07.381" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:10:07.380" endtime="20250923 07:10:07.384"/>
</kw>
<status status="PASS" starttime="20250923 07:10:07.380" endtime="20250923 07:10:07.384"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:10:08.384" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:10:07.384" endtime="20250923 07:10:08.385"/>
</kw>
<status status="PASS" starttime="20250923 07:10:07.373" endtime="20250923 07:10:08.385"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:10:08.385" endtime="20250923 07:10:08.530"/>
</kw>
<status status="PASS" starttime="20250923 07:10:08.385" endtime="20250923 07:10:08.530"/>
</kw>
<status status="PASS" starttime="20250923 07:10:07.373" endtime="20250923 07:10:08.530"/>
</kw>
<doc>Test backend authentication with invalid credentials</doc>
<tag>api</tag>
<tag>authentication</tag>
<tag>backend</tag>
<tag>negative</tag>
<status status="FAIL" starttime="20250923 07:10:01.286" endtime="20250923 07:10:08.531">Resolving variable '${json_response['message']}' failed: KeyError: 'message'</status>
</test>
<test id="s1-t19" name="TC019 - Session Timeout Behavior" line="301">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:10:08.533" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:10:08.532" endtime="20250923 07:10:09.989"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:10:09.990" endtime="20250923 07:10:10.354"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:10:10.356" endtime="20250923 07:10:10.358"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:10:10.358" endtime="20250923 07:10:10.365"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:10:13.366" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:10:10.365" endtime="20250923 07:10:13.366"/>
</kw>
<status status="PASS" starttime="20250923 07:10:08.532" endtime="20250923 07:10:13.367"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:13.369" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:13.368" endtime="20250923 07:10:13.374"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:13.375" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:13.374" endtime="20250923 07:10:13.378"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:10:13.379" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:10:13.379" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:10:13.380" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:10:13.379" endtime="20250923 07:10:13.384"/>
</kw>
<status status="PASS" starttime="20250923 07:10:13.379" endtime="20250923 07:10:13.384"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:10:14.386" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:10:13.384" endtime="20250923 07:10:14.386"/>
</kw>
<status status="PASS" starttime="20250923 07:10:13.367" endtime="20250923 07:10:14.386"/>
</kw>
<status status="PASS" starttime="20250923 07:10:08.532" endtime="20250923 07:10:14.386"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:10:14.387" endtime="20250923 07:10:14.395"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:10:15.398" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:10:14.396" endtime="20250923 07:10:15.398"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:15.399" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:15.399" endtime="20250923 07:10:15.426"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:10:17.429" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:10:15.426" endtime="20250923 07:10:17.429"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:10:17.429" endtime="20250923 07:10:17.449"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:10:17.449" endtime="20250923 07:10:17.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:10:17.461" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:10:17.460" endtime="20250923 07:10:17.461"/>
</kw>
<status status="PASS" starttime="20250923 07:10:14.387" endtime="20250923 07:10:17.461"/>
</kw>
<status status="PASS" starttime="20250923 07:10:14.386" endtime="20250923 07:10:17.461"/>
</kw>
<status status="PASS" starttime="20250923 07:10:14.386" endtime="20250923 07:10:17.461"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:10:17.461" endtime="20250923 07:10:17.468"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:10:17.471" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:10:17.468" endtime="20250923 07:10:17.471"/>
</kw>
<status status="PASS" starttime="20250923 07:10:17.461" endtime="20250923 07:10:17.471"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>localStorage.removeItem('token');</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:17.472" level="INFO">Executing JavaScript:
localStorage.removeItem('token');
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:17.471" endtime="20250923 07:10:17.474"/>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20250923 07:10:17.474" endtime="20250923 07:10:17.494"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<arg>Page Should Contain Element</arg>
<arg>${LOGIN_BUTTON}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:10:17.506" level="INFO">Current page contains element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:10:17.495" endtime="20250923 07:10:17.506"/>
</kw>
<status status="PASS" starttime="20250923 07:10:17.495" endtime="20250923 07:10:17.507"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:17.507" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:17.507" endtime="20250923 07:10:17.510"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:17.510" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:17.510" endtime="20250923 07:10:17.512"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:10:17.512" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:10:17.512" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:10:17.512" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:10:17.512" endtime="20250923 07:10:17.515"/>
</kw>
<status status="PASS" starttime="20250923 07:10:17.512" endtime="20250923 07:10:17.515"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:10:18.515" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:10:17.515" endtime="20250923 07:10:18.515"/>
</kw>
<status status="PASS" starttime="20250923 07:10:17.507" endtime="20250923 07:10:18.515"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:10:18.517" endtime="20250923 07:10:18.700"/>
</kw>
<status status="PASS" starttime="20250923 07:10:18.516" endtime="20250923 07:10:18.700"/>
</kw>
<status status="PASS" starttime="20250923 07:10:17.507" endtime="20250923 07:10:18.700"/>
</kw>
<doc>Test application behavior when session expires</doc>
<tag>authentication</tag>
<tag>session</tag>
<tag>timeout</tag>
<status status="PASS" starttime="20250923 07:10:08.531" endtime="20250923 07:10:18.700"/>
</test>
<test id="s1-t20" name="TC020 - Cross-Tab Session Sync" line="318">
<kw name="Setup Each Authentication Test" type="SETUP">
<doc>Setup for each authentication test</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:10:18.703" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:10:18.702" endtime="20250923 07:10:20.268"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:10:20.269" endtime="20250923 07:10:20.634"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:10:20.634" endtime="20250923 07:10:20.635"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:10:20.635" endtime="20250923 07:10:20.642"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:10:23.645" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:10:20.642" endtime="20250923 07:10:23.646"/>
</kw>
<status status="PASS" starttime="20250923 07:10:18.702" endtime="20250923 07:10:23.646"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:23.649" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:23.648" endtime="20250923 07:10:23.656"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:23.657" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:23.656" endtime="20250923 07:10:23.660"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:10:23.661" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:10:23.661" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:10:23.661" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:10:23.660" endtime="20250923 07:10:23.666"/>
</kw>
<status status="PASS" starttime="20250923 07:10:23.660" endtime="20250923 07:10:23.666"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:10:24.667" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:10:23.666" endtime="20250923 07:10:24.667"/>
</kw>
<status status="PASS" starttime="20250923 07:10:23.647" endtime="20250923 07:10:24.668"/>
</kw>
<status status="PASS" starttime="20250923 07:10:18.702" endtime="20250923 07:10:24.668"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:10:24.669" endtime="20250923 07:10:24.677"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:10:25.678" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:10:24.677" endtime="20250923 07:10:25.678"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:25.679" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:25.678" endtime="20250923 07:10:25.694"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:10:27.695" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:10:25.695" endtime="20250923 07:10:27.695"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:10:27.695" endtime="20250923 07:10:27.715"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:10:27.715" endtime="20250923 07:10:27.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:10:27.726" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:10:27.726" endtime="20250923 07:10:27.726"/>
</kw>
<status status="PASS" starttime="20250923 07:10:24.668" endtime="20250923 07:10:27.726"/>
</kw>
<status status="PASS" starttime="20250923 07:10:24.668" endtime="20250923 07:10:27.726"/>
</kw>
<status status="PASS" starttime="20250923 07:10:24.668" endtime="20250923 07:10:27.726"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:10:27.727" endtime="20250923 07:10:27.734"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:10:27.737" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:10:27.734" endtime="20250923 07:10:27.737"/>
</kw>
<status status="PASS" starttime="20250923 07:10:27.727" endtime="20250923 07:10:27.737"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.open('${APP_URL}', '_blank');</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:27.737" level="INFO">Executing JavaScript:
window.open('http://localhost:3000', '_blank');
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:27.737" endtime="20250923 07:10:27.774"/>
</kw>
<kw name="Get Window Handles" library="SeleniumLibrary">
<var>@{windows}</var>
<doc>Returns all child window handles of the selected browser as a list.</doc>
<msg timestamp="20250923 07:10:27.786" level="INFO">@{windows} = [ E2106D356F896598CC87576E637794E2 | 2E5EC85280C1CF945D5E1A566BB5DE21 ]</msg>
<status status="PASS" starttime="20250923 07:10:27.774" endtime="20250923 07:10:27.786"/>
</kw>
<kw name="Switch Window" library="SeleniumLibrary">
<arg>${windows}[1]</arg>
<doc>Switches to browser window matching ``locator``.</doc>
<status status="PASS" starttime="20250923 07:10:27.786" endtime="20250923 07:10:27.861"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:10:27.861" endtime="20250923 07:10:27.915"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>admin@demo.com</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:10:27.921" level="INFO">Current page contains text 'admin@demo.com'.</msg>
<status status="PASS" starttime="20250923 07:10:27.916" endtime="20250923 07:10:27.922"/>
</kw>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20250923 07:10:27.922" endtime="20250923 07:10:27.948"/>
</kw>
<kw name="Switch Window" library="SeleniumLibrary">
<arg>${windows}[0]</arg>
<doc>Switches to browser window matching ``locator``.</doc>
<status status="PASS" starttime="20250923 07:10:27.948" endtime="20250923 07:10:27.956"/>
</kw>
<kw name="Cleanup Each Authentication Test" type="TEARDOWN">
<doc>Cleanup after each authentication test</doc>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:27.957" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:27.956" endtime="20250923 07:10:27.979"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:10:27.979" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:10:27.979" endtime="20250923 07:10:27.981"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:10:27.982" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 07:10:27.982" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 07:10:27.982" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:10:27.981" endtime="20250923 07:10:27.985"/>
</kw>
<status status="PASS" starttime="20250923 07:10:27.981" endtime="20250923 07:10:27.985"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:10:28.986" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:10:27.985" endtime="20250923 07:10:28.986"/>
</kw>
<status status="PASS" starttime="20250923 07:10:27.956" endtime="20250923 07:10:28.986"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:10:28.986" endtime="20250923 07:10:29.125"/>
</kw>
<status status="PASS" starttime="20250923 07:10:28.986" endtime="20250923 07:10:29.126"/>
</kw>
<status status="PASS" starttime="20250923 07:10:27.956" endtime="20250923 07:10:29.126"/>
</kw>
<doc>Test session synchronization across browser tabs</doc>
<tag>authentication</tag>
<tag>multi_tab</tag>
<tag>session</tag>
<status status="PASS" starttime="20250923 07:10:18.701" endtime="20250923 07:10:29.126"/>
</test>
<kw name="Teardown Test Environment" library="depflow_keywords" type="TEARDOWN">
<doc>Tears down test environment</doc>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250923 07:10:29.127" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<status status="PASS" starttime="20250923 07:10:29.127" endtime="20250923 07:10:29.127"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:10:29.127" endtime="20250923 07:10:29.127"/>
</kw>
<status status="PASS" starttime="20250923 07:10:29.127" endtime="20250923 07:10:29.127"/>
</kw>
<status status="PASS" starttime="20250923 07:10:29.126" endtime="20250923 07:10:29.127"/>
</kw>
<doc>Authentication and Login Test Suite for DepFlow Application</doc>
<status status="FAIL" starttime="20250923 07:06:52.564" endtime="20250923 07:10:29.127"/>
</suite>
<statistics>
<total>
<stat pass="9" fail="11" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">admin</stat>
<stat pass="0" fail="2" skip="0">api</stat>
<stat pass="6" fail="11" skip="0">authentication</stat>
<stat pass="0" fail="2" skip="0">backend</stat>
<stat pass="1" fail="0" skip="0">convenience</stat>
<stat pass="0" fail="1" skip="0">jwt</stat>
<stat pass="1" fail="0" skip="0">landing</stat>
<stat pass="0" fail="2" skip="0">logout</stat>
<stat pass="0" fail="1" skip="0">manual</stat>
<stat pass="2" fail="0" skip="0">modal</stat>
<stat pass="1" fail="0" skip="0">multi_tab</stat>
<stat pass="0" fail="4" skip="0">negative</stat>
<stat pass="1" fail="0" skip="0">persistence</stat>
<stat pass="1" fail="1" skip="0">role</stat>
<stat pass="0" fail="2" skip="0">security</stat>
<stat pass="3" fail="0" skip="0">session</stat>
<stat pass="3" fail="1" skip="0">smoke</stat>
<stat pass="0" fail="2" skip="0">storage</stat>
<stat pass="1" fail="0" skip="0">timeout</stat>
<stat pass="0" fail="1" skip="0">token</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
<stat pass="1" fail="1" skip="0">usability</stat>
<stat pass="0" fail="1" skip="0">user</stat>
<stat pass="0" fail="1" skip="0">validation</stat>
</tag>
<suite>
<stat pass="9" fail="11" skip="0" id="s1" name="01 Authentication Tests">01 Authentication Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
