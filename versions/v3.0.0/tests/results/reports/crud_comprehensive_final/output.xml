<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20250923 10:02:43.850" rpa="false" schemaversion="4">
<suite id="s1" name="02 Dependency Crud Tests" source="/Users/mmoola/Cursor/Dependency Management App/tests/test_suites/02_dependency_crud_tests.robot">
<kw name="Test Mode Suite Setup" library="depflow_keywords" type="SETUP">
<doc>Setup using test mode authentication</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 10:02:44.059" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 10:02:44.059" endtime="20250923 10:02:46.705"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 10:02:46.706" endtime="20250923 10:02:47.073"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 10:02:47.074" endtime="20250923 10:02:47.075"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:02:47.075" endtime="20250923 10:02:47.090"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:02:50.092" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 10:02:47.090" endtime="20250923 10:02:50.093"/>
</kw>
<status status="PASS" starttime="20250923 10:02:44.059" endtime="20250923 10:02:50.094"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:02:50.096" endtime="20250923 10:02:50.107"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:02:51.108" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:02:50.108" endtime="20250923 10:02:51.108"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:02:51.112" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:02:51.108" endtime="20250923 10:02:51.139"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:02:53.140" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:02:51.140" endtime="20250923 10:02:53.140"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:02:53.141" endtime="20250923 10:02:53.169"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:02:53.169" endtime="20250923 10:02:53.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:02:53.181" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:02:53.181" endtime="20250923 10:02:53.181"/>
</kw>
<status status="PASS" starttime="20250923 10:02:50.095" endtime="20250923 10:02:53.181"/>
</kw>
<status status="PASS" starttime="20250923 10:02:50.095" endtime="20250923 10:02:53.182"/>
</kw>
<status status="PASS" starttime="20250923 10:02:44.059" endtime="20250923 10:02:53.182"/>
</kw>
<test id="s1-t1" name="TC013 - Verify Dashboard Elements Present" line="27">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:02:53.183" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:02:53.183" endtime="20250923 10:02:53.188"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:02:54.190" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:02:53.188" endtime="20250923 10:02:54.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:02:54.190" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:02:54.190" endtime="20250923 10:02:54.190"/>
</kw>
<status status="PASS" starttime="20250923 10:02:53.183" endtime="20250923 10:02:54.190"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:02:54.191" endtime="20250923 10:02:54.198"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:02:55.199" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:02:54.198" endtime="20250923 10:02:55.200"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:02:55.200" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:02:55.200" endtime="20250923 10:02:55.212"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:02:57.254" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:02:55.213" endtime="20250923 10:02:57.259"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:02:57.261" endtime="20250923 10:02:57.344"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:02:57.344" endtime="20250923 10:02:57.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:02:57.378" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:02:57.377" endtime="20250923 10:02:57.378"/>
</kw>
<status status="PASS" starttime="20250923 10:02:54.190" endtime="20250923 10:02:57.378"/>
</kw>
<status status="PASS" starttime="20250923 10:02:54.190" endtime="20250923 10:02:57.378"/>
</kw>
<status status="PASS" starttime="20250923 10:02:53.182" endtime="20250923 10:02:57.378"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 10:02:57.386" level="INFO">Current page contains element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:02:57.378" endtime="20250923 10:02:57.386"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${TOTAL_COUNT}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 10:02:57.392" level="INFO">Current page contains element 'id:totalCount'.</msg>
<status status="PASS" starttime="20250923 10:02:57.386" endtime="20250923 10:02:57.392"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${SEARCH_INPUT}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 10:02:57.398" level="INFO">Current page contains element 'id:searchInput'.</msg>
<status status="PASS" starttime="20250923 10:02:57.392" endtime="20250923 10:02:57.399"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${DEPENDENCY_TABLE}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 10:02:57.404" level="INFO">Current page contains element 'css:.dependencies-table'.</msg>
<status status="PASS" starttime="20250923 10:02:57.399" endtime="20250923 10:02:57.404"/>
</kw>
<kw name="Verify DepFlow Dashboard Logo Present" library="depflow_keywords">
<doc>Verifies DepFlow logo is present on dashboard page</doc>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${visible_logos}</var>
<arg>xpath://div[contains(@class, 'depflow-logo') and not(contains(@style, 'display: none'))]</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20250923 10:02:57.410" level="INFO">${visible_logos} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="0da86df0c0a1c09eddf4f9456c7b0fa1", element="f.058C33958F43609801E8FEFAC9DAD6F3.d.7716647141F93BE95C7FAF0480780F70.e.38")&gt;, &lt;selenium.webdriv...</msg>
<status status="PASS" starttime="20250923 10:02:57.405" endtime="20250923 10:02:57.410"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${visible_logos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20250923 10:02:57.410" level="INFO">Length is 2</msg>
<msg timestamp="20250923 10:02:57.410" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20250923 10:02:57.410" endtime="20250923 10:02:57.410"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${count} &gt; 0</arg>
<arg>No visible DepFlow logo found on dashboard</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250923 10:02:57.410" endtime="20250923 10:02:57.410"/>
</kw>
<status status="PASS" starttime="20250923 10:02:57.404" endtime="20250923 10:02:57.410"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:02:57.411" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:02:57.411" endtime="20250923 10:02:57.416"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:02:58.419" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:02:57.416" endtime="20250923 10:02:58.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:02:58.420" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:02:58.419" endtime="20250923 10:02:58.420"/>
</kw>
<status status="PASS" starttime="20250923 10:02:57.411" endtime="20250923 10:02:58.420"/>
</kw>
<status status="PASS" starttime="20250923 10:02:57.411" endtime="20250923 10:02:58.420"/>
</kw>
<doc>Verify all dashboard elements are present after login</doc>
<tag>dashboard</tag>
<tag>smoke</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 10:02:53.182" endtime="20250923 10:02:58.420"/>
</test>
<test id="s1-t2" name="TC014 - Open Add Dependency Modal" line="37">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:02:58.423" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:02:58.422" endtime="20250923 10:02:58.429"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:02:59.432" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:02:58.430" endtime="20250923 10:02:59.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:02:59.432" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:02:59.432" endtime="20250923 10:02:59.432"/>
</kw>
<status status="PASS" starttime="20250923 10:02:58.422" endtime="20250923 10:02:59.432"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:02:59.433" endtime="20250923 10:02:59.441"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:00.443" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:02:59.441" endtime="20250923 10:03:00.443"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:03:00.444" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:03:00.444" endtime="20250923 10:03:00.455"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:02.457" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:03:00.455" endtime="20250923 10:03:02.457"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:02.459" endtime="20250923 10:03:02.480"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:02.481" endtime="20250923 10:03:02.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:03:02.491" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:03:02.490" endtime="20250923 10:03:02.491"/>
</kw>
<status status="PASS" starttime="20250923 10:02:59.433" endtime="20250923 10:03:02.491"/>
</kw>
<status status="PASS" starttime="20250923 10:02:59.433" endtime="20250923 10:03:02.491"/>
</kw>
<status status="PASS" starttime="20250923 10:02:58.422" endtime="20250923 10:03:02.491"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:03:02.492" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:03:02.491" endtime="20250923 10:03:02.495"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:03:02.495" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:03:02.495" endtime="20250923 10:03:02.498"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 10:03:02.499" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 10:03:02.499" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 10:03:02.499" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 10:03:02.498" endtime="20250923 10:03:02.507"/>
</kw>
<status status="PASS" starttime="20250923 10:03:02.498" endtime="20250923 10:03:02.507"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:03.508" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:03:02.507" endtime="20250923 10:03:03.508"/>
</kw>
<status status="PASS" starttime="20250923 10:03:02.491" endtime="20250923 10:03:03.508"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:04.511" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:03:03.508" endtime="20250923 10:03:04.511"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:03:04.511" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:03:04.511" endtime="20250923 10:03:04.557"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:04.557" endtime="20250923 10:03:04.573"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:03:04.590" level="INFO">Element 'id:addName' is displayed.</msg>
<status status="PASS" starttime="20250923 10:03:04.573" endtime="20250923 10:03:04.590"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:03:04.606" level="INFO">Element 'id:addDescription' is displayed.</msg>
<status status="PASS" starttime="20250923 10:03:04.591" endtime="20250923 10:03:04.606"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:03:04.626" level="INFO">Element 'id:addTeam' is displayed.</msg>
<status status="PASS" starttime="20250923 10:03:04.607" endtime="20250923 10:03:04.626"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:03:04.640" level="INFO">Element 'id:addStatus' is displayed.</msg>
<status status="PASS" starttime="20250923 10:03:04.627" endtime="20250923 10:03:04.640"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:03:04.675" level="INFO">Element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]' is displayed.</msg>
<status status="PASS" starttime="20250923 10:03:04.641" endtime="20250923 10:03:04.676"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${CANCEL_BUTTON}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:03:04.694" level="INFO">Element 'xpath://button[contains(@class, 'btn-cancel')]' is displayed.</msg>
<status status="PASS" starttime="20250923 10:03:04.676" endtime="20250923 10:03:04.694"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:03:04.695" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:03:04.695" endtime="20250923 10:03:04.703"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:05.705" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:03:04.703" endtime="20250923 10:03:05.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:03:05.706" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:03:05.706" endtime="20250923 10:03:05.706"/>
</kw>
<status status="PASS" starttime="20250923 10:03:04.695" endtime="20250923 10:03:05.706"/>
</kw>
<status status="PASS" starttime="20250923 10:03:04.694" endtime="20250923 10:03:05.706"/>
</kw>
<doc>Test opening the Add Dependency modal</doc>
<tag>modal</tag>
<tag>smoke</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 10:02:58.421" endtime="20250923 10:03:05.706"/>
</test>
<test id="s1-t3" name="TC015 - Add New Dependency Successfully" line="52">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:03:05.709" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:03:05.708" endtime="20250923 10:03:05.714"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:06.715" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:03:05.714" endtime="20250923 10:03:06.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:03:06.717" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:03:06.716" endtime="20250923 10:03:06.717"/>
</kw>
<status status="PASS" starttime="20250923 10:03:05.708" endtime="20250923 10:03:06.717"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:03:06.719" endtime="20250923 10:03:06.729"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:07.731" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:03:06.730" endtime="20250923 10:03:07.731"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:03:07.733" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:03:07.732" endtime="20250923 10:03:07.751"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:09.755" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:03:07.751" endtime="20250923 10:03:09.761"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:09.761" endtime="20250923 10:03:09.781"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:09.781" endtime="20250923 10:03:09.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:03:09.803" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:03:09.803" endtime="20250923 10:03:09.803"/>
</kw>
<status status="PASS" starttime="20250923 10:03:06.718" endtime="20250923 10:03:09.803"/>
</kw>
<status status="PASS" starttime="20250923 10:03:06.717" endtime="20250923 10:03:09.803"/>
</kw>
<status status="PASS" starttime="20250923 10:03:05.708" endtime="20250923 10:03:09.803"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>CreateTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:03:09.804" level="INFO">${timestamp} = 20250923_100309</msg>
<status status="PASS" starttime="20250923 10:03:09.804" endtime="20250923 10:03:09.804"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:03:09.804" level="INFO">${unique_name} = CreateTest_20250923_100309</msg>
<status status="PASS" starttime="20250923 10:03:09.804" endtime="20250923 10:03:09.805"/>
</kw>
<msg timestamp="20250923 10:03:09.805" level="INFO">${unique_name} = CreateTest_20250923_100309</msg>
<status status="PASS" starttime="20250923 10:03:09.803" endtime="20250923 10:03:09.805"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency created by Robot Framework automation</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:03:09.805" level="INFO">${description} = Test dependency created by Robot Framework automation</msg>
<status status="PASS" starttime="20250923 10:03:09.805" endtime="20250923 10:03:09.805"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${TEST_DEP_STATUS}</arg>
<arg>${TEST_DEP_PRIORITY}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:09.806" endtime="20250923 10:03:09.815"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:03:09.815" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:03:09.815" endtime="20250923 10:03:09.839"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:09.839" endtime="20250923 10:03:10.068"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:10.068" endtime="20250923 10:03:10.077"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:10.077" endtime="20250923 10:03:10.086"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:10.086" endtime="20250923 10:03:10.094"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:03:10.095" level="INFO">Typing text 'CreateTest_20250923_100309' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:03:10.094" endtime="20250923 10:03:10.203"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:03:10.204" level="INFO">Typing text 'Test dependency created by Robot Framework automation' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:03:10.204" endtime="20250923 10:03:10.244"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:03:10.244" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:03:10.244" endtime="20250923 10:03:10.286"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:03:10.286" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:03:10.286" endtime="20250923 10:03:10.304"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:03:10.304" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:03:10.304" endtime="20250923 10:03:10.323"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:03:10.323" endtime="20250923 10:03:10.325"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:10.325" endtime="20250923 10:03:10.332"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:03:10.332" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:03:10.332" endtime="20250923 10:03:10.364"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:03:10.364" endtime="20250923 10:03:10.372"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:12.379" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:03:10.372" endtime="20250923 10:03:12.380"/>
</kw>
<status status="PASS" starttime="20250923 10:03:09.805" endtime="20250923 10:03:12.381"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:03:12.383" endtime="20250923 10:03:12.404"/>
</kw>
<status status="PASS" starttime="20250923 10:03:12.382" endtime="20250923 10:03:12.404"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NOTIFICATION}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 10:03:22.971" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:03:22.971" level="FAIL">Element 'id:notification' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 10:03:12.404" endtime="20250923 10:03:23.002"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${actual_message}</var>
<arg>${NOTIFICATION}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 10:03:23.003" endtime="20250923 10:03:23.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${actual_message}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250923 10:03:23.004" endtime="20250923 10:03:23.004"/>
</kw>
<status status="FAIL" starttime="20250923 10:03:12.404" endtime="20250923 10:03:23.004"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${unique_name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 10:03:23.005" endtime="20250923 10:03:23.005"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${description}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 10:03:23.005" endtime="20250923 10:03:23.005"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${TEST_DEP_TEAM}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 10:03:23.005" endtime="20250923 10:03:23.005"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:03:23.006" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:03:23.006" endtime="20250923 10:03:23.014"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:24.016" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:03:23.015" endtime="20250923 10:03:24.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:03:24.017" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:03:24.016" endtime="20250923 10:03:24.017"/>
</kw>
<status status="PASS" starttime="20250923 10:03:23.005" endtime="20250923 10:03:24.017"/>
</kw>
<status status="PASS" starttime="20250923 10:03:23.005" endtime="20250923 10:03:24.017"/>
</kw>
<doc>Test successful creation of a new dependency</doc>
<tag>create</tag>
<tag>crud</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20250923 10:03:05.707" endtime="20250923 10:03:24.017">Element 'id:notification' not visible after 5 seconds.</status>
</test>
<test id="s1-t4" name="TC016 - Add Dependency With Minimal Required Fields" line="70">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:03:24.020" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:03:24.019" endtime="20250923 10:03:24.026"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:25.028" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:03:24.026" endtime="20250923 10:03:25.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:03:25.029" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:03:25.028" endtime="20250923 10:03:25.029"/>
</kw>
<status status="PASS" starttime="20250923 10:03:24.019" endtime="20250923 10:03:25.029"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:03:25.030" endtime="20250923 10:03:25.042"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:26.044" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:03:25.042" endtime="20250923 10:03:26.044"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:03:26.045" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:03:26.045" endtime="20250923 10:03:26.063"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:28.066" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:03:26.064" endtime="20250923 10:03:28.066"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:28.067" endtime="20250923 10:03:28.084"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:28.084" endtime="20250923 10:03:28.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:03:28.095" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:03:28.095" endtime="20250923 10:03:28.095"/>
</kw>
<status status="PASS" starttime="20250923 10:03:25.029" endtime="20250923 10:03:28.095"/>
</kw>
<status status="PASS" starttime="20250923 10:03:25.029" endtime="20250923 10:03:28.095"/>
</kw>
<status status="PASS" starttime="20250923 10:03:24.019" endtime="20250923 10:03:28.095"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>MinimalTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:03:28.096" level="INFO">${timestamp} = 20250923_100328</msg>
<status status="PASS" starttime="20250923 10:03:28.095" endtime="20250923 10:03:28.096"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:03:28.097" level="INFO">${unique_name} = MinimalTest_20250923_100328</msg>
<status status="PASS" starttime="20250923 10:03:28.097" endtime="20250923 10:03:28.097"/>
</kw>
<msg timestamp="20250923 10:03:28.097" level="INFO">${unique_name} = MinimalTest_20250923_100328</msg>
<status status="PASS" starttime="20250923 10:03:28.095" endtime="20250923 10:03:28.097"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Minimal test dependency with required fields only</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:03:28.097" level="INFO">${description} = Minimal test dependency with required fields only</msg>
<status status="PASS" starttime="20250923 10:03:28.097" endtime="20250923 10:03:28.097"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:28.098" endtime="20250923 10:03:28.107"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:03:28.107" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:03:28.107" endtime="20250923 10:03:28.135"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:28.135" endtime="20250923 10:03:28.361"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:28.361" endtime="20250923 10:03:28.370"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:28.370" endtime="20250923 10:03:28.378"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:28.378" endtime="20250923 10:03:28.386"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:03:28.386" level="INFO">Typing text 'MinimalTest_20250923_100328' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:03:28.386" endtime="20250923 10:03:28.431"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:03:28.431" level="INFO">Typing text 'Minimal test dependency with required fields only' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:03:28.431" endtime="20250923 10:03:28.639"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:03:28.639" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:03:28.639" endtime="20250923 10:03:28.676"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:03:28.677" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:03:28.677" endtime="20250923 10:03:28.696"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:03:28.697" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:03:28.696" endtime="20250923 10:03:28.715"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:03:28.715" endtime="20250923 10:03:28.716"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:28.716" endtime="20250923 10:03:28.726"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:03:28.726" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:03:28.726" endtime="20250923 10:03:28.763"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:03:28.763" endtime="20250923 10:03:28.773"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:30.774" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:03:28.773" endtime="20250923 10:03:30.774"/>
</kw>
<status status="PASS" starttime="20250923 10:03:28.097" endtime="20250923 10:03:30.775"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:03:30.776" endtime="20250923 10:03:30.796"/>
</kw>
<status status="PASS" starttime="20250923 10:03:30.775" endtime="20250923 10:03:30.796"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NOTIFICATION}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 10:03:41.494" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:03:41.495" level="FAIL">Element 'id:notification' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 10:03:30.796" endtime="20250923 10:03:41.496"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${actual_message}</var>
<arg>${NOTIFICATION}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 10:03:41.497" endtime="20250923 10:03:41.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${actual_message}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250923 10:03:41.497" endtime="20250923 10:03:41.497"/>
</kw>
<status status="FAIL" starttime="20250923 10:03:30.796" endtime="20250923 10:03:41.497"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:03:41.503" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:03:41.499" endtime="20250923 10:03:41.581"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:42.583" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:03:41.581" endtime="20250923 10:03:42.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:03:42.589" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:03:42.587" endtime="20250923 10:03:42.589"/>
</kw>
<status status="PASS" starttime="20250923 10:03:41.498" endtime="20250923 10:03:42.589"/>
</kw>
<status status="PASS" starttime="20250923 10:03:41.498" endtime="20250923 10:03:42.590"/>
</kw>
<doc>Test creating dependency with only required fields</doc>
<tag>create</tag>
<tag>crud</tag>
<tag>minimal</tag>
<status status="FAIL" starttime="20250923 10:03:24.018" endtime="20250923 10:03:42.590">Element 'id:notification' not visible after 5 seconds.</status>
</test>
<test id="s1-t5" name="TC017 - Validate Required Field - Name" line="82">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:03:42.594" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:03:42.593" endtime="20250923 10:03:42.613"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:43.619" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:03:42.614" endtime="20250923 10:03:43.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:03:43.621" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:03:43.620" endtime="20250923 10:03:43.621"/>
</kw>
<status status="PASS" starttime="20250923 10:03:42.592" endtime="20250923 10:03:43.621"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:03:43.623" endtime="20250923 10:03:43.656"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:44.657" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:03:43.656" endtime="20250923 10:03:44.657"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:03:44.659" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:03:44.658" endtime="20250923 10:03:44.719"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:46.720" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:03:44.719" endtime="20250923 10:03:46.720"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:46.720" endtime="20250923 10:03:46.744"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:46.744" endtime="20250923 10:03:46.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:03:46.758" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:03:46.757" endtime="20250923 10:03:46.758"/>
</kw>
<status status="PASS" starttime="20250923 10:03:43.622" endtime="20250923 10:03:46.758"/>
</kw>
<status status="PASS" starttime="20250923 10:03:43.621" endtime="20250923 10:03:46.758"/>
</kw>
<status status="PASS" starttime="20250923 10:03:42.592" endtime="20250923 10:03:46.758"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:03:46.759" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:03:46.758" endtime="20250923 10:03:46.806"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:03:46.807" endtime="20250923 10:03:46.821"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>Test description without name</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:03:46.823" level="INFO">Typing text 'Test description without name' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:03:46.822" endtime="20250923 10:03:46.877"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:03:46.877" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:03:46.877" endtime="20250923 10:03:46.912"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:03:46.913" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-submit')]'.</msg>
<msg timestamp="20250923 10:03:57.271" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:03:57.283" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000102e33418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000102e2b3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000102954ec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x000000010299d42c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000102992220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000102991cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x00000001029dd604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x00000001029900d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000102df7b08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000102dfad20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000102dd8e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000102dfb5cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000102dca59c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000102e1a9f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000102e1ab70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000102e2b000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 10:03:46.912" endtime="20250923 10:03:57.358"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 10:03:57.358" endtime="20250923 10:03:57.358"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:03:57.362" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:03:57.360" endtime="20250923 10:03:57.372"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:58.373" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:03:57.372" endtime="20250923 10:03:58.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:03:58.374" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:03:58.374" endtime="20250923 10:03:58.374"/>
</kw>
<status status="PASS" starttime="20250923 10:03:57.359" endtime="20250923 10:03:58.375"/>
</kw>
<status status="PASS" starttime="20250923 10:03:57.359" endtime="20250923 10:03:58.375"/>
</kw>
<doc>Test that name field is required for dependency creation</doc>
<tag>crud</tag>
<tag>negative</tag>
<tag>validation</tag>
<status status="FAIL" starttime="20250923 10:03:42.591" endtime="20250923 10:03:58.375">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000102e33418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000102e2b3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000102954ec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x000000010299d42c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000102992220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000102991cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x00000001029dd604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x00000001029900d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000102df7b08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000102dfad20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000102dd8e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000102dfb5cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000102dca59c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000102e1a9f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000102e1ab70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000102e2b000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</status>
</test>
<test id="s1-t6" name="TC018 - Validate Required Field - Description" line="98">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:03:58.377" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:03:58.376" endtime="20250923 10:03:58.382"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:03:59.383" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:03:58.382" endtime="20250923 10:03:59.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:03:59.384" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:03:59.384" endtime="20250923 10:03:59.384"/>
</kw>
<status status="PASS" starttime="20250923 10:03:58.376" endtime="20250923 10:03:59.384"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:03:59.385" endtime="20250923 10:03:59.401"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:00.403" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:03:59.401" endtime="20250923 10:04:00.403"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:04:00.404" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:04:00.403" endtime="20250923 10:04:00.427"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:02.435" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:04:00.428" endtime="20250923 10:04:02.436"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:02.437" endtime="20250923 10:04:02.461"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:02.461" endtime="20250923 10:04:02.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:04:02.476" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:04:02.476" endtime="20250923 10:04:02.477"/>
</kw>
<status status="PASS" starttime="20250923 10:03:59.385" endtime="20250923 10:04:02.477"/>
</kw>
<status status="PASS" starttime="20250923 10:03:59.384" endtime="20250923 10:04:02.477"/>
</kw>
<status status="PASS" starttime="20250923 10:03:58.376" endtime="20250923 10:04:02.477"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:02.480" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:04:02.478" endtime="20250923 10:04:02.542"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:02.542" endtime="20250923 10:04:02.555"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>Test Name</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:02.556" level="INFO">Typing text 'Test Name' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:04:02.555" endtime="20250923 10:04:02.642"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>Short</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:02.643" level="INFO">Typing text 'Short' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:04:02.643" endtime="20250923 10:04:02.681"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:04:02.682" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:04:02.681" endtime="20250923 10:04:02.732"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:02.732" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-submit')]'.</msg>
<msg timestamp="20250923 10:04:12.932" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-4.png"&gt;&lt;img src="selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:04:12.933" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000102e33418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000102e2b3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000102954ec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x000000010299d42c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000102992220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000102991cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x00000001029dd604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x00000001029900d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000102df7b08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000102dfad20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000102dd8e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000102dfb5cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000102dca59c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000102e1a9f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000102e1ab70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000102e2b000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 10:04:02.732" endtime="20250923 10:04:12.933"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 10:04:12.934" endtime="20250923 10:04:12.934"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:04:12.936" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:04:12.935" endtime="20250923 10:04:12.940"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:13.943" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:04:12.941" endtime="20250923 10:04:13.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:04:13.944" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:04:13.943" endtime="20250923 10:04:13.945"/>
</kw>
<status status="PASS" starttime="20250923 10:04:12.934" endtime="20250923 10:04:13.945"/>
</kw>
<status status="PASS" starttime="20250923 10:04:12.934" endtime="20250923 10:04:13.945"/>
</kw>
<doc>Test that description field validation works</doc>
<tag>crud</tag>
<tag>negative</tag>
<tag>validation</tag>
<status status="FAIL" starttime="20250923 10:03:58.375" endtime="20250923 10:04:13.945">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000102e33418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000102e2b3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000102954ec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x000000010299d42c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000102992220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000102991cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x00000001029dd604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x00000001029900d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000102df7b08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000102dfad20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000102dd8e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000102dfb5cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000102dca59c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000102e1a9f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000102e1ab70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000102e2b000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</status>
</test>
<test id="s1-t7" name="TC019 - Edit Existing Dependency" line="115">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:04:13.946" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:04:13.946" endtime="20250923 10:04:13.949"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:14.951" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:04:13.949" endtime="20250923 10:04:14.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:04:14.951" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:04:14.951" endtime="20250923 10:04:14.952"/>
</kw>
<status status="PASS" starttime="20250923 10:04:13.946" endtime="20250923 10:04:14.952"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:04:14.956" endtime="20250923 10:04:14.962"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:15.964" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:04:14.962" endtime="20250923 10:04:15.964"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:04:15.965" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:04:15.964" endtime="20250923 10:04:15.981"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:17.982" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:04:15.981" endtime="20250923 10:04:17.982"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:17.983" endtime="20250923 10:04:18.012"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:18.012" endtime="20250923 10:04:18.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:04:18.020" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:04:18.020" endtime="20250923 10:04:18.020"/>
</kw>
<status status="PASS" starttime="20250923 10:04:14.956" endtime="20250923 10:04:18.020"/>
</kw>
<status status="PASS" starttime="20250923 10:04:14.952" endtime="20250923 10:04:18.020"/>
</kw>
<status status="PASS" starttime="20250923 10:04:13.945" endtime="20250923 10:04:18.020"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${original_name}</var>
<arg>EditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:04:18.021" level="INFO">${timestamp} = 20250923_100418</msg>
<status status="PASS" starttime="20250923 10:04:18.020" endtime="20250923 10:04:18.021"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:04:18.021" level="INFO">${unique_name} = EditTest_20250923_100418</msg>
<status status="PASS" starttime="20250923 10:04:18.021" endtime="20250923 10:04:18.021"/>
</kw>
<msg timestamp="20250923 10:04:18.021" level="INFO">${original_name} = EditTest_20250923_100418</msg>
<status status="PASS" starttime="20250923 10:04:18.020" endtime="20250923 10:04:18.021"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${original_desc}</var>
<arg>Original description for edit test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:04:18.021" level="INFO">${original_desc} = Original description for edit test</msg>
<status status="PASS" starttime="20250923 10:04:18.021" endtime="20250923 10:04:18.021"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${original_name}</arg>
<arg>${original_desc}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:18.022" endtime="20250923 10:04:18.029"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:18.030" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:04:18.030" endtime="20250923 10:04:18.060"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:18.060" endtime="20250923 10:04:18.074"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:18.074" endtime="20250923 10:04:18.089"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:18.090" endtime="20250923 10:04:18.098"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:18.098" endtime="20250923 10:04:18.105"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:18.106" level="INFO">Typing text 'EditTest_20250923_100418' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:04:18.106" endtime="20250923 10:04:18.147"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:18.147" level="INFO">Typing text 'Original description for edit test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:04:18.147" endtime="20250923 10:04:18.182"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:04:18.182" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:04:18.182" endtime="20250923 10:04:18.208"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:04:18.209" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:04:18.208" endtime="20250923 10:04:18.230"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:04:18.230" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:04:18.230" endtime="20250923 10:04:18.247"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:04:18.247" endtime="20250923 10:04:18.248"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:18.248" endtime="20250923 10:04:18.256"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:18.257" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:04:18.256" endtime="20250923 10:04:18.285"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:04:18.285" endtime="20250923 10:04:18.292"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:20.294" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:04:18.293" endtime="20250923 10:04:20.295"/>
</kw>
<status status="PASS" starttime="20250923 10:04:18.021" endtime="20250923 10:04:20.295"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_name}</var>
<arg>${original_name}_EDITED</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:04:20.296" level="INFO">${new_name} = EditTest_20250923_100418_EDITED</msg>
<status status="PASS" starttime="20250923 10:04:20.295" endtime="20250923 10:04:20.296"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_desc}</var>
<arg>Updated description after edit</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:04:20.297" level="INFO">${new_desc} = Updated description after edit</msg>
<status status="PASS" starttime="20250923 10:04:20.296" endtime="20250923 10:04:20.297"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_team}</var>
<arg>Data Collection</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:04:20.297" level="INFO">${new_team} = Data Collection</msg>
<status status="PASS" starttime="20250923 10:04:20.297" endtime="20250923 10:04:20.297"/>
</kw>
<kw name="Edit Dependency" library="depflow_keywords">
<arg>${original_name}</arg>
<arg>${new_name}</arg>
<arg>${new_desc}</arg>
<arg>${new_team}</arg>
<doc>Edits an existing dependency with updated div-based selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:04:20.300" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'EditTest_20250923_100418')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:04:20.300" endtime="20250923 10:04:20.300"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:20.301" endtime="20250923 10:04:20.322"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${edit_button}</var>
<arg>${dependency_row}//button[@class='btn-edit']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:04:20.323" level="INFO">${edit_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'EditTest_20250923_100418')]/ancestor::div[@class='dependency-row']//button[@class='btn-edit']</msg>
<status status="PASS" starttime="20250923 10:04:20.323" endtime="20250923 10:04:20.323"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:20.324" endtime="20250923 10:04:20.336"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:20.336" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'EditTest_20250923_100418')]/ancestor::div[@class='dependency-row']//button[@class='btn-edit']'.</msg>
<status status="PASS" starttime="20250923 10:04:20.336" endtime="20250923 10:04:20.389"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:20.390" endtime="20250923 10:04:20.404"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_name}' != '${EMPTY}'</arg>
<arg>Clear Element Text And Input</arg>
<arg>${EDIT_NAME_FIELD}</arg>
<arg>${new_name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Clear Element Text And Input" library="depflow_keywords">
<arg>${EDIT_NAME_FIELD}</arg>
<arg>${new_name}</arg>
<doc>Clears element text and inputs new text</doc>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${element}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 10:04:20.406" endtime="20250923 10:04:20.429"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:20.429" level="INFO">Typing text 'EditTest_20250923_100418_EDITED' into text field 'id:editName'.</msg>
<status status="PASS" starttime="20250923 10:04:20.429" endtime="20250923 10:04:20.490"/>
</kw>
<status status="PASS" starttime="20250923 10:04:20.405" endtime="20250923 10:04:20.491"/>
</kw>
<status status="PASS" starttime="20250923 10:04:20.404" endtime="20250923 10:04:20.491"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_description}' != '${EMPTY}'</arg>
<arg>Clear Element Text And Input</arg>
<arg>${EDIT_DESCRIPTION_FIELD}</arg>
<arg>${new_description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Clear Element Text And Input" library="depflow_keywords">
<arg>${EDIT_DESCRIPTION_FIELD}</arg>
<arg>${new_description}</arg>
<doc>Clears element text and inputs new text</doc>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${element}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 10:04:20.492" endtime="20250923 10:04:20.517"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:20.517" level="INFO">Typing text 'Updated description after edit' into text field 'id:editDescription'.</msg>
<status status="PASS" starttime="20250923 10:04:20.517" endtime="20250923 10:04:20.566"/>
</kw>
<status status="PASS" starttime="20250923 10:04:20.492" endtime="20250923 10:04:20.566"/>
</kw>
<status status="PASS" starttime="20250923 10:04:20.491" endtime="20250923 10:04:20.566"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_team}' != '${EMPTY}'</arg>
<arg>Select From List By Label</arg>
<arg>${EDIT_TEAM_SELECT}</arg>
<arg>${new_team}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${EDIT_TEAM_SELECT}</arg>
<arg>${new_team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:04:20.568" level="INFO">Selecting options from selection list 'id:editTeam' by label Data Collection.</msg>
<status status="PASS" starttime="20250923 10:04:20.567" endtime="20250923 10:04:20.609"/>
</kw>
<status status="PASS" starttime="20250923 10:04:20.566" endtime="20250923 10:04:20.609"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_status}' != '${EMPTY}'</arg>
<arg>Select From List By Value</arg>
<arg>${EDIT_STATUS_SELECT}</arg>
<arg>${new_status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:04:20.609" endtime="20250923 10:04:20.613"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_priority}' != '${EMPTY}'</arg>
<arg>Select From List By Value</arg>
<arg>${EDIT_PRIORITY_SELECT}</arg>
<arg>${new_priority}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:04:20.613" endtime="20250923 10:04:20.616"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:20.616" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-submit')]'.</msg>
<msg timestamp="20250923 10:04:31.080" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-5.png"&gt;&lt;img src="selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:04:31.082" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000102e33418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000102e2b3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000102954ec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x000000010299d42c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000102992220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000102991cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x00000001029dd604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x00000001029900d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000102df7b08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000102dfad20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000102dd8e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000102dfb5cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000102dca59c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000102e1a9f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000102e1ab70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000102e2b000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 10:04:20.616" endtime="20250923 10:04:31.083"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 10:04:31.083" endtime="20250923 10:04:31.083"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 10:04:31.083" endtime="20250923 10:04:31.083"/>
</kw>
<status status="FAIL" starttime="20250923 10:04:20.297" endtime="20250923 10:04:31.084"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${new_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 10:04:31.084" endtime="20250923 10:04:31.084"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${original_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 10:04:31.084" endtime="20250923 10:04:31.084"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<status status="NOT RUN" starttime="20250923 10:04:31.084" endtime="20250923 10:04:31.084"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:04:31.087" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:04:31.085" endtime="20250923 10:04:31.121"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:32.124" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:04:31.121" endtime="20250923 10:04:32.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:04:32.125" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:04:32.124" endtime="20250923 10:04:32.125"/>
</kw>
<status status="PASS" starttime="20250923 10:04:31.084" endtime="20250923 10:04:32.125"/>
</kw>
<status status="PASS" starttime="20250923 10:04:31.084" endtime="20250923 10:04:32.125"/>
</kw>
<doc>Test editing an existing dependency</doc>
<tag>crud</tag>
<tag>edit</tag>
<tag>update</tag>
<status status="FAIL" starttime="20250923 10:04:13.945" endtime="20250923 10:04:32.125">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000102e33418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000102e2b3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000102954ec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x000000010299d42c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000102992220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000102991cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x00000001029dd604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x00000001029900d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000102df7b08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000102dfad20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000102dd8e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000102dfb5cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000102dca59c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000102e1a9f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000102e1ab70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000102e2b000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</status>
</test>
<test id="s1-t8" name="TC020 - Delete Dependency Successfully" line="136">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:04:32.129" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:04:32.128" endtime="20250923 10:04:32.139"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:33.141" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:04:32.140" endtime="20250923 10:04:33.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:04:33.143" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:04:33.142" endtime="20250923 10:04:33.143"/>
</kw>
<status status="PASS" starttime="20250923 10:04:32.128" endtime="20250923 10:04:33.143"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:04:33.144" endtime="20250923 10:04:33.167"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:34.168" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:04:33.167" endtime="20250923 10:04:34.168"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:04:34.170" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:04:34.168" endtime="20250923 10:04:34.193"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:36.194" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:04:34.193" endtime="20250923 10:04:36.194"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:36.194" endtime="20250923 10:04:36.211"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:36.211" endtime="20250923 10:04:36.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:04:36.221" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:04:36.221" endtime="20250923 10:04:36.221"/>
</kw>
<status status="PASS" starttime="20250923 10:04:33.143" endtime="20250923 10:04:36.221"/>
</kw>
<status status="PASS" starttime="20250923 10:04:33.143" endtime="20250923 10:04:36.221"/>
</kw>
<status status="PASS" starttime="20250923 10:04:32.127" endtime="20250923 10:04:36.221"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>DeleteTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:04:36.222" level="INFO">${timestamp} = 20250923_100436</msg>
<status status="PASS" starttime="20250923 10:04:36.221" endtime="20250923 10:04:36.222"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:04:36.222" level="INFO">${unique_name} = DeleteTest_20250923_100436</msg>
<status status="PASS" starttime="20250923 10:04:36.222" endtime="20250923 10:04:36.222"/>
</kw>
<msg timestamp="20250923 10:04:36.222" level="INFO">${dep_name} = DeleteTest_20250923_100436</msg>
<status status="PASS" starttime="20250923 10:04:36.221" endtime="20250923 10:04:36.222"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency created for deletion test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:04:36.222" level="INFO">${description} = Dependency created for deletion test</msg>
<status status="PASS" starttime="20250923 10:04:36.222" endtime="20250923 10:04:36.222"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:36.224" endtime="20250923 10:04:36.232"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:36.233" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:04:36.232" endtime="20250923 10:04:36.269"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:36.269" endtime="20250923 10:04:36.283"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:36.284" endtime="20250923 10:04:36.292"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:36.293" endtime="20250923 10:04:36.303"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:36.303" endtime="20250923 10:04:36.312"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:36.312" level="INFO">Typing text 'DeleteTest_20250923_100436' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:04:36.312" endtime="20250923 10:04:36.363"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:36.363" level="INFO">Typing text 'Dependency created for deletion test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:04:36.363" endtime="20250923 10:04:36.401"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:04:36.401" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:04:36.401" endtime="20250923 10:04:36.432"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:04:36.432" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:04:36.432" endtime="20250923 10:04:36.449"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:04:36.449" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:04:36.449" endtime="20250923 10:04:36.465"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:04:36.465" endtime="20250923 10:04:36.466"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:36.466" endtime="20250923 10:04:36.474"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:36.474" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:04:36.474" endtime="20250923 10:04:36.507"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:04:36.508" endtime="20250923 10:04:36.515"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:38.515" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:04:36.515" endtime="20250923 10:04:38.516"/>
</kw>
<status status="PASS" starttime="20250923 10:04:36.222" endtime="20250923 10:04:38.516"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:04:38.516" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'DeleteTest_20250923_100436')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:04:38.516" endtime="20250923 10:04:38.516"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:38.516" endtime="20250923 10:04:38.528"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:04:38.528" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'DeleteTest_20250923_100436')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:04:38.528" endtime="20250923 10:04:38.528"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:38.528" endtime="20250923 10:04:38.538"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:38.539" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'DeleteTest_20250923_100436')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:04:38.538" endtime="20250923 10:04:38.712"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:39.717" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:04:38.713" endtime="20250923 10:04:39.717"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:04:39.717" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:04:39.717" endtime="20250923 10:04:39.725"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:41.726" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:04:39.725" endtime="20250923 10:04:41.727"/>
</kw>
<status status="PASS" starttime="20250923 10:04:38.516" endtime="20250923 10:04:41.727"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<msg timestamp="20250923 10:04:51.751" level="INFO">Current page does not contain element 'xpath://div[@class='dependency-name' and contains(text(), 'DeleteTest_20250923_100436')]'.</msg>
<status status="PASS" starttime="20250923 10:04:41.728" endtime="20250923 10:04:51.751"/>
</kw>
<status status="PASS" starttime="20250923 10:04:41.727" endtime="20250923 10:04:51.752"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:04:51.754" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:04:51.753" endtime="20250923 10:04:51.759"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:52.760" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:04:51.759" endtime="20250923 10:04:52.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:04:52.761" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:04:52.761" endtime="20250923 10:04:52.761"/>
</kw>
<status status="PASS" starttime="20250923 10:04:51.752" endtime="20250923 10:04:52.761"/>
</kw>
<status status="PASS" starttime="20250923 10:04:51.752" endtime="20250923 10:04:52.761"/>
</kw>
<doc>Test successful deletion of a dependency with confirmation</doc>
<tag>confirmation</tag>
<tag>crud</tag>
<tag>delete</tag>
<status status="PASS" starttime="20250923 10:04:32.127" endtime="20250923 10:04:52.761"/>
</test>
<test id="s1-t9" name="TC021 - Delete Dependency Cancel Confirmation" line="151">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:04:52.764" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:04:52.764" endtime="20250923 10:04:52.769"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:53.770" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:04:52.769" endtime="20250923 10:04:53.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:04:53.772" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:04:53.771" endtime="20250923 10:04:53.772"/>
</kw>
<status status="PASS" starttime="20250923 10:04:52.763" endtime="20250923 10:04:53.772"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:04:53.773" endtime="20250923 10:04:53.782"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:54.783" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:04:53.782" endtime="20250923 10:04:54.783"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:04:54.784" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:04:54.784" endtime="20250923 10:04:54.796"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:56.797" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:04:54.796" endtime="20250923 10:04:56.797"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:56.798" endtime="20250923 10:04:56.815"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:56.815" endtime="20250923 10:04:56.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:04:56.826" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:04:56.826" endtime="20250923 10:04:56.827"/>
</kw>
<status status="PASS" starttime="20250923 10:04:53.773" endtime="20250923 10:04:56.827"/>
</kw>
<status status="PASS" starttime="20250923 10:04:53.772" endtime="20250923 10:04:56.827"/>
</kw>
<status status="PASS" starttime="20250923 10:04:52.763" endtime="20250923 10:04:56.827"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>DeleteCancelTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:04:56.828" level="INFO">${timestamp} = 20250923_100456</msg>
<status status="PASS" starttime="20250923 10:04:56.828" endtime="20250923 10:04:56.828"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:04:56.828" level="INFO">${unique_name} = DeleteCancelTest_20250923_100456</msg>
<status status="PASS" starttime="20250923 10:04:56.828" endtime="20250923 10:04:56.828"/>
</kw>
<msg timestamp="20250923 10:04:56.828" level="INFO">${dep_name} = DeleteCancelTest_20250923_100456</msg>
<status status="PASS" starttime="20250923 10:04:56.828" endtime="20250923 10:04:56.828"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for delete cancel test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:04:56.828" level="INFO">${description} = Dependency for delete cancel test</msg>
<status status="PASS" starttime="20250923 10:04:56.828" endtime="20250923 10:04:56.828"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:56.830" endtime="20250923 10:04:56.838"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:56.839" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:04:56.838" endtime="20250923 10:04:56.862"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:56.862" endtime="20250923 10:04:57.089"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:57.090" endtime="20250923 10:04:57.100"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:57.100" endtime="20250923 10:04:57.108"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:57.108" endtime="20250923 10:04:57.116"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:57.116" level="INFO">Typing text 'DeleteCancelTest_20250923_100456' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:04:57.116" endtime="20250923 10:04:57.150"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:57.151" level="INFO">Typing text 'Dependency for delete cancel test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:04:57.151" endtime="20250923 10:04:57.187"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:04:57.188" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:04:57.187" endtime="20250923 10:04:57.314"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:04:57.314" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:04:57.314" endtime="20250923 10:04:57.333"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:04:57.333" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:04:57.333" endtime="20250923 10:04:57.348"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:04:57.348" endtime="20250923 10:04:57.349"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:04:57.349" endtime="20250923 10:04:57.356"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:57.356" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:04:57.356" endtime="20250923 10:04:57.381"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:04:57.381" endtime="20250923 10:04:57.390"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:04:59.390" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:04:57.390" endtime="20250923 10:04:59.390"/>
</kw>
<status status="PASS" starttime="20250923 10:04:56.829" endtime="20250923 10:04:59.390"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-delete')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:04:59.391" level="INFO">${delete_button} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'DeleteCancelTest_20250923_100456')]]//button[contains(@class, 'btn-delete')]</msg>
<status status="PASS" starttime="20250923 10:04:59.390" endtime="20250923 10:04:59.391"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:04:59.391" level="INFO">Clicking element 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'DeleteCancelTest_20250923_100456')]]//button[contains(@class, 'btn-delete')]'.</msg>
<msg timestamp="20250923 10:05:09.628" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-6.png"&gt;&lt;img src="selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:05:09.629" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'DeleteCancelTest_20250923_100456')]]//button[contains(@class, 'btn-delete')]' not found.</msg>
<status status="FAIL" starttime="20250923 10:04:59.391" endtime="20250923 10:05:09.653"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>DISMISS</arg>
<doc>Handles the current alert and returns its message.</doc>
<status status="NOT RUN" starttime="20250923 10:05:09.654" endtime="20250923 10:05:09.654"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 10:05:09.654" endtime="20250923 10:05:09.654"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 10:05:09.654" endtime="20250923 10:05:09.654"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:05:09.655" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:05:09.655" endtime="20250923 10:05:09.660"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:05:10.665" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:05:09.660" endtime="20250923 10:05:10.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:05:10.665" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:05:10.665" endtime="20250923 10:05:10.665"/>
</kw>
<status status="PASS" starttime="20250923 10:05:09.654" endtime="20250923 10:05:10.665"/>
</kw>
<status status="PASS" starttime="20250923 10:05:09.654" endtime="20250923 10:05:10.665"/>
</kw>
<doc>Test canceling dependency deletion via confirmation dialog</doc>
<tag>cancel</tag>
<tag>confirmation</tag>
<tag>crud</tag>
<tag>delete</tag>
<status status="FAIL" starttime="20250923 10:04:52.762" endtime="20250923 10:05:10.665">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'DeleteCancelTest_20250923_100456')]]//button[contains(@class, 'btn-delete')]' not found.</status>
</test>
<test id="s1-t10" name="TC022 - Cancel Add Dependency Operation" line="169">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:05:10.667" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:05:10.667" endtime="20250923 10:05:10.672"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:05:11.674" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:05:10.672" endtime="20250923 10:05:11.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:05:11.675" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:05:11.674" endtime="20250923 10:05:11.675"/>
</kw>
<status status="PASS" starttime="20250923 10:05:10.667" endtime="20250923 10:05:11.675"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:05:11.675" endtime="20250923 10:05:11.684"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:05:12.686" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:05:11.684" endtime="20250923 10:05:12.686"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:05:12.687" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:05:12.686" endtime="20250923 10:05:12.695"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:05:14.705" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:05:12.695" endtime="20250923 10:05:14.705"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:14.706" endtime="20250923 10:05:14.721"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:14.721" endtime="20250923 10:05:14.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:05:14.731" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:05:14.731" endtime="20250923 10:05:14.731"/>
</kw>
<status status="PASS" starttime="20250923 10:05:11.675" endtime="20250923 10:05:14.731"/>
</kw>
<status status="PASS" starttime="20250923 10:05:11.675" endtime="20250923 10:05:14.731"/>
</kw>
<status status="PASS" starttime="20250923 10:05:10.666" endtime="20250923 10:05:14.732"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:05:14.732" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:05:14.732" endtime="20250923 10:05:14.758"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:14.758" endtime="20250923 10:05:14.767"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>Cancelled Dependency</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:05:14.767" level="INFO">Typing text 'Cancelled Dependency' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:05:14.767" endtime="20250923 10:05:14.821"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>This should not be saved</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:05:14.822" level="INFO">Typing text 'This should not be saved' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:05:14.821" endtime="20250923 10:05:14.854"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CANCEL_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:05:14.855" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-cancel')]'.</msg>
<status status="PASS" starttime="20250923 10:05:14.855" endtime="20250923 10:05:14.884"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:05:14.884" endtime="20250923 10:05:14.891"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>Cancelled Dependency</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<msg timestamp="20250923 10:05:24.948" level="INFO">Current page does not contain element 'xpath://div[@class='dependency-name' and contains(text(), 'Cancelled Dependency')]'.</msg>
<status status="PASS" starttime="20250923 10:05:14.892" endtime="20250923 10:05:24.948"/>
</kw>
<status status="PASS" starttime="20250923 10:05:14.892" endtime="20250923 10:05:24.948"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:05:24.949" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:05:24.949" endtime="20250923 10:05:24.954"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:05:25.956" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:05:24.955" endtime="20250923 10:05:25.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:05:25.957" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:05:25.957" endtime="20250923 10:05:25.957"/>
</kw>
<status status="PASS" starttime="20250923 10:05:24.949" endtime="20250923 10:05:25.957"/>
</kw>
<status status="PASS" starttime="20250923 10:05:24.948" endtime="20250923 10:05:25.957"/>
</kw>
<doc>Test canceling the add dependency operation</doc>
<tag>cancel</tag>
<tag>crud</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 10:05:10.666" endtime="20250923 10:05:25.957"/>
</test>
<test id="s1-t11" name="TC023 - Inline Edit Status Field" line="187">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:05:25.959" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:05:25.959" endtime="20250923 10:05:25.964"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:05:26.967" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:05:25.964" endtime="20250923 10:05:26.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:05:26.967" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:05:26.967" endtime="20250923 10:05:26.967"/>
</kw>
<status status="PASS" starttime="20250923 10:05:25.959" endtime="20250923 10:05:26.967"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:05:26.968" endtime="20250923 10:05:26.976"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:05:27.978" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:05:26.976" endtime="20250923 10:05:27.978"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:05:27.979" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:05:27.978" endtime="20250923 10:05:27.989"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:05:29.991" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:05:27.990" endtime="20250923 10:05:29.991"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:29.992" endtime="20250923 10:05:30.007"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:30.007" endtime="20250923 10:05:30.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:05:30.018" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:05:30.017" endtime="20250923 10:05:30.018"/>
</kw>
<status status="PASS" starttime="20250923 10:05:26.968" endtime="20250923 10:05:30.018"/>
</kw>
<status status="PASS" starttime="20250923 10:05:26.967" endtime="20250923 10:05:30.018"/>
</kw>
<status status="PASS" starttime="20250923 10:05:25.958" endtime="20250923 10:05:30.018"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>StatusEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:05:30.018" level="INFO">${timestamp} = 20250923_100530</msg>
<status status="PASS" starttime="20250923 10:05:30.018" endtime="20250923 10:05:30.018"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:05:30.019" level="INFO">${unique_name} = StatusEditTest_20250923_100530</msg>
<status status="PASS" starttime="20250923 10:05:30.018" endtime="20250923 10:05:30.019"/>
</kw>
<msg timestamp="20250923 10:05:30.019" level="INFO">${dep_name} = StatusEditTest_20250923_100530</msg>
<status status="PASS" starttime="20250923 10:05:30.018" endtime="20250923 10:05:30.019"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for status inline editing</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:05:30.019" level="INFO">${description} = Dependency for status inline editing</msg>
<status status="PASS" starttime="20250923 10:05:30.019" endtime="20250923 10:05:30.019"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:30.020" endtime="20250923 10:05:30.028"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:05:30.029" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:05:30.028" endtime="20250923 10:05:30.051"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:30.052" endtime="20250923 10:05:30.280"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:30.280" endtime="20250923 10:05:30.289"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:30.289" endtime="20250923 10:05:30.298"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:30.298" endtime="20250923 10:05:30.306"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:05:30.306" level="INFO">Typing text 'StatusEditTest_20250923_100530' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:05:30.306" endtime="20250923 10:05:30.342"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:05:30.342" level="INFO">Typing text 'Dependency for status inline editing' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:05:30.342" endtime="20250923 10:05:30.482"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:05:30.482" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:05:30.482" endtime="20250923 10:05:30.507"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:05:30.507" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:05:30.507" endtime="20250923 10:05:30.522"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:05:30.523" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:05:30.522" endtime="20250923 10:05:30.537"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:05:30.537" endtime="20250923 10:05:30.538"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:30.538" endtime="20250923 10:05:30.547"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:05:30.547" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:05:30.547" endtime="20250923 10:05:30.576"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:05:30.576" endtime="20250923 10:05:30.588"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:05:32.590" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:05:30.588" endtime="20250923 10:05:32.591"/>
</kw>
<status status="PASS" starttime="20250923 10:05:30.019" endtime="20250923 10:05:32.591"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status_dropdown}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//select[contains(@class, 'status-dropdown')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:05:32.592" level="INFO">${status_dropdown} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'StatusEditTest_20250923_100530')]]//select[contains(@class, 'status-dropdown')]</msg>
<status status="PASS" starttime="20250923 10:05:32.591" endtime="20250923 10:05:32.592"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${status_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:05:32.593" level="INFO">Clicking element 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'StatusEditTest_20250923_100530')]]//select[contains(@class, 'status-dropdown')]'.</msg>
<msg timestamp="20250923 10:05:42.860" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-7.png"&gt;&lt;img src="selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:05:42.860" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'StatusEditTest_20250923_100530')]]//select[contains(@class, 'status-dropdown')]' not found.</msg>
<status status="FAIL" starttime="20250923 10:05:32.592" endtime="20250923 10:05:42.860"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${status_dropdown}</arg>
<arg>IN PROGRESS</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 10:05:42.861" endtime="20250923 10:05:42.861"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 10:05:42.861" endtime="20250923 10:05:42.861"/>
</kw>
<kw name="Get Selected List Label" library="SeleniumLibrary">
<var>${updated_status}</var>
<arg>${status_dropdown}</arg>
<doc>Returns the label of selected option from selection list ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 10:05:42.861" endtime="20250923 10:05:42.861"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${updated_status}</arg>
<arg>IN PROGRESS</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250923 10:05:42.861" endtime="20250923 10:05:42.861"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:05:42.862" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:05:42.862" endtime="20250923 10:05:42.866"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:05:43.868" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:05:42.867" endtime="20250923 10:05:43.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:05:43.868" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:05:43.868" endtime="20250923 10:05:43.868"/>
</kw>
<status status="PASS" starttime="20250923 10:05:42.862" endtime="20250923 10:05:43.868"/>
</kw>
<status status="PASS" starttime="20250923 10:05:42.862" endtime="20250923 10:05:43.869"/>
</kw>
<doc>Test inline editing of status field via dropdown</doc>
<tag>crud</tag>
<tag>inline_edit</tag>
<tag>status</tag>
<tag>update</tag>
<status status="FAIL" starttime="20250923 10:05:25.958" endtime="20250923 10:05:43.869">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'StatusEditTest_20250923_100530')]]//select[contains(@class, 'status-dropdown')]' not found.</status>
</test>
<test id="s1-t12" name="TC024 - Inline Edit Priority Field" line="206">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:05:43.871" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:05:43.871" endtime="20250923 10:05:43.876"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:05:44.877" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:05:43.876" endtime="20250923 10:05:44.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:05:44.878" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:05:44.877" endtime="20250923 10:05:44.878"/>
</kw>
<status status="PASS" starttime="20250923 10:05:43.870" endtime="20250923 10:05:44.878"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:05:44.878" endtime="20250923 10:05:44.888"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:05:45.890" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:05:44.888" endtime="20250923 10:05:45.890"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:05:45.890" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:05:45.890" endtime="20250923 10:05:45.897"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:05:47.898" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:05:45.897" endtime="20250923 10:05:47.898"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:47.898" endtime="20250923 10:05:47.906"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:47.906" endtime="20250923 10:05:47.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:05:47.912" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:05:47.912" endtime="20250923 10:05:47.912"/>
</kw>
<status status="PASS" starttime="20250923 10:05:44.878" endtime="20250923 10:05:47.912"/>
</kw>
<status status="PASS" starttime="20250923 10:05:44.878" endtime="20250923 10:05:47.913"/>
</kw>
<status status="PASS" starttime="20250923 10:05:43.870" endtime="20250923 10:05:47.913"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>PriorityEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:05:47.913" level="INFO">${timestamp} = 20250923_100547</msg>
<status status="PASS" starttime="20250923 10:05:47.913" endtime="20250923 10:05:47.913"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:05:47.913" level="INFO">${unique_name} = PriorityEditTest_20250923_100547</msg>
<status status="PASS" starttime="20250923 10:05:47.913" endtime="20250923 10:05:47.913"/>
</kw>
<msg timestamp="20250923 10:05:47.913" level="INFO">${dep_name} = PriorityEditTest_20250923_100547</msg>
<status status="PASS" starttime="20250923 10:05:47.913" endtime="20250923 10:05:47.913"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for priority inline editing</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:05:47.913" level="INFO">${description} = Dependency for priority inline editing</msg>
<status status="PASS" starttime="20250923 10:05:47.913" endtime="20250923 10:05:47.913"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>LOW</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:47.914" endtime="20250923 10:05:47.921"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:05:47.921" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:05:47.921" endtime="20250923 10:05:47.941"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:47.942" endtime="20250923 10:05:48.160"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:48.160" endtime="20250923 10:05:48.166"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:48.166" endtime="20250923 10:05:48.173"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:48.173" endtime="20250923 10:05:48.180"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:05:48.180" level="INFO">Typing text 'PriorityEditTest_20250923_100547' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:05:48.180" endtime="20250923 10:05:48.216"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:05:48.216" level="INFO">Typing text 'Dependency for priority inline editing' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:05:48.216" endtime="20250923 10:05:48.251"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:05:48.252" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:05:48.251" endtime="20250923 10:05:48.275"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:05:48.275" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:05:48.275" endtime="20250923 10:05:48.290"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:05:48.290" level="INFO">Selecting options from selection list 'id:addPriority' by value LOW.</msg>
<status status="PASS" starttime="20250923 10:05:48.290" endtime="20250923 10:05:48.315"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:05:48.315" endtime="20250923 10:05:48.316"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:05:48.316" endtime="20250923 10:05:48.322"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:05:48.323" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:05:48.322" endtime="20250923 10:05:48.344"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:05:48.345" endtime="20250923 10:05:48.353"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:05:50.355" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:05:48.353" endtime="20250923 10:05:50.355"/>
</kw>
<status status="PASS" starttime="20250923 10:05:47.913" endtime="20250923 10:05:50.355"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${priority_dropdown}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//select[contains(@class, 'priority-dropdown')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:05:50.355" level="INFO">${priority_dropdown} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'PriorityEditTest_20250923_100547')]]//select[contains(@class, 'priority-dropdown')]</msg>
<status status="PASS" starttime="20250923 10:05:50.355" endtime="20250923 10:05:50.355"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${priority_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:05:50.355" level="INFO">Clicking element 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'PriorityEditTest_20250923_100547')]]//select[contains(@class, 'priority-dropdown')]'.</msg>
<msg timestamp="20250923 10:06:00.582" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-8.png"&gt;&lt;img src="selenium-screenshot-8.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:06:00.582" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'PriorityEditTest_20250923_100547')]]//select[contains(@class, 'priority-dropdown')]' not found.</msg>
<status status="FAIL" starttime="20250923 10:05:50.355" endtime="20250923 10:06:00.582"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${priority_dropdown}</arg>
<arg>HIGH</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 10:06:00.583" endtime="20250923 10:06:00.583"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 10:06:00.583" endtime="20250923 10:06:00.583"/>
</kw>
<kw name="Get Selected List Label" library="SeleniumLibrary">
<var>${updated_priority}</var>
<arg>${priority_dropdown}</arg>
<doc>Returns the label of selected option from selection list ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 10:06:00.583" endtime="20250923 10:06:00.583"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${updated_priority}</arg>
<arg>HIGH</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250923 10:06:00.583" endtime="20250923 10:06:00.583"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:06:00.583" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:06:00.583" endtime="20250923 10:06:00.587"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:01.588" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:06:00.587" endtime="20250923 10:06:01.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:06:01.588" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:06:01.588" endtime="20250923 10:06:01.589"/>
</kw>
<status status="PASS" starttime="20250923 10:06:00.583" endtime="20250923 10:06:01.589"/>
</kw>
<status status="PASS" starttime="20250923 10:06:00.583" endtime="20250923 10:06:01.589"/>
</kw>
<doc>Test inline editing of priority field via dropdown</doc>
<tag>crud</tag>
<tag>inline_edit</tag>
<tag>priority</tag>
<tag>update</tag>
<status status="FAIL" starttime="20250923 10:05:43.869" endtime="20250923 10:06:01.589">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'PriorityEditTest_20250923_100547')]]//select[contains(@class, 'priority-dropdown')]' not found.</status>
</test>
<test id="s1-t13" name="TC025 - RBAC Admin Can Edit Any Dependency" line="225">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:06:01.590" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:06:01.590" endtime="20250923 10:06:01.593"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:02.595" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:06:01.593" endtime="20250923 10:06:02.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:06:02.595" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:06:02.595" endtime="20250923 10:06:02.595"/>
</kw>
<status status="PASS" starttime="20250923 10:06:01.590" endtime="20250923 10:06:02.595"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:06:02.595" endtime="20250923 10:06:02.599"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:03.601" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:06:02.599" endtime="20250923 10:06:03.601"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:06:03.603" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:06:03.602" endtime="20250923 10:06:03.610"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:05.611" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:06:03.610" endtime="20250923 10:06:05.611"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:05.611" endtime="20250923 10:06:05.627"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:05.627" endtime="20250923 10:06:05.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:06:05.636" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:06:05.636" endtime="20250923 10:06:05.636"/>
</kw>
<status status="PASS" starttime="20250923 10:06:02.595" endtime="20250923 10:06:05.637"/>
</kw>
<status status="PASS" starttime="20250923 10:06:02.595" endtime="20250923 10:06:05.637"/>
</kw>
<status status="PASS" starttime="20250923 10:06:01.589" endtime="20250923 10:06:05.637"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>AdminEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:06:05.638" level="INFO">${timestamp} = 20250923_100605</msg>
<status status="PASS" starttime="20250923 10:06:05.637" endtime="20250923 10:06:05.638"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:06:05.638" level="INFO">${unique_name} = AdminEditTest_20250923_100605</msg>
<status status="PASS" starttime="20250923 10:06:05.638" endtime="20250923 10:06:05.638"/>
</kw>
<msg timestamp="20250923 10:06:05.638" level="INFO">${dep_name} = AdminEditTest_20250923_100605</msg>
<status status="PASS" starttime="20250923 10:06:05.637" endtime="20250923 10:06:05.638"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for admin RBAC test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:06:05.638" level="INFO">${description} = Dependency for admin RBAC test</msg>
<status status="PASS" starttime="20250923 10:06:05.638" endtime="20250923 10:06:05.638"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:05.639" endtime="20250923 10:06:05.646"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:06:05.646" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:06:05.646" endtime="20250923 10:06:05.668"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:05.668" endtime="20250923 10:06:05.886"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:05.887" endtime="20250923 10:06:05.894"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:05.895" endtime="20250923 10:06:05.902"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:05.902" endtime="20250923 10:06:05.908"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:06:05.909" level="INFO">Typing text 'AdminEditTest_20250923_100605' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:06:05.908" endtime="20250923 10:06:05.945"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:06:05.946" level="INFO">Typing text 'Dependency for admin RBAC test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:06:05.946" endtime="20250923 10:06:05.980"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:06:05.981" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:06:05.980" endtime="20250923 10:06:06.005"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:06:06.006" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:06:06.005" endtime="20250923 10:06:06.018"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:06:06.018" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:06:06.018" endtime="20250923 10:06:06.031"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:06:06.031" endtime="20250923 10:06:06.032"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:06.032" endtime="20250923 10:06:06.040"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:06:06.041" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:06:06.041" endtime="20250923 10:06:06.062"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:06:06.062" endtime="20250923 10:06:06.070"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:08.071" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:06:06.070" endtime="20250923 10:06:08.071"/>
</kw>
<status status="PASS" starttime="20250923 10:06:05.638" endtime="20250923 10:06:08.072"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${edit_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-edit')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:06:08.072" level="INFO">${edit_button} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'AdminEditTest_20250923_100605')]]//button[contains(@class, 'btn-edit')]</msg>
<status status="PASS" starttime="20250923 10:06:08.072" endtime="20250923 10:06:08.072"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:06:18.371" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-9.png"&gt;&lt;img src="selenium-screenshot-9.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:06:18.371" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'AdminEditTest_20250923_100605')]]//button[contains(@class, 'btn-edit')]' not found.</msg>
<status status="FAIL" starttime="20250923 10:06:08.072" endtime="20250923 10:06:18.372"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_name}</var>
<arg>${dep_name}_AdminEdited</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 10:06:18.372" endtime="20250923 10:06:18.372"/>
</kw>
<kw name="Edit Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${new_name}</arg>
<doc>Edits an existing dependency with updated div-based selectors</doc>
<status status="NOT RUN" starttime="20250923 10:06:18.372" endtime="20250923 10:06:18.372"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${new_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 10:06:18.372" endtime="20250923 10:06:18.372"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:06:18.373" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:06:18.373" endtime="20250923 10:06:18.377"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:19.380" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:06:18.377" endtime="20250923 10:06:19.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:06:19.381" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:06:19.380" endtime="20250923 10:06:19.381"/>
</kw>
<status status="PASS" starttime="20250923 10:06:18.373" endtime="20250923 10:06:19.381"/>
</kw>
<status status="PASS" starttime="20250923 10:06:18.372" endtime="20250923 10:06:19.381"/>
</kw>
<doc>Test that admin users can edit any dependency</doc>
<tag>admin</tag>
<tag>crud</tag>
<tag>edit</tag>
<tag>rbac</tag>
<status status="FAIL" starttime="20250923 10:06:01.589" endtime="20250923 10:06:19.381">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'AdminEditTest_20250923_100605')]]//button[contains(@class, 'btn-edit')]' not found.</status>
</test>
<test id="s1-t14" name="TC026 - RBAC Admin Can Delete Any Dependency" line="243">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:06:19.382" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:06:19.382" endtime="20250923 10:06:19.386"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:20.386" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:06:19.386" endtime="20250923 10:06:20.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:06:20.387" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:06:20.387" endtime="20250923 10:06:20.387"/>
</kw>
<status status="PASS" starttime="20250923 10:06:19.382" endtime="20250923 10:06:20.387"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:06:20.387" endtime="20250923 10:06:20.392"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:21.393" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:06:20.392" endtime="20250923 10:06:21.393"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:06:21.394" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:06:21.393" endtime="20250923 10:06:21.401"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:23.402" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:06:21.401" endtime="20250923 10:06:23.402"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:23.402" endtime="20250923 10:06:23.410"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:23.410" endtime="20250923 10:06:23.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:06:23.415" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:06:23.415" endtime="20250923 10:06:23.415"/>
</kw>
<status status="PASS" starttime="20250923 10:06:20.387" endtime="20250923 10:06:23.416"/>
</kw>
<status status="PASS" starttime="20250923 10:06:20.387" endtime="20250923 10:06:23.416"/>
</kw>
<status status="PASS" starttime="20250923 10:06:19.382" endtime="20250923 10:06:23.416"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>AdminDeleteTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:06:23.416" level="INFO">${timestamp} = 20250923_100623</msg>
<status status="PASS" starttime="20250923 10:06:23.416" endtime="20250923 10:06:23.416"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:06:23.416" level="INFO">${unique_name} = AdminDeleteTest_20250923_100623</msg>
<status status="PASS" starttime="20250923 10:06:23.416" endtime="20250923 10:06:23.416"/>
</kw>
<msg timestamp="20250923 10:06:23.416" level="INFO">${dep_name} = AdminDeleteTest_20250923_100623</msg>
<status status="PASS" starttime="20250923 10:06:23.416" endtime="20250923 10:06:23.416"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for admin delete RBAC test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:06:23.416" level="INFO">${description} = Dependency for admin delete RBAC test</msg>
<status status="PASS" starttime="20250923 10:06:23.416" endtime="20250923 10:06:23.416"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:23.417" endtime="20250923 10:06:23.422"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:06:23.423" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:06:23.422" endtime="20250923 10:06:23.444"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:23.444" endtime="20250923 10:06:23.659"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:23.659" endtime="20250923 10:06:23.665"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:23.665" endtime="20250923 10:06:23.670"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:23.670" endtime="20250923 10:06:23.676"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:06:23.677" level="INFO">Typing text 'AdminDeleteTest_20250923_100623' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:06:23.676" endtime="20250923 10:06:23.710"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:06:23.710" level="INFO">Typing text 'Dependency for admin delete RBAC test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:06:23.710" endtime="20250923 10:06:23.746"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:06:23.747" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:06:23.746" endtime="20250923 10:06:23.774"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:06:23.775" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:06:23.774" endtime="20250923 10:06:23.789"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:06:23.789" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:06:23.789" endtime="20250923 10:06:23.802"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:06:23.802" endtime="20250923 10:06:23.803"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:23.803" endtime="20250923 10:06:23.810"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:06:23.811" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:06:23.810" endtime="20250923 10:06:23.833"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:06:23.833" endtime="20250923 10:06:23.841"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:25.843" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:06:23.841" endtime="20250923 10:06:25.843"/>
</kw>
<status status="PASS" starttime="20250923 10:06:23.416" endtime="20250923 10:06:25.843"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-delete')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:06:25.843" level="INFO">${delete_button} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'AdminDeleteTest_20250923_100623')]]//button[contains(@class, 'btn-delete')]</msg>
<status status="PASS" starttime="20250923 10:06:25.843" endtime="20250923 10:06:25.843"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:06:36.095" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-10.png"&gt;&lt;img src="selenium-screenshot-10.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:06:36.095" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'AdminDeleteTest_20250923_100623')]]//button[contains(@class, 'btn-delete')]' not found.</msg>
<status status="FAIL" starttime="20250923 10:06:25.843" endtime="20250923 10:06:36.095"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<status status="NOT RUN" starttime="20250923 10:06:36.095" endtime="20250923 10:06:36.095"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 10:06:36.095" endtime="20250923 10:06:36.095"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:06:36.096" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:06:36.096" endtime="20250923 10:06:36.099"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:37.136" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:06:36.099" endtime="20250923 10:06:37.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:06:37.161" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:06:37.160" endtime="20250923 10:06:37.161"/>
</kw>
<status status="PASS" starttime="20250923 10:06:36.096" endtime="20250923 10:06:37.161"/>
</kw>
<status status="PASS" starttime="20250923 10:06:36.096" endtime="20250923 10:06:37.161"/>
</kw>
<doc>Test that admin users can delete any dependency</doc>
<tag>admin</tag>
<tag>crud</tag>
<tag>delete</tag>
<tag>rbac</tag>
<status status="FAIL" starttime="20250923 10:06:19.381" endtime="20250923 10:06:37.161">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'AdminDeleteTest_20250923_100623')]]//button[contains(@class, 'btn-delete')]' not found.</status>
</test>
<test id="s1-t15" name="TC027 - RBAC User Can Only Edit Own Dependencies" line="260">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:06:37.166" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:06:37.164" endtime="20250923 10:06:37.171"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:38.172" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:06:37.171" endtime="20250923 10:06:38.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:06:38.172" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:06:38.172" endtime="20250923 10:06:38.172"/>
</kw>
<status status="PASS" starttime="20250923 10:06:37.164" endtime="20250923 10:06:38.172"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:06:38.173" endtime="20250923 10:06:38.177"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:39.179" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:06:38.177" endtime="20250923 10:06:39.179"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:06:39.180" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:06:39.179" endtime="20250923 10:06:39.187"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:41.189" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:06:39.187" endtime="20250923 10:06:41.189"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:41.189" endtime="20250923 10:06:41.196"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:41.196" endtime="20250923 10:06:41.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:06:41.202" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:06:41.202" endtime="20250923 10:06:41.202"/>
</kw>
<status status="PASS" starttime="20250923 10:06:38.173" endtime="20250923 10:06:41.202"/>
</kw>
<status status="PASS" starttime="20250923 10:06:38.173" endtime="20250923 10:06:41.202"/>
</kw>
<status status="PASS" starttime="20250923 10:06:37.163" endtime="20250923 10:06:41.202"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:41.203" endtime="20250923 10:06:41.211"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:06:41.211" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-logout')]'.</msg>
<status status="PASS" starttime="20250923 10:06:41.211" endtime="20250923 10:06:41.313"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<msg timestamp="20250923 10:06:51.622" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-11.png"&gt;&lt;img src="selenium-screenshot-11.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:06:51.625" level="FAIL">Element 'id:userPanel' still visible after 10 seconds.</msg>
<status status="FAIL" starttime="20250923 10:06:41.313" endtime="20250923 10:06:51.626"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20250923 10:06:51.631" endtime="20250923 10:06:51.632"/>
</kw>
<status status="FAIL" starttime="20250923 10:06:41.202" endtime="20250923 10:06:51.632"/>
</kw>
<kw name="Login To DepFlow" library="depflow_keywords">
<arg>${USER_USERNAME}</arg>
<arg>${USER_PASSWORD}</arg>
<doc>Logs into DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 10:06:51.633" endtime="20250923 10:06:51.633"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 10:06:51.633" endtime="20250923 10:06:51.634"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>UserEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<status status="NOT RUN" starttime="20250923 10:06:51.634" endtime="20250923 10:06:51.634"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency created by regular user</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 10:06:51.634" endtime="20250923 10:06:51.634"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<status status="NOT RUN" starttime="20250923 10:06:51.634" endtime="20250923 10:06:51.634"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${edit_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-edit')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 10:06:51.634" endtime="20250923 10:06:51.634"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 10:06:51.634" endtime="20250923 10:06:51.634"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 10:06:51.634" endtime="20250923 10:06:51.634"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<status status="NOT RUN" starttime="20250923 10:06:51.634" endtime="20250923 10:06:51.634"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 10:06:51.634" endtime="20250923 10:06:51.634"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:06:51.642" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:06:51.639" endtime="20250923 10:06:51.662"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:52.664" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:06:51.662" endtime="20250923 10:06:52.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:06:52.665" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:06:52.664" endtime="20250923 10:06:52.665"/>
</kw>
<status status="PASS" starttime="20250923 10:06:51.637" endtime="20250923 10:06:52.665"/>
</kw>
<status status="PASS" starttime="20250923 10:06:51.635" endtime="20250923 10:06:52.665"/>
</kw>
<doc>Test that regular users can only edit dependencies they created</doc>
<tag>crud</tag>
<tag>edit</tag>
<tag>rbac</tag>
<tag>restriction</tag>
<tag>user</tag>
<status status="FAIL" starttime="20250923 10:06:37.162" endtime="20250923 10:06:52.665">Element 'id:userPanel' still visible after 10 seconds.</status>
</test>
<test id="s1-t16" name="TC028 - RBAC User Can Only Delete Own Dependencies" line="283">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:06:52.667" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:06:52.666" endtime="20250923 10:06:52.670"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:53.671" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:06:52.671" endtime="20250923 10:06:53.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:06:53.672" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:06:53.672" endtime="20250923 10:06:53.672"/>
</kw>
<status status="PASS" starttime="20250923 10:06:52.666" endtime="20250923 10:06:53.672"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:06:53.672" endtime="20250923 10:06:53.678"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:54.680" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:06:53.678" endtime="20250923 10:06:54.680"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:06:54.683" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:06:54.681" endtime="20250923 10:06:54.698"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:06:56.704" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:06:54.699" endtime="20250923 10:06:56.707"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:56.708" endtime="20250923 10:06:56.758"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:56.758" endtime="20250923 10:06:56.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:06:56.766" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:06:56.765" endtime="20250923 10:06:56.766"/>
</kw>
<status status="PASS" starttime="20250923 10:06:53.672" endtime="20250923 10:06:56.766"/>
</kw>
<status status="PASS" starttime="20250923 10:06:53.672" endtime="20250923 10:06:56.766"/>
</kw>
<status status="PASS" starttime="20250923 10:06:52.666" endtime="20250923 10:06:56.766"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:06:56.766" endtime="20250923 10:06:56.774"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:06:56.775" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-logout')]'.</msg>
<status status="PASS" starttime="20250923 10:06:56.774" endtime="20250923 10:06:56.808"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<msg timestamp="20250923 10:07:07.079" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-12.png"&gt;&lt;img src="selenium-screenshot-12.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:07:07.080" level="FAIL">Element 'id:userPanel' still visible after 10 seconds.</msg>
<status status="FAIL" starttime="20250923 10:06:56.808" endtime="20250923 10:07:07.080"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20250923 10:07:07.080" endtime="20250923 10:07:07.080"/>
</kw>
<status status="FAIL" starttime="20250923 10:06:56.766" endtime="20250923 10:07:07.080"/>
</kw>
<kw name="Login To DepFlow" library="depflow_keywords">
<arg>${USER_USERNAME}</arg>
<arg>${USER_PASSWORD}</arg>
<doc>Logs into DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 10:07:07.080" endtime="20250923 10:07:07.081"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 10:07:07.081" endtime="20250923 10:07:07.081"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>UserDeleteTest</arg>
<doc>Generates unique test data for test runs</doc>
<status status="NOT RUN" starttime="20250923 10:07:07.081" endtime="20250923 10:07:07.081"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for user delete RBAC test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 10:07:07.081" endtime="20250923 10:07:07.081"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<status status="NOT RUN" starttime="20250923 10:07:07.081" endtime="20250923 10:07:07.081"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-delete')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 10:07:07.081" endtime="20250923 10:07:07.081"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 10:07:07.081" endtime="20250923 10:07:07.081"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<status status="NOT RUN" starttime="20250923 10:07:07.081" endtime="20250923 10:07:07.081"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 10:07:07.081" endtime="20250923 10:07:07.081"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 10:07:07.081" endtime="20250923 10:07:07.081"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<status status="NOT RUN" starttime="20250923 10:07:07.081" endtime="20250923 10:07:07.081"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 10:07:07.081" endtime="20250923 10:07:07.081"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:07:07.083" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:07:07.083" endtime="20250923 10:07:07.086"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:08.087" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:07:07.086" endtime="20250923 10:07:08.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:07:08.088" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:07:08.088" endtime="20250923 10:07:08.088"/>
</kw>
<status status="PASS" starttime="20250923 10:07:07.082" endtime="20250923 10:07:08.088"/>
</kw>
<status status="PASS" starttime="20250923 10:07:07.082" endtime="20250923 10:07:08.088"/>
</kw>
<doc>Test that regular users can only delete dependencies they created</doc>
<tag>crud</tag>
<tag>delete</tag>
<tag>rbac</tag>
<tag>restriction</tag>
<tag>user</tag>
<status status="FAIL" starttime="20250923 10:06:52.665" endtime="20250923 10:07:08.088">Element 'id:userPanel' still visible after 10 seconds.</status>
</test>
<test id="s1-t17" name="TC029 - Status Badge Color Verification" line="310">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:07:08.089" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:07:08.089" endtime="20250923 10:07:08.093"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:09.095" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:07:08.093" endtime="20250923 10:07:09.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:07:09.096" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:07:09.095" endtime="20250923 10:07:09.096"/>
</kw>
<status status="PASS" starttime="20250923 10:07:08.089" endtime="20250923 10:07:09.096"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:07:09.096" endtime="20250923 10:07:09.101"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:10.102" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:07:09.101" endtime="20250923 10:07:10.102"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:07:10.103" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:07:10.102" endtime="20250923 10:07:10.112"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:12.113" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:07:10.113" endtime="20250923 10:07:12.113"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:12.113" endtime="20250923 10:07:12.122"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:12.123" endtime="20250923 10:07:12.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:07:12.130" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:07:12.130" endtime="20250923 10:07:12.130"/>
</kw>
<status status="PASS" starttime="20250923 10:07:09.096" endtime="20250923 10:07:12.130"/>
</kw>
<status status="PASS" starttime="20250923 10:07:09.096" endtime="20250923 10:07:12.130"/>
</kw>
<status status="PASS" starttime="20250923 10:07:08.089" endtime="20250923 10:07:12.130"/>
</kw>
<for flavor="IN">
<var>${status}</var>
<value>@{STATUSES}</value>
<iter>
<var name="${status}">NOT STARTED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>StatusColor_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:07:12.132" level="INFO">${timestamp} = 20250923_100712</msg>
<status status="PASS" starttime="20250923 10:07:12.131" endtime="20250923 10:07:12.132"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:07:12.132" level="INFO">${unique_name} = StatusColor_NOT_STARTED_20250923_100712</msg>
<status status="PASS" starttime="20250923 10:07:12.132" endtime="20250923 10:07:12.132"/>
</kw>
<msg timestamp="20250923 10:07:12.132" level="INFO">${dep_name} = StatusColor_NOT_STARTED_20250923_100712</msg>
<status status="PASS" starttime="20250923 10:07:12.130" endtime="20250923 10:07:12.132"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Testing ${status} status color</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:07:12.132" level="INFO">${description} = Testing NOT STARTED status color</msg>
<status status="PASS" starttime="20250923 10:07:12.132" endtime="20250923 10:07:12.132"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:12.133" endtime="20250923 10:07:12.140"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:12.141" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:07:12.140" endtime="20250923 10:07:12.163"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:12.163" endtime="20250923 10:07:12.176"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:12.176" endtime="20250923 10:07:12.188"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:12.188" endtime="20250923 10:07:12.201"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:12.201" endtime="20250923 10:07:12.210"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:12.210" level="INFO">Typing text 'StatusColor_NOT_STARTED_20250923_100712' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:07:12.210" endtime="20250923 10:07:12.245"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:12.245" level="INFO">Typing text 'Testing NOT STARTED status color' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:07:12.245" endtime="20250923 10:07:12.279"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:07:12.280" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:07:12.279" endtime="20250923 10:07:12.306"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:07:12.308" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:07:12.307" endtime="20250923 10:07:12.325"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:07:12.325" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:07:12.325" endtime="20250923 10:07:12.337"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:07:12.337" endtime="20250923 10:07:12.338"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:12.338" endtime="20250923 10:07:12.344"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:12.345" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:07:12.345" endtime="20250923 10:07:12.377"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:07:12.378" endtime="20250923 10:07:12.386"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:14.388" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:07:12.386" endtime="20250923 10:07:14.388"/>
</kw>
<status status="PASS" starttime="20250923 10:07:12.132" endtime="20250923 10:07:14.388"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status_badge}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//span[contains(@class, 'status-badge')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:07:14.389" level="INFO">${status_badge} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'StatusColor_NOT_STARTED_20250923_100712')]]//span[contains(@class, 'status-badge')]</msg>
<status status="PASS" starttime="20250923 10:07:14.388" endtime="20250923 10:07:14.389"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${status_badge}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:07:24.676" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-13.png"&gt;&lt;img src="selenium-screenshot-13.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:07:24.678" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'StatusColor_NOT_STARTED_20250923_100712')]]//span[contains(@class, 'status-badge')]' not found.</msg>
<status status="FAIL" starttime="20250923 10:07:14.389" endtime="20250923 10:07:24.678"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<status status="NOT RUN" starttime="20250923 10:07:24.678" endtime="20250923 10:07:24.678"/>
</kw>
<status status="FAIL" starttime="20250923 10:07:12.130" endtime="20250923 10:07:24.678"/>
</iter>
<status status="FAIL" starttime="20250923 10:07:12.130" endtime="20250923 10:07:24.678"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:07:24.681" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:07:24.679" endtime="20250923 10:07:24.741"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:25.744" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:07:24.741" endtime="20250923 10:07:25.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:07:25.744" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:07:25.744" endtime="20250923 10:07:25.744"/>
</kw>
<status status="PASS" starttime="20250923 10:07:24.679" endtime="20250923 10:07:25.744"/>
</kw>
<status status="PASS" starttime="20250923 10:07:24.679" endtime="20250923 10:07:25.744"/>
</kw>
<doc>Test that status badges display with correct colors</doc>
<tag>colors</tag>
<tag>crud</tag>
<tag>status</tag>
<tag>ui</tag>
<status status="FAIL" starttime="20250923 10:07:08.088" endtime="20250923 10:07:25.744">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'StatusColor_NOT_STARTED_20250923_100712')]]//span[contains(@class, 'status-badge')]' not found.</status>
</test>
<test id="s1-t18" name="TC030 - Priority Badge Color Verification" line="327">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:07:25.746" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:07:25.745" endtime="20250923 10:07:25.749"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:26.749" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:07:25.749" endtime="20250923 10:07:26.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:07:26.750" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:07:26.750" endtime="20250923 10:07:26.750"/>
</kw>
<status status="PASS" starttime="20250923 10:07:25.745" endtime="20250923 10:07:26.750"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:07:26.750" endtime="20250923 10:07:26.759"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:27.762" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:07:26.760" endtime="20250923 10:07:27.762"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:07:27.762" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:07:27.762" endtime="20250923 10:07:27.787"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:29.788" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:07:27.787" endtime="20250923 10:07:29.789"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:29.790" endtime="20250923 10:07:29.816"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:29.816" endtime="20250923 10:07:29.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:07:29.823" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:07:29.823" endtime="20250923 10:07:29.823"/>
</kw>
<status status="PASS" starttime="20250923 10:07:26.750" endtime="20250923 10:07:29.823"/>
</kw>
<status status="PASS" starttime="20250923 10:07:26.750" endtime="20250923 10:07:29.823"/>
</kw>
<status status="PASS" starttime="20250923 10:07:25.745" endtime="20250923 10:07:29.823"/>
</kw>
<for flavor="IN">
<var>${priority}</var>
<value>@{PRIORITIES}</value>
<iter>
<var name="${priority}">HIGH</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>PriorityColor_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:07:29.827" level="INFO">${timestamp} = 20250923_100729</msg>
<status status="PASS" starttime="20250923 10:07:29.824" endtime="20250923 10:07:29.827"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:07:29.828" level="INFO">${unique_name} = PriorityColor_HIGH_20250923_100729</msg>
<status status="PASS" starttime="20250923 10:07:29.828" endtime="20250923 10:07:29.828"/>
</kw>
<msg timestamp="20250923 10:07:29.828" level="INFO">${dep_name} = PriorityColor_HIGH_20250923_100729</msg>
<status status="PASS" starttime="20250923 10:07:29.824" endtime="20250923 10:07:29.828"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Testing ${priority} priority color</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:07:29.828" level="INFO">${description} = Testing HIGH priority color</msg>
<status status="PASS" starttime="20250923 10:07:29.828" endtime="20250923 10:07:29.828"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:29.829" endtime="20250923 10:07:29.839"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:29.839" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:07:29.839" endtime="20250923 10:07:29.937"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:29.938" endtime="20250923 10:07:29.952"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:29.952" endtime="20250923 10:07:29.963"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:29.963" endtime="20250923 10:07:29.972"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:29.972" endtime="20250923 10:07:29.979"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:29.979" level="INFO">Typing text 'PriorityColor_HIGH_20250923_100729' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:07:29.979" endtime="20250923 10:07:30.100"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:30.100" level="INFO">Typing text 'Testing HIGH priority color' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:07:30.100" endtime="20250923 10:07:30.221"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:07:30.221" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:07:30.221" endtime="20250923 10:07:30.259"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:07:30.259" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:07:30.259" endtime="20250923 10:07:30.296"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:07:30.297" level="INFO">Selecting options from selection list 'id:addPriority' by value HIGH.</msg>
<status status="PASS" starttime="20250923 10:07:30.296" endtime="20250923 10:07:30.370"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:07:30.370" endtime="20250923 10:07:30.372"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:30.372" endtime="20250923 10:07:30.380"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:30.380" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:07:30.380" endtime="20250923 10:07:30.444"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:07:30.444" endtime="20250923 10:07:30.453"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:32.455" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:07:30.453" endtime="20250923 10:07:32.455"/>
</kw>
<status status="PASS" starttime="20250923 10:07:29.828" endtime="20250923 10:07:32.455"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${priority_badge}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//span[contains(@class, 'priority-badge')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:07:32.455" level="INFO">${priority_badge} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'PriorityColor_HIGH_20250923_100729')]]//span[contains(@class, 'priority-badge')]</msg>
<status status="PASS" starttime="20250923 10:07:32.455" endtime="20250923 10:07:32.455"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${priority_badge}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 10:07:42.779" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-14.png"&gt;&lt;img src="selenium-screenshot-14.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:07:42.780" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'PriorityColor_HIGH_20250923_100729')]]//span[contains(@class, 'priority-badge')]' not found.</msg>
<status status="FAIL" starttime="20250923 10:07:32.455" endtime="20250923 10:07:42.781"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency and handles the confirmation dialog</doc>
<status status="NOT RUN" starttime="20250923 10:07:42.781" endtime="20250923 10:07:42.781"/>
</kw>
<status status="FAIL" starttime="20250923 10:07:29.823" endtime="20250923 10:07:42.781"/>
</iter>
<status status="FAIL" starttime="20250923 10:07:29.823" endtime="20250923 10:07:42.782"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:07:42.784" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:07:42.783" endtime="20250923 10:07:42.795"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:43.797" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:07:42.796" endtime="20250923 10:07:43.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:07:43.798" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:07:43.798" endtime="20250923 10:07:43.798"/>
</kw>
<status status="PASS" starttime="20250923 10:07:42.782" endtime="20250923 10:07:43.798"/>
</kw>
<status status="PASS" starttime="20250923 10:07:42.782" endtime="20250923 10:07:43.798"/>
</kw>
<doc>Test that priority badges display with correct colors</doc>
<tag>colors</tag>
<tag>crud</tag>
<tag>priority</tag>
<tag>ui</tag>
<status status="FAIL" starttime="20250923 10:07:25.745" endtime="20250923 10:07:43.798">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'PriorityColor_HIGH_20250923_100729')]]//span[contains(@class, 'priority-badge')]' not found.</status>
</test>
<test id="s1-t19" name="TC022 - Add Dependency With All Teams" line="344">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:07:43.801" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:07:43.800" endtime="20250923 10:07:43.805"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:44.806" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:07:43.805" endtime="20250923 10:07:44.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:07:44.807" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:07:44.806" endtime="20250923 10:07:44.807"/>
</kw>
<status status="PASS" starttime="20250923 10:07:43.800" endtime="20250923 10:07:44.807"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:07:44.808" endtime="20250923 10:07:44.818"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:45.821" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:07:44.818" endtime="20250923 10:07:45.821"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:07:45.822" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:07:45.821" endtime="20250923 10:07:45.839"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:47.840" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:07:45.839" endtime="20250923 10:07:47.840"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:47.840" endtime="20250923 10:07:47.856"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:47.856" endtime="20250923 10:07:47.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:07:47.866" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:07:47.865" endtime="20250923 10:07:47.866"/>
</kw>
<status status="PASS" starttime="20250923 10:07:44.807" endtime="20250923 10:07:47.866"/>
</kw>
<status status="PASS" starttime="20250923 10:07:44.807" endtime="20250923 10:07:47.866"/>
</kw>
<status status="PASS" starttime="20250923 10:07:43.800" endtime="20250923 10:07:47.866"/>
</kw>
<for flavor="IN">
<var>${team}</var>
<value>@{TEAMS}</value>
<iter>
<var name="${team}">Crowdgen</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:07:47.867" level="INFO">${timestamp} = 20250923_100747</msg>
<status status="PASS" starttime="20250923 10:07:47.867" endtime="20250923 10:07:47.867"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:07:47.868" level="INFO">${unique_name} = Team_Crowdgen_20250923_100747</msg>
<status status="PASS" starttime="20250923 10:07:47.868" endtime="20250923 10:07:47.869"/>
</kw>
<msg timestamp="20250923 10:07:47.869" level="INFO">${unique_name} = Team_Crowdgen_20250923_100747</msg>
<status status="PASS" starttime="20250923 10:07:47.866" endtime="20250923 10:07:47.869"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:07:47.869" level="INFO">${description} = Test dependency for Crowdgen team</msg>
<status status="PASS" starttime="20250923 10:07:47.869" endtime="20250923 10:07:47.869"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:47.870" endtime="20250923 10:07:47.878"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:47.878" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:07:47.878" endtime="20250923 10:07:47.908"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:47.908" endtime="20250923 10:07:47.920"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:47.920" endtime="20250923 10:07:47.931"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:47.932" endtime="20250923 10:07:47.949"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:47.949" endtime="20250923 10:07:47.964"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:47.965" level="INFO">Typing text 'Team_Crowdgen_20250923_100747' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:07:47.964" endtime="20250923 10:07:48.159"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:48.160" level="INFO">Typing text 'Test dependency for Crowdgen team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:07:48.160" endtime="20250923 10:07:48.194"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:07:48.195" level="INFO">Selecting options from selection list 'id:addTeam' by label Crowdgen.</msg>
<status status="PASS" starttime="20250923 10:07:48.194" endtime="20250923 10:07:48.229"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:07:48.230" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:07:48.229" endtime="20250923 10:07:48.244"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:07:48.245" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:07:48.245" endtime="20250923 10:07:48.260"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:07:48.260" endtime="20250923 10:07:48.260"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:48.260" endtime="20250923 10:07:48.267"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:48.268" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:07:48.267" endtime="20250923 10:07:48.294"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:07:48.294" endtime="20250923 10:07:48.301"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:50.302" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:07:48.301" endtime="20250923 10:07:50.302"/>
</kw>
<status status="PASS" starttime="20250923 10:07:47.869" endtime="20250923 10:07:50.302"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:07:50.303" endtime="20250923 10:07:50.312"/>
</kw>
<status status="PASS" starttime="20250923 10:07:50.303" endtime="20250923 10:07:50.312"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:51.314" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:07:50.313" endtime="20250923 10:07:51.314"/>
</kw>
<status status="PASS" starttime="20250923 10:07:47.866" endtime="20250923 10:07:51.314"/>
</iter>
<iter>
<var name="${team}">Annotation Tools</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:07:51.317" level="INFO">${timestamp} = 20250923_100751</msg>
<status status="PASS" starttime="20250923 10:07:51.317" endtime="20250923 10:07:51.317"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:07:51.318" level="INFO">${unique_name} = Team_Annotation_Tools_20250923_100751</msg>
<status status="PASS" starttime="20250923 10:07:51.317" endtime="20250923 10:07:51.318"/>
</kw>
<msg timestamp="20250923 10:07:51.318" level="INFO">${unique_name} = Team_Annotation_Tools_20250923_100751</msg>
<status status="PASS" starttime="20250923 10:07:51.315" endtime="20250923 10:07:51.318"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:07:51.318" level="INFO">${description} = Test dependency for Annotation Tools team</msg>
<status status="PASS" starttime="20250923 10:07:51.318" endtime="20250923 10:07:51.318"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:51.320" endtime="20250923 10:07:51.333"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:51.333" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:07:51.333" endtime="20250923 10:07:51.360"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:51.360" endtime="20250923 10:07:51.371"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:51.372" endtime="20250923 10:07:51.385"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:51.385" endtime="20250923 10:07:51.394"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:51.394" endtime="20250923 10:07:51.410"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:51.410" level="INFO">Typing text 'Team_Annotation_Tools_20250923_100751' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:07:51.410" endtime="20250923 10:07:51.449"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:51.450" level="INFO">Typing text 'Test dependency for Annotation Tools team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:07:51.449" endtime="20250923 10:07:51.487"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:07:51.487" level="INFO">Selecting options from selection list 'id:addTeam' by label Annotation Tools.</msg>
<status status="PASS" starttime="20250923 10:07:51.487" endtime="20250923 10:07:51.516"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:07:51.516" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:07:51.516" endtime="20250923 10:07:51.531"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:07:51.532" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:07:51.531" endtime="20250923 10:07:51.546"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:07:51.546" endtime="20250923 10:07:51.546"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:51.547" endtime="20250923 10:07:51.554"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:51.555" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:07:51.554" endtime="20250923 10:07:51.582"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:07:51.582" endtime="20250923 10:07:51.592"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:53.593" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:07:51.592" endtime="20250923 10:07:53.594"/>
</kw>
<status status="PASS" starttime="20250923 10:07:51.318" endtime="20250923 10:07:53.594"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:07:53.595" endtime="20250923 10:07:53.609"/>
</kw>
<status status="PASS" starttime="20250923 10:07:53.594" endtime="20250923 10:07:53.609"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:54.611" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:07:53.609" endtime="20250923 10:07:54.611"/>
</kw>
<status status="PASS" starttime="20250923 10:07:51.315" endtime="20250923 10:07:54.612"/>
</iter>
<iter>
<var name="${team}">ADAP Platform</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:07:54.615" level="INFO">${timestamp} = 20250923_100754</msg>
<status status="PASS" starttime="20250923 10:07:54.614" endtime="20250923 10:07:54.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:07:54.615" level="INFO">${unique_name} = Team_ADAP_Platform_20250923_100754</msg>
<status status="PASS" starttime="20250923 10:07:54.615" endtime="20250923 10:07:54.615"/>
</kw>
<msg timestamp="20250923 10:07:54.615" level="INFO">${unique_name} = Team_ADAP_Platform_20250923_100754</msg>
<status status="PASS" starttime="20250923 10:07:54.612" endtime="20250923 10:07:54.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:07:54.616" level="INFO">${description} = Test dependency for ADAP Platform team</msg>
<status status="PASS" starttime="20250923 10:07:54.616" endtime="20250923 10:07:54.616"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:54.618" endtime="20250923 10:07:54.631"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:54.631" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:07:54.631" endtime="20250923 10:07:54.660"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:54.661" endtime="20250923 10:07:54.672"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:54.672" endtime="20250923 10:07:54.680"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:54.680" endtime="20250923 10:07:54.688"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:54.688" endtime="20250923 10:07:54.694"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:54.695" level="INFO">Typing text 'Team_ADAP_Platform_20250923_100754' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:07:54.695" endtime="20250923 10:07:54.729"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:54.729" level="INFO">Typing text 'Test dependency for ADAP Platform team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:07:54.729" endtime="20250923 10:07:54.776"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:07:54.777" level="INFO">Selecting options from selection list 'id:addTeam' by label ADAP Platform.</msg>
<status status="PASS" starttime="20250923 10:07:54.776" endtime="20250923 10:07:54.806"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:07:54.807" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:07:54.807" endtime="20250923 10:07:54.825"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:07:54.826" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:07:54.825" endtime="20250923 10:07:54.844"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:07:54.844" endtime="20250923 10:07:54.845"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:54.845" endtime="20250923 10:07:54.854"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:54.854" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:07:54.854" endtime="20250923 10:07:54.881"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:07:54.882" endtime="20250923 10:07:54.890"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:56.893" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:07:54.890" endtime="20250923 10:07:56.895"/>
</kw>
<status status="PASS" starttime="20250923 10:07:54.616" endtime="20250923 10:07:56.895"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:07:56.899" endtime="20250923 10:07:56.919"/>
</kw>
<status status="PASS" starttime="20250923 10:07:56.897" endtime="20250923 10:07:56.919"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:07:57.920" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:07:56.919" endtime="20250923 10:07:57.921"/>
</kw>
<status status="PASS" starttime="20250923 10:07:54.612" endtime="20250923 10:07:57.921"/>
</iter>
<iter>
<var name="${team}">Product Management</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:07:57.924" level="INFO">${timestamp} = 20250923_100757</msg>
<status status="PASS" starttime="20250923 10:07:57.924" endtime="20250923 10:07:57.924"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:07:57.925" level="INFO">${unique_name} = Team_Product_Management_20250923_100757</msg>
<status status="PASS" starttime="20250923 10:07:57.924" endtime="20250923 10:07:57.925"/>
</kw>
<msg timestamp="20250923 10:07:57.925" level="INFO">${unique_name} = Team_Product_Management_20250923_100757</msg>
<status status="PASS" starttime="20250923 10:07:57.921" endtime="20250923 10:07:57.925"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:07:57.925" level="INFO">${description} = Test dependency for Product Management team</msg>
<status status="PASS" starttime="20250923 10:07:57.925" endtime="20250923 10:07:57.925"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:57.927" endtime="20250923 10:07:57.940"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:57.941" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:07:57.941" endtime="20250923 10:07:57.975"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:57.975" endtime="20250923 10:07:57.987"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:57.987" endtime="20250923 10:07:58.003"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:58.003" endtime="20250923 10:07:58.027"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:58.027" endtime="20250923 10:07:58.038"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:58.039" level="INFO">Typing text 'Team_Product_Management_20250923_100757' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:07:58.039" endtime="20250923 10:07:58.086"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:58.086" level="INFO">Typing text 'Test dependency for Product Management team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:07:58.086" endtime="20250923 10:07:58.128"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:07:58.128" level="INFO">Selecting options from selection list 'id:addTeam' by label Product Management.</msg>
<status status="PASS" starttime="20250923 10:07:58.128" endtime="20250923 10:07:58.159"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:07:58.159" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:07:58.159" endtime="20250923 10:07:58.178"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:07:58.179" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:07:58.178" endtime="20250923 10:07:58.195"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:07:58.195" endtime="20250923 10:07:58.196"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:07:58.196" endtime="20250923 10:07:58.203"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:07:58.204" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:07:58.203" endtime="20250923 10:07:58.236"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:07:58.236" endtime="20250923 10:07:58.245"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:00.248" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:07:58.245" endtime="20250923 10:08:00.249"/>
</kw>
<status status="PASS" starttime="20250923 10:07:57.925" endtime="20250923 10:08:00.249"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:00.250" endtime="20250923 10:08:00.257"/>
</kw>
<status status="PASS" starttime="20250923 10:08:00.249" endtime="20250923 10:08:00.257"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:01.258" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:00.257" endtime="20250923 10:08:01.258"/>
</kw>
<status status="PASS" starttime="20250923 10:07:57.921" endtime="20250923 10:08:01.258"/>
</iter>
<iter>
<var name="${team}">Quality Flow</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:08:01.261" level="INFO">${timestamp} = 20250923_100801</msg>
<status status="PASS" starttime="20250923 10:08:01.261" endtime="20250923 10:08:01.261"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:01.261" level="INFO">${unique_name} = Team_Quality_Flow_20250923_100801</msg>
<status status="PASS" starttime="20250923 10:08:01.261" endtime="20250923 10:08:01.261"/>
</kw>
<msg timestamp="20250923 10:08:01.261" level="INFO">${unique_name} = Team_Quality_Flow_20250923_100801</msg>
<status status="PASS" starttime="20250923 10:08:01.259" endtime="20250923 10:08:01.261"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:01.262" level="INFO">${description} = Test dependency for Quality Flow team</msg>
<status status="PASS" starttime="20250923 10:08:01.262" endtime="20250923 10:08:01.262"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:01.264" endtime="20250923 10:08:01.277"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:01.277" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:08:01.277" endtime="20250923 10:08:01.303"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:01.304" endtime="20250923 10:08:01.315"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:01.316" endtime="20250923 10:08:01.330"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:01.330" endtime="20250923 10:08:01.338"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:01.338" endtime="20250923 10:08:01.347"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:01.347" level="INFO">Typing text 'Team_Quality_Flow_20250923_100801' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:08:01.347" endtime="20250923 10:08:01.382"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:01.383" level="INFO">Typing text 'Test dependency for Quality Flow team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:08:01.382" endtime="20250923 10:08:01.427"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:08:01.427" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:08:01.427" endtime="20250923 10:08:01.454"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:01.454" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:08:01.454" endtime="20250923 10:08:01.469"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:01.469" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:08:01.469" endtime="20250923 10:08:01.486"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:08:01.486" endtime="20250923 10:08:01.487"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:01.487" endtime="20250923 10:08:01.494"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:01.495" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:08:01.494" endtime="20250923 10:08:01.523"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:08:01.523" endtime="20250923 10:08:01.535"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:03.535" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:01.535" endtime="20250923 10:08:03.535"/>
</kw>
<status status="PASS" starttime="20250923 10:08:01.262" endtime="20250923 10:08:03.535"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:03.536" endtime="20250923 10:08:03.548"/>
</kw>
<status status="PASS" starttime="20250923 10:08:03.536" endtime="20250923 10:08:03.548"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:04.550" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:03.549" endtime="20250923 10:08:04.550"/>
</kw>
<status status="PASS" starttime="20250923 10:08:01.259" endtime="20250923 10:08:04.558"/>
</iter>
<iter>
<var name="${team}">Data Collection</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:08:04.560" level="INFO">${timestamp} = 20250923_100804</msg>
<status status="PASS" starttime="20250923 10:08:04.560" endtime="20250923 10:08:04.560"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:04.560" level="INFO">${unique_name} = Team_Data_Collection_20250923_100804</msg>
<status status="PASS" starttime="20250923 10:08:04.560" endtime="20250923 10:08:04.560"/>
</kw>
<msg timestamp="20250923 10:08:04.560" level="INFO">${unique_name} = Team_Data_Collection_20250923_100804</msg>
<status status="PASS" starttime="20250923 10:08:04.559" endtime="20250923 10:08:04.560"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:04.560" level="INFO">${description} = Test dependency for Data Collection team</msg>
<status status="PASS" starttime="20250923 10:08:04.560" endtime="20250923 10:08:04.560"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:04.561" endtime="20250923 10:08:04.570"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:04.571" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:08:04.570" endtime="20250923 10:08:04.597"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:04.597" endtime="20250923 10:08:04.617"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:04.618" endtime="20250923 10:08:04.631"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:04.632" endtime="20250923 10:08:04.653"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:04.653" endtime="20250923 10:08:04.664"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:04.665" level="INFO">Typing text 'Team_Data_Collection_20250923_100804' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:08:04.664" endtime="20250923 10:08:04.714"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:04.714" level="INFO">Typing text 'Test dependency for Data Collection team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:08:04.714" endtime="20250923 10:08:04.769"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:08:04.769" level="INFO">Selecting options from selection list 'id:addTeam' by label Data Collection.</msg>
<status status="PASS" starttime="20250923 10:08:04.769" endtime="20250923 10:08:04.804"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:04.805" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:08:04.805" endtime="20250923 10:08:04.823"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:04.824" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:08:04.823" endtime="20250923 10:08:04.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:08:04.842" endtime="20250923 10:08:04.843"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:04.843" endtime="20250923 10:08:04.851"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:04.852" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:08:04.851" endtime="20250923 10:08:04.880"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:08:04.880" endtime="20250923 10:08:04.896"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:06.899" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:04.897" endtime="20250923 10:08:06.900"/>
</kw>
<status status="PASS" starttime="20250923 10:08:04.560" endtime="20250923 10:08:06.901"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:06.902" endtime="20250923 10:08:06.927"/>
</kw>
<status status="PASS" starttime="20250923 10:08:06.901" endtime="20250923 10:08:06.927"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:07.930" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:06.927" endtime="20250923 10:08:07.930"/>
</kw>
<status status="PASS" starttime="20250923 10:08:04.558" endtime="20250923 10:08:07.931"/>
</iter>
<status status="PASS" starttime="20250923 10:07:47.866" endtime="20250923 10:08:07.931"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:08:07.933" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:08:07.932" endtime="20250923 10:08:07.955"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:08.958" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:07.956" endtime="20250923 10:08:08.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:08:08.960" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:08:08.959" endtime="20250923 10:08:08.960"/>
</kw>
<status status="PASS" starttime="20250923 10:08:07.932" endtime="20250923 10:08:08.960"/>
</kw>
<status status="PASS" starttime="20250923 10:08:07.931" endtime="20250923 10:08:08.960"/>
</kw>
<doc>Test creating dependencies for all available teams</doc>
<tag>comprehensive</tag>
<tag>crud</tag>
<tag>teams</tag>
<status status="PASS" starttime="20250923 10:07:43.799" endtime="20250923 10:08:08.960"/>
</test>
<test id="s1-t20" name="TC023 - Add Dependency With All Status Options" line="357">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:08:08.962" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:08:08.961" endtime="20250923 10:08:08.974"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:09.976" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:08.974" endtime="20250923 10:08:09.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:08:09.977" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:08:09.977" endtime="20250923 10:08:09.977"/>
</kw>
<status status="PASS" starttime="20250923 10:08:08.961" endtime="20250923 10:08:09.977"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:09.977" endtime="20250923 10:08:09.993"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:10.994" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:09.993" endtime="20250923 10:08:10.994"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:08:10.994" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:08:10.994" endtime="20250923 10:08:11.014"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:13.015" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:11.014" endtime="20250923 10:08:13.015"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:13.016" endtime="20250923 10:08:13.035"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:13.036" endtime="20250923 10:08:13.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:08:13.046" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:08:13.045" endtime="20250923 10:08:13.046"/>
</kw>
<status status="PASS" starttime="20250923 10:08:09.977" endtime="20250923 10:08:13.046"/>
</kw>
<status status="PASS" starttime="20250923 10:08:09.977" endtime="20250923 10:08:13.046"/>
</kw>
<status status="PASS" starttime="20250923 10:08:08.961" endtime="20250923 10:08:13.046"/>
</kw>
<for flavor="IN">
<var>${status}</var>
<value>@{STATUSES}</value>
<iter>
<var name="${status}">NOT STARTED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Status_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:08:13.048" level="INFO">${timestamp} = 20250923_100813</msg>
<status status="PASS" starttime="20250923 10:08:13.048" endtime="20250923 10:08:13.048"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:13.048" level="INFO">${unique_name} = Status_NOT_STARTED_20250923_100813</msg>
<status status="PASS" starttime="20250923 10:08:13.048" endtime="20250923 10:08:13.048"/>
</kw>
<msg timestamp="20250923 10:08:13.048" level="INFO">${unique_name} = Status_NOT_STARTED_20250923_100813</msg>
<status status="PASS" starttime="20250923 10:08:13.046" endtime="20250923 10:08:13.048"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${status} status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:13.049" level="INFO">${description} = Test dependency with NOT STARTED status</msg>
<status status="PASS" starttime="20250923 10:08:13.048" endtime="20250923 10:08:13.049"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:13.050" endtime="20250923 10:08:13.059"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:13.059" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:08:13.059" endtime="20250923 10:08:13.089"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:13.089" endtime="20250923 10:08:13.322"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:13.322" endtime="20250923 10:08:13.331"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:13.331" endtime="20250923 10:08:13.339"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:13.339" endtime="20250923 10:08:13.347"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:13.347" level="INFO">Typing text 'Status_NOT_STARTED_20250923_100813' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:08:13.347" endtime="20250923 10:08:13.408"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:13.409" level="INFO">Typing text 'Test dependency with NOT STARTED status' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:08:13.409" endtime="20250923 10:08:13.447"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:08:13.448" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:08:13.448" endtime="20250923 10:08:13.491"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:13.492" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:08:13.491" endtime="20250923 10:08:13.504"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:13.505" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:08:13.504" endtime="20250923 10:08:13.520"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:08:13.520" endtime="20250923 10:08:13.521"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:13.521" endtime="20250923 10:08:13.528"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:13.528" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:08:13.528" endtime="20250923 10:08:13.562"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:08:13.562" endtime="20250923 10:08:13.570"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:15.574" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:13.570" endtime="20250923 10:08:15.580"/>
</kw>
<status status="PASS" starttime="20250923 10:08:13.049" endtime="20250923 10:08:15.581"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:15.583" endtime="20250923 10:08:15.603"/>
</kw>
<status status="PASS" starttime="20250923 10:08:15.582" endtime="20250923 10:08:15.603"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:16.604" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:15.603" endtime="20250923 10:08:16.605"/>
</kw>
<status status="PASS" starttime="20250923 10:08:13.046" endtime="20250923 10:08:16.605"/>
</iter>
<iter>
<var name="${status}">IN PROGRESS</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Status_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:08:16.608" level="INFO">${timestamp} = 20250923_100816</msg>
<status status="PASS" starttime="20250923 10:08:16.607" endtime="20250923 10:08:16.608"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:16.608" level="INFO">${unique_name} = Status_IN_PROGRESS_20250923_100816</msg>
<status status="PASS" starttime="20250923 10:08:16.608" endtime="20250923 10:08:16.608"/>
</kw>
<msg timestamp="20250923 10:08:16.609" level="INFO">${unique_name} = Status_IN_PROGRESS_20250923_100816</msg>
<status status="PASS" starttime="20250923 10:08:16.605" endtime="20250923 10:08:16.609"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${status} status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:16.609" level="INFO">${description} = Test dependency with IN PROGRESS status</msg>
<status status="PASS" starttime="20250923 10:08:16.609" endtime="20250923 10:08:16.609"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:16.611" endtime="20250923 10:08:16.626"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:16.627" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:08:16.626" endtime="20250923 10:08:16.655"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:16.655" endtime="20250923 10:08:16.667"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:16.667" endtime="20250923 10:08:16.678"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:16.678" endtime="20250923 10:08:16.687"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:16.687" endtime="20250923 10:08:16.696"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:16.696" level="INFO">Typing text 'Status_IN_PROGRESS_20250923_100816' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:08:16.696" endtime="20250923 10:08:16.736"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:16.736" level="INFO">Typing text 'Test dependency with IN PROGRESS status' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:08:16.736" endtime="20250923 10:08:16.779"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:08:16.779" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:08:16.779" endtime="20250923 10:08:16.806"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:16.806" level="INFO">Selecting options from selection list 'id:addStatus' by value IN PROGRESS.</msg>
<status status="PASS" starttime="20250923 10:08:16.806" endtime="20250923 10:08:16.837"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:16.837" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:08:16.837" endtime="20250923 10:08:16.852"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:08:16.853" endtime="20250923 10:08:16.853"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:16.853" endtime="20250923 10:08:16.861"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:16.861" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:08:16.861" endtime="20250923 10:08:16.887"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:08:16.887" endtime="20250923 10:08:16.895"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:18.897" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:16.896" endtime="20250923 10:08:18.897"/>
</kw>
<status status="PASS" starttime="20250923 10:08:16.609" endtime="20250923 10:08:18.897"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:18.898" endtime="20250923 10:08:18.911"/>
</kw>
<status status="PASS" starttime="20250923 10:08:18.898" endtime="20250923 10:08:18.911"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:19.912" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:18.911" endtime="20250923 10:08:19.912"/>
</kw>
<status status="PASS" starttime="20250923 10:08:16.605" endtime="20250923 10:08:19.912"/>
</iter>
<iter>
<var name="${status}">BLOCKED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Status_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:08:19.916" level="INFO">${timestamp} = 20250923_100819</msg>
<status status="PASS" starttime="20250923 10:08:19.915" endtime="20250923 10:08:19.916"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:19.917" level="INFO">${unique_name} = Status_BLOCKED_20250923_100819</msg>
<status status="PASS" starttime="20250923 10:08:19.916" endtime="20250923 10:08:19.917"/>
</kw>
<msg timestamp="20250923 10:08:19.917" level="INFO">${unique_name} = Status_BLOCKED_20250923_100819</msg>
<status status="PASS" starttime="20250923 10:08:19.913" endtime="20250923 10:08:19.917"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${status} status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:19.917" level="INFO">${description} = Test dependency with BLOCKED status</msg>
<status status="PASS" starttime="20250923 10:08:19.917" endtime="20250923 10:08:19.917"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:19.919" endtime="20250923 10:08:19.932"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:19.932" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:08:19.932" endtime="20250923 10:08:19.959"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:19.959" endtime="20250923 10:08:19.970"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:19.970" endtime="20250923 10:08:19.980"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:19.980" endtime="20250923 10:08:19.995"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:19.995" endtime="20250923 10:08:20.006"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:20.006" level="INFO">Typing text 'Status_BLOCKED_20250923_100819' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:08:20.006" endtime="20250923 10:08:20.044"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:20.044" level="INFO">Typing text 'Test dependency with BLOCKED status' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:08:20.044" endtime="20250923 10:08:20.084"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:08:20.085" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:08:20.084" endtime="20250923 10:08:20.112"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:20.112" level="INFO">Selecting options from selection list 'id:addStatus' by value BLOCKED.</msg>
<status status="PASS" starttime="20250923 10:08:20.112" endtime="20250923 10:08:20.141"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:20.142" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:08:20.141" endtime="20250923 10:08:20.159"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:08:20.159" endtime="20250923 10:08:20.160"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:20.160" endtime="20250923 10:08:20.168"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:20.168" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:08:20.168" endtime="20250923 10:08:20.194"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:08:20.194" endtime="20250923 10:08:20.202"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:22.203" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:20.202" endtime="20250923 10:08:22.203"/>
</kw>
<status status="PASS" starttime="20250923 10:08:19.917" endtime="20250923 10:08:22.204"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:22.204" endtime="20250923 10:08:22.216"/>
</kw>
<status status="PASS" starttime="20250923 10:08:22.204" endtime="20250923 10:08:22.216"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:23.218" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:22.216" endtime="20250923 10:08:23.218"/>
</kw>
<status status="PASS" starttime="20250923 10:08:19.912" endtime="20250923 10:08:23.218"/>
</iter>
<iter>
<var name="${status}">COMPLETED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Status_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:08:23.221" level="INFO">${timestamp} = 20250923_100823</msg>
<status status="PASS" starttime="20250923 10:08:23.220" endtime="20250923 10:08:23.221"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:23.221" level="INFO">${unique_name} = Status_COMPLETED_20250923_100823</msg>
<status status="PASS" starttime="20250923 10:08:23.221" endtime="20250923 10:08:23.221"/>
</kw>
<msg timestamp="20250923 10:08:23.221" level="INFO">${unique_name} = Status_COMPLETED_20250923_100823</msg>
<status status="PASS" starttime="20250923 10:08:23.219" endtime="20250923 10:08:23.221"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${status} status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:23.222" level="INFO">${description} = Test dependency with COMPLETED status</msg>
<status status="PASS" starttime="20250923 10:08:23.221" endtime="20250923 10:08:23.222"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:23.223" endtime="20250923 10:08:23.236"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:23.236" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:08:23.236" endtime="20250923 10:08:23.262"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:23.262" endtime="20250923 10:08:23.277"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:23.277" endtime="20250923 10:08:23.295"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:23.295" endtime="20250923 10:08:23.304"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:23.304" endtime="20250923 10:08:23.312"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:23.312" level="INFO">Typing text 'Status_COMPLETED_20250923_100823' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:08:23.312" endtime="20250923 10:08:23.347"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:23.347" level="INFO">Typing text 'Test dependency with COMPLETED status' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:08:23.347" endtime="20250923 10:08:23.382"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:08:23.382" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:08:23.382" endtime="20250923 10:08:23.408"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:23.409" level="INFO">Selecting options from selection list 'id:addStatus' by value COMPLETED.</msg>
<status status="PASS" starttime="20250923 10:08:23.409" endtime="20250923 10:08:23.437"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:23.438" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:08:23.438" endtime="20250923 10:08:23.453"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:08:23.453" endtime="20250923 10:08:23.454"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:23.454" endtime="20250923 10:08:23.462"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:23.463" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:08:23.462" endtime="20250923 10:08:23.488"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:08:23.488" endtime="20250923 10:08:23.497"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:25.498" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:23.497" endtime="20250923 10:08:25.499"/>
</kw>
<status status="PASS" starttime="20250923 10:08:23.222" endtime="20250923 10:08:25.499"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:25.500" endtime="20250923 10:08:25.512"/>
</kw>
<status status="PASS" starttime="20250923 10:08:25.499" endtime="20250923 10:08:25.512"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:26.514" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:25.512" endtime="20250923 10:08:26.514"/>
</kw>
<status status="PASS" starttime="20250923 10:08:23.219" endtime="20250923 10:08:26.514"/>
</iter>
<status status="PASS" starttime="20250923 10:08:13.046" endtime="20250923 10:08:26.514"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:08:26.517" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:08:26.515" endtime="20250923 10:08:26.526"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:27.529" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:26.526" endtime="20250923 10:08:27.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:08:27.530" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:08:27.530" endtime="20250923 10:08:27.530"/>
</kw>
<status status="PASS" starttime="20250923 10:08:26.515" endtime="20250923 10:08:27.531"/>
</kw>
<status status="PASS" starttime="20250923 10:08:26.515" endtime="20250923 10:08:27.531"/>
</kw>
<doc>Test creating dependencies with all available statuses</doc>
<tag>comprehensive</tag>
<tag>crud</tag>
<tag>status</tag>
<status status="PASS" starttime="20250923 10:08:08.960" endtime="20250923 10:08:27.531"/>
</test>
<test id="s1-t21" name="TC024 - Add Dependency With All Priority Levels" line="370">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:08:27.533" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:08:27.533" endtime="20250923 10:08:27.539"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:28.540" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:27.539" endtime="20250923 10:08:28.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:08:28.541" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:08:28.541" endtime="20250923 10:08:28.541"/>
</kw>
<status status="PASS" starttime="20250923 10:08:27.533" endtime="20250923 10:08:28.541"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:28.542" endtime="20250923 10:08:28.550"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:29.550" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:28.550" endtime="20250923 10:08:29.550"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:08:29.551" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:08:29.551" endtime="20250923 10:08:29.560"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:31.563" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:29.561" endtime="20250923 10:08:31.563"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:31.563" endtime="20250923 10:08:31.582"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:31.583" endtime="20250923 10:08:31.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:08:31.595" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:08:31.595" endtime="20250923 10:08:31.595"/>
</kw>
<status status="PASS" starttime="20250923 10:08:28.542" endtime="20250923 10:08:31.595"/>
</kw>
<status status="PASS" starttime="20250923 10:08:28.541" endtime="20250923 10:08:31.595"/>
</kw>
<status status="PASS" starttime="20250923 10:08:27.532" endtime="20250923 10:08:31.595"/>
</kw>
<for flavor="IN">
<var>${priority}</var>
<value>@{PRIORITIES}</value>
<iter>
<var name="${priority}">HIGH</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Priority_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:08:31.597" level="INFO">${timestamp} = 20250923_100831</msg>
<status status="PASS" starttime="20250923 10:08:31.596" endtime="20250923 10:08:31.597"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:31.597" level="INFO">${unique_name} = Priority_HIGH_20250923_100831</msg>
<status status="PASS" starttime="20250923 10:08:31.597" endtime="20250923 10:08:31.597"/>
</kw>
<msg timestamp="20250923 10:08:31.597" level="INFO">${unique_name} = Priority_HIGH_20250923_100831</msg>
<status status="PASS" starttime="20250923 10:08:31.596" endtime="20250923 10:08:31.597"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${priority} priority</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:31.597" level="INFO">${description} = Test dependency with HIGH priority</msg>
<status status="PASS" starttime="20250923 10:08:31.597" endtime="20250923 10:08:31.597"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:31.599" endtime="20250923 10:08:31.608"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:31.608" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:08:31.608" endtime="20250923 10:08:31.632"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:31.632" endtime="20250923 10:08:31.854"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:31.854" endtime="20250923 10:08:31.864"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:31.865" endtime="20250923 10:08:31.874"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:31.874" endtime="20250923 10:08:31.883"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:31.883" level="INFO">Typing text 'Priority_HIGH_20250923_100831' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:08:31.883" endtime="20250923 10:08:31.918"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:31.918" level="INFO">Typing text 'Test dependency with HIGH priority' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:08:31.918" endtime="20250923 10:08:31.955"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:08:31.955" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:08:31.955" endtime="20250923 10:08:31.980"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:31.980" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:08:31.980" endtime="20250923 10:08:31.995"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:31.996" level="INFO">Selecting options from selection list 'id:addPriority' by value HIGH.</msg>
<status status="PASS" starttime="20250923 10:08:31.995" endtime="20250923 10:08:32.021"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:08:32.021" endtime="20250923 10:08:32.021"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:32.022" endtime="20250923 10:08:32.029"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:32.030" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:08:32.030" endtime="20250923 10:08:32.054"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:08:32.054" endtime="20250923 10:08:32.063"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:34.064" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:32.063" endtime="20250923 10:08:34.064"/>
</kw>
<status status="PASS" starttime="20250923 10:08:31.597" endtime="20250923 10:08:34.065"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:34.065" endtime="20250923 10:08:34.078"/>
</kw>
<status status="PASS" starttime="20250923 10:08:34.065" endtime="20250923 10:08:34.078"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:35.079" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:34.078" endtime="20250923 10:08:35.079"/>
</kw>
<status status="PASS" starttime="20250923 10:08:31.596" endtime="20250923 10:08:35.079"/>
</iter>
<iter>
<var name="${priority}">MEDIUM</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Priority_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:08:35.081" level="INFO">${timestamp} = 20250923_100835</msg>
<status status="PASS" starttime="20250923 10:08:35.081" endtime="20250923 10:08:35.081"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:35.081" level="INFO">${unique_name} = Priority_MEDIUM_20250923_100835</msg>
<status status="PASS" starttime="20250923 10:08:35.081" endtime="20250923 10:08:35.081"/>
</kw>
<msg timestamp="20250923 10:08:35.081" level="INFO">${unique_name} = Priority_MEDIUM_20250923_100835</msg>
<status status="PASS" starttime="20250923 10:08:35.080" endtime="20250923 10:08:35.081"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${priority} priority</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:35.082" level="INFO">${description} = Test dependency with MEDIUM priority</msg>
<status status="PASS" starttime="20250923 10:08:35.082" endtime="20250923 10:08:35.082"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:35.084" endtime="20250923 10:08:35.097"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:35.098" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:08:35.097" endtime="20250923 10:08:35.126"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:35.126" endtime="20250923 10:08:35.137"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:35.137" endtime="20250923 10:08:35.162"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:35.162" endtime="20250923 10:08:35.171"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:35.171" endtime="20250923 10:08:35.178"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:35.179" level="INFO">Typing text 'Priority_MEDIUM_20250923_100835' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:08:35.179" endtime="20250923 10:08:35.215"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:35.215" level="INFO">Typing text 'Test dependency with MEDIUM priority' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:08:35.215" endtime="20250923 10:08:35.255"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:08:35.255" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:08:35.255" endtime="20250923 10:08:35.282"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:35.283" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:08:35.282" endtime="20250923 10:08:35.298"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:35.298" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:08:35.298" endtime="20250923 10:08:35.313"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:08:35.313" endtime="20250923 10:08:35.314"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:35.314" endtime="20250923 10:08:35.321"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:35.322" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:08:35.321" endtime="20250923 10:08:35.347"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:08:35.347" endtime="20250923 10:08:35.356"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:37.358" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:35.356" endtime="20250923 10:08:37.359"/>
</kw>
<status status="PASS" starttime="20250923 10:08:35.082" endtime="20250923 10:08:37.360"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:37.363" endtime="20250923 10:08:37.377"/>
</kw>
<status status="PASS" starttime="20250923 10:08:37.361" endtime="20250923 10:08:37.377"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:38.379" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:37.377" endtime="20250923 10:08:38.379"/>
</kw>
<status status="PASS" starttime="20250923 10:08:35.080" endtime="20250923 10:08:38.379"/>
</iter>
<iter>
<var name="${priority}">LOW</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Priority_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:08:38.381" level="INFO">${timestamp} = 20250923_100838</msg>
<status status="PASS" starttime="20250923 10:08:38.380" endtime="20250923 10:08:38.381"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:38.381" level="INFO">${unique_name} = Priority_LOW_20250923_100838</msg>
<status status="PASS" starttime="20250923 10:08:38.381" endtime="20250923 10:08:38.381"/>
</kw>
<msg timestamp="20250923 10:08:38.381" level="INFO">${unique_name} = Priority_LOW_20250923_100838</msg>
<status status="PASS" starttime="20250923 10:08:38.380" endtime="20250923 10:08:38.381"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${priority} priority</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:38.381" level="INFO">${description} = Test dependency with LOW priority</msg>
<status status="PASS" starttime="20250923 10:08:38.381" endtime="20250923 10:08:38.382"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:38.384" endtime="20250923 10:08:38.399"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:38.399" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:08:38.399" endtime="20250923 10:08:38.433"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:38.433" endtime="20250923 10:08:38.444"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:38.444" endtime="20250923 10:08:38.454"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:38.454" endtime="20250923 10:08:38.463"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:38.463" endtime="20250923 10:08:38.471"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:38.472" level="INFO">Typing text 'Priority_LOW_20250923_100838' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:08:38.471" endtime="20250923 10:08:38.512"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:38.512" level="INFO">Typing text 'Test dependency with LOW priority' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:08:38.512" endtime="20250923 10:08:38.553"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:08:38.553" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:08:38.553" endtime="20250923 10:08:38.581"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:38.581" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:08:38.581" endtime="20250923 10:08:38.601"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:38.602" level="INFO">Selecting options from selection list 'id:addPriority' by value LOW.</msg>
<status status="PASS" starttime="20250923 10:08:38.601" endtime="20250923 10:08:38.634"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:08:38.634" endtime="20250923 10:08:38.635"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:38.635" endtime="20250923 10:08:38.644"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:38.645" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:08:38.645" endtime="20250923 10:08:38.677"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:08:38.677" endtime="20250923 10:08:38.686"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:40.687" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:38.686" endtime="20250923 10:08:40.687"/>
</kw>
<status status="PASS" starttime="20250923 10:08:38.382" endtime="20250923 10:08:40.687"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:40.688" endtime="20250923 10:08:40.701"/>
</kw>
<status status="PASS" starttime="20250923 10:08:40.688" endtime="20250923 10:08:40.701"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:41.702" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:40.701" endtime="20250923 10:08:41.702"/>
</kw>
<status status="PASS" starttime="20250923 10:08:38.380" endtime="20250923 10:08:41.702"/>
</iter>
<status status="PASS" starttime="20250923 10:08:31.595" endtime="20250923 10:08:41.702"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:08:41.705" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:08:41.704" endtime="20250923 10:08:41.712"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:42.714" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:41.713" endtime="20250923 10:08:42.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:08:42.715" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:08:42.715" endtime="20250923 10:08:42.715"/>
</kw>
<status status="PASS" starttime="20250923 10:08:41.703" endtime="20250923 10:08:42.715"/>
</kw>
<status status="PASS" starttime="20250923 10:08:41.703" endtime="20250923 10:08:42.715"/>
</kw>
<doc>Test creating dependencies with all priority levels</doc>
<tag>comprehensive</tag>
<tag>crud</tag>
<tag>priority</tag>
<status status="PASS" starttime="20250923 10:08:27.531" endtime="20250923 10:08:42.716"/>
</test>
<test id="s1-t22" name="TC025 - Verify Counter Updates After CRUD Operations" line="383">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:08:42.719" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:08:42.718" endtime="20250923 10:08:42.724"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:43.726" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:42.725" endtime="20250923 10:08:43.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:08:43.726" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:08:43.726" endtime="20250923 10:08:43.726"/>
</kw>
<status status="PASS" starttime="20250923 10:08:42.718" endtime="20250923 10:08:43.727"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:43.727" endtime="20250923 10:08:43.737"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:44.739" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:43.737" endtime="20250923 10:08:44.739"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:08:44.741" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:08:44.740" endtime="20250923 10:08:44.752"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:46.754" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:44.752" endtime="20250923 10:08:46.755"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:46.755" endtime="20250923 10:08:46.772"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:46.772" endtime="20250923 10:08:46.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:08:46.783" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:08:46.783" endtime="20250923 10:08:46.783"/>
</kw>
<status status="PASS" starttime="20250923 10:08:43.727" endtime="20250923 10:08:46.783"/>
</kw>
<status status="PASS" starttime="20250923 10:08:43.727" endtime="20250923 10:08:46.783"/>
</kw>
<status status="PASS" starttime="20250923 10:08:42.717" endtime="20250923 10:08:46.783"/>
</kw>
<kw name="Get Counter Value" library="depflow_keywords">
<var>${initial_count}</var>
<arg>${TOTAL_COUNT}</arg>
<doc>Gets the numeric value from a counter element</doc>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${counter_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:46.798" level="INFO">${text} = 5</msg>
<status status="PASS" starttime="20250923 10:08:46.784" endtime="20250923 10:08:46.798"/>
</kw>
<msg timestamp="20250923 10:08:46.798" level="INFO">${initial_count} = 5</msg>
<status status="PASS" starttime="20250923 10:08:46.783" endtime="20250923 10:08:46.798"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>CounterTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:08:46.798" level="INFO">${timestamp} = 20250923_100846</msg>
<status status="PASS" starttime="20250923 10:08:46.798" endtime="20250923 10:08:46.798"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:46.798" level="INFO">${unique_name} = CounterTest_20250923_100846</msg>
<status status="PASS" starttime="20250923 10:08:46.798" endtime="20250923 10:08:46.798"/>
</kw>
<msg timestamp="20250923 10:08:46.798" level="INFO">${dep_name} = CounterTest_20250923_100846</msg>
<status status="PASS" starttime="20250923 10:08:46.798" endtime="20250923 10:08:46.798"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>Test for counter updates</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:46.799" endtime="20250923 10:08:46.807"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:46.808" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:08:46.807" endtime="20250923 10:08:46.830"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:46.831" endtime="20250923 10:08:47.057"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:47.057" endtime="20250923 10:08:47.068"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:47.068" endtime="20250923 10:08:47.077"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:47.077" endtime="20250923 10:08:47.085"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:47.085" level="INFO">Typing text 'CounterTest_20250923_100846' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:08:47.085" endtime="20250923 10:08:47.122"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:47.122" level="INFO">Typing text 'Test for counter updates' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:08:47.122" endtime="20250923 10:08:47.156"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:08:47.156" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:08:47.156" endtime="20250923 10:08:47.185"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:47.185" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:08:47.185" endtime="20250923 10:08:47.201"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:47.202" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:08:47.201" endtime="20250923 10:08:47.217"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:08:47.217" endtime="20250923 10:08:47.218"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:47.218" endtime="20250923 10:08:47.226"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:47.227" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:08:47.226" endtime="20250923 10:08:47.253"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:08:47.253" endtime="20250923 10:08:47.260"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:49.262" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:47.261" endtime="20250923 10:08:49.262"/>
</kw>
<status status="PASS" starttime="20250923 10:08:46.798" endtime="20250923 10:08:49.262"/>
</kw>
<kw name="Get Counter Value" library="depflow_keywords">
<var>${after_add_count}</var>
<arg>${TOTAL_COUNT}</arg>
<doc>Gets the numeric value from a counter element</doc>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${counter_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:49.278" level="INFO">${text} = 6</msg>
<status status="PASS" starttime="20250923 10:08:49.263" endtime="20250923 10:08:49.278"/>
</kw>
<msg timestamp="20250923 10:08:49.278" level="INFO">${after_add_count} = 6</msg>
<status status="PASS" starttime="20250923 10:08:49.263" endtime="20250923 10:08:49.278"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_count}</var>
<arg>${initial_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250923 10:08:49.279" level="INFO">${expected_count} = 6</msg>
<status status="PASS" starttime="20250923 10:08:49.278" endtime="20250923 10:08:49.279"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${after_add_count}</arg>
<arg>${expected_count}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250923 10:08:49.279" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20250923 10:08:49.279" endtime="20250923 10:08:49.279"/>
</kw>
<kw name="Delete Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with updated div-based selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:49.280" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'CounterTest_20250923_100846')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:08:49.279" endtime="20250923 10:08:49.280"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:49.280" endtime="20250923 10:08:49.293"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:49.293" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'CounterTest_20250923_100846')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:08:49.293" endtime="20250923 10:08:49.293"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:49.293" endtime="20250923 10:08:49.304"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:49.305" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'CounterTest_20250923_100846')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:08:49.304" endtime="20250923 10:08:49.427"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:08:49.428" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:08:49.428" endtime="20250923 10:08:49.442"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:51.444" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:49.442" endtime="20250923 10:08:51.445"/>
</kw>
<status status="PASS" starttime="20250923 10:08:49.279" endtime="20250923 10:08:51.445"/>
</kw>
<kw name="Get Counter Value" library="depflow_keywords">
<var>${after_delete_count}</var>
<arg>${TOTAL_COUNT}</arg>
<doc>Gets the numeric value from a counter element</doc>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${counter_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:51.458" level="INFO">${text} = 5</msg>
<status status="PASS" starttime="20250923 10:08:51.446" endtime="20250923 10:08:51.458"/>
</kw>
<msg timestamp="20250923 10:08:51.458" level="INFO">${after_delete_count} = 5</msg>
<status status="PASS" starttime="20250923 10:08:51.445" endtime="20250923 10:08:51.458"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${after_delete_count}</arg>
<arg>${initial_count}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="PASS" starttime="20250923 10:08:51.459" endtime="20250923 10:08:51.459"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:08:51.459" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:08:51.459" endtime="20250923 10:08:51.465"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:52.466" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:51.465" endtime="20250923 10:08:52.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:08:52.467" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:08:52.467" endtime="20250923 10:08:52.467"/>
</kw>
<status status="PASS" starttime="20250923 10:08:51.459" endtime="20250923 10:08:52.467"/>
</kw>
<status status="PASS" starttime="20250923 10:08:51.459" endtime="20250923 10:08:52.467"/>
</kw>
<doc>Test that counters update correctly after CRUD operations</doc>
<tag>counters</tag>
<tag>crud</tag>
<tag>integration</tag>
<status status="PASS" starttime="20250923 10:08:42.716" endtime="20250923 10:08:52.467"/>
</test>
<test id="s1-t23" name="TC026 - Add Dependency With Special Characters" line="406">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:08:52.468" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:08:52.468" endtime="20250923 10:08:52.471"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:53.471" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:52.471" endtime="20250923 10:08:53.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:08:53.472" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:08:53.471" endtime="20250923 10:08:53.472"/>
</kw>
<status status="PASS" starttime="20250923 10:08:52.468" endtime="20250923 10:08:53.472"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:53.472" endtime="20250923 10:08:53.480"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:54.481" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:53.481" endtime="20250923 10:08:54.481"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:08:54.483" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:08:54.482" endtime="20250923 10:08:54.493"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:56.494" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:54.494" endtime="20250923 10:08:56.494"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:56.495" endtime="20250923 10:08:56.509"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:56.509" endtime="20250923 10:08:56.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:08:56.519" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:08:56.518" endtime="20250923 10:08:56.519"/>
</kw>
<status status="PASS" starttime="20250923 10:08:53.472" endtime="20250923 10:08:56.519"/>
</kw>
<status status="PASS" starttime="20250923 10:08:53.472" endtime="20250923 10:08:56.519"/>
</kw>
<status status="PASS" starttime="20250923 10:08:52.468" endtime="20250923 10:08:56.519"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${special_name}</var>
<arg>Test-Dep_With@Special#Chars!</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:56.520" level="INFO">${special_name} = Test-Dep_With@Special#Chars!</msg>
<status status="PASS" starttime="20250923 10:08:56.520" endtime="20250923 10:08:56.520"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${special_desc}</var>
<arg>Description with special chars: @#$%^&amp;*()_+-={}[]|\\:";'&lt;&gt;?,./</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:08:56.520" level="INFO">${special_desc} = Description with special chars: @#$%^&amp;*()_+-={}[]|\:";'&lt;&gt;?,./</msg>
<status status="PASS" starttime="20250923 10:08:56.520" endtime="20250923 10:08:56.520"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${special_name}</arg>
<arg>${special_desc}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:56.521" endtime="20250923 10:08:56.529"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:56.530" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:08:56.529" endtime="20250923 10:08:56.554"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:56.554" endtime="20250923 10:08:56.591"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:56.592" endtime="20250923 10:08:56.604"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:56.604" endtime="20250923 10:08:56.617"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:56.617" endtime="20250923 10:08:56.628"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:56.628" level="INFO">Typing text 'Test-Dep_With@Special#Chars!' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:08:56.628" endtime="20250923 10:08:56.665"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:56.666" level="INFO">Typing text 'Description with special chars: @#$%^&amp;*()_+-={}[]|\:";'&lt;&gt;?,./' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:08:56.665" endtime="20250923 10:08:56.711"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:08:56.712" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:08:56.711" endtime="20250923 10:08:56.739"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:56.740" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:08:56.739" endtime="20250923 10:08:56.754"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:08:56.754" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:08:56.754" endtime="20250923 10:08:56.768"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:08:56.768" endtime="20250923 10:08:56.769"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:08:56.769" endtime="20250923 10:08:56.775"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:08:56.776" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:08:56.776" endtime="20250923 10:08:56.801"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:08:56.801" endtime="20250923 10:08:56.810"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:58.811" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:08:56.810" endtime="20250923 10:08:58.811"/>
</kw>
<status status="PASS" starttime="20250923 10:08:56.520" endtime="20250923 10:08:58.811"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${special_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:08:58.812" endtime="20250923 10:08:58.824"/>
</kw>
<status status="PASS" starttime="20250923 10:08:58.811" endtime="20250923 10:08:58.824"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:08:58.826" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:08:58.825" endtime="20250923 10:08:58.831"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:08:59.832" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:58.831" endtime="20250923 10:08:59.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:08:59.834" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:08:59.833" endtime="20250923 10:08:59.834"/>
</kw>
<status status="PASS" starttime="20250923 10:08:58.825" endtime="20250923 10:08:59.834"/>
</kw>
<status status="PASS" starttime="20250923 10:08:58.825" endtime="20250923 10:08:59.834"/>
</kw>
<doc>Test creating dependency with special characters in name and description</doc>
<tag>crud</tag>
<tag>edge_case</tag>
<tag>special_characters</tag>
<status status="PASS" starttime="20250923 10:08:52.467" endtime="20250923 10:08:59.834"/>
</test>
<test id="s1-t24" name="TC027 - Add Dependency With Long Text" line="416">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:08:59.836" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:08:59.836" endtime="20250923 10:08:59.842"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:09:00.843" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:08:59.842" endtime="20250923 10:09:00.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:09:00.844" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:09:00.843" endtime="20250923 10:09:00.844"/>
</kw>
<status status="PASS" starttime="20250923 10:08:59.835" endtime="20250923 10:09:00.844"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:09:00.844" endtime="20250923 10:09:00.853"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:09:01.855" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:09:00.853" endtime="20250923 10:09:01.855"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:09:01.856" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:09:01.856" endtime="20250923 10:09:01.868"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:09:03.871" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:09:01.869" endtime="20250923 10:09:03.871"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:03.872" endtime="20250923 10:09:03.884"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:03.885" endtime="20250923 10:09:03.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:09:03.894" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:09:03.894" endtime="20250923 10:09:03.894"/>
</kw>
<status status="PASS" starttime="20250923 10:09:00.844" endtime="20250923 10:09:03.894"/>
</kw>
<status status="PASS" starttime="20250923 10:09:00.844" endtime="20250923 10:09:03.894"/>
</kw>
<status status="PASS" starttime="20250923 10:08:59.835" endtime="20250923 10:09:03.894"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${long_name}</var>
<arg>'Very Long Dependency Name That Exceeds Normal Length To Test Field Boundaries' * 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250923 10:09:03.895" level="INFO">${long_name} = Very Long Dependency Name That Exceeds Normal Length To Test Field BoundariesVery Long Dependency Name That Exceeds Normal Length To Test Field Boundaries</msg>
<status status="PASS" starttime="20250923 10:09:03.894" endtime="20250923 10:09:03.895"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${long_desc}</var>
<arg>'This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. ' * 3</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250923 10:09:03.895" level="INFO">${long_desc} = This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. This is a very long description that tests the maximum length bou...</msg>
<status status="PASS" starttime="20250923 10:09:03.895" endtime="20250923 10:09:03.895"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${long_name}</arg>
<arg>${long_desc}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:03.896" endtime="20250923 10:09:03.905"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:03.906" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:09:03.906" endtime="20250923 10:09:03.932"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:03.932" endtime="20250923 10:09:04.154"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:04.154" endtime="20250923 10:09:04.164"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:04.164" endtime="20250923 10:09:04.173"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:04.173" endtime="20250923 10:09:04.180"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:04.181" level="INFO">Typing text 'Very Long Dependency Name That Exceeds Normal Length To Test Field BoundariesVery Long Dependency Name That Exceeds Normal Length To Test Field Boundaries' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:09:04.180" endtime="20250923 10:09:04.241"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:04.242" level="INFO">Typing text 'This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. ' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:09:04.241" endtime="20250923 10:09:04.356"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:09:04.357" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:09:04.356" endtime="20250923 10:09:04.376"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:09:04.376" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:09:04.376" endtime="20250923 10:09:04.387"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:09:04.387" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:09:04.387" endtime="20250923 10:09:04.397"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:09:04.397" endtime="20250923 10:09:04.398"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:04.398" endtime="20250923 10:09:04.404"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:04.404" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:09:04.404" endtime="20250923 10:09:04.427"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:09:04.427" endtime="20250923 10:09:04.433"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:09:06.434" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:09:04.433" endtime="20250923 10:09:06.434"/>
</kw>
<status status="PASS" starttime="20250923 10:09:03.895" endtime="20250923 10:09:06.435"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${long_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<msg timestamp="20250923 10:09:16.945" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-15.png"&gt;&lt;img src="selenium-screenshot-15.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 10:09:16.945" level="FAIL">Element 'xpath://div[@class='dependency-name' and contains(text(), 'Very Long Dependency Name That Exceeds Normal Length To Test Field BoundariesVery Long Dependency Name That Exceeds Normal Length To Test Field Boundaries')]' did not appear in 10 seconds.</msg>
<status status="FAIL" starttime="20250923 10:09:06.436" endtime="20250923 10:09:16.946"/>
</kw>
<status status="FAIL" starttime="20250923 10:09:06.435" endtime="20250923 10:09:16.946"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:09:16.947" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:09:16.946" endtime="20250923 10:09:16.951"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:09:17.952" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:09:16.951" endtime="20250923 10:09:17.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:09:17.952" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:09:17.952" endtime="20250923 10:09:17.952"/>
</kw>
<status status="PASS" starttime="20250923 10:09:16.946" endtime="20250923 10:09:17.953"/>
</kw>
<status status="PASS" starttime="20250923 10:09:16.946" endtime="20250923 10:09:17.953"/>
</kw>
<doc>Test creating dependency with maximum length text fields</doc>
<tag>boundary</tag>
<tag>crud</tag>
<tag>edge_case</tag>
<status status="FAIL" starttime="20250923 10:08:59.834" endtime="20250923 10:09:17.953">Element 'xpath://div[@class='dependency-name' and contains(text(), 'Very Long Dependency Name That Exceeds Normal Length To Test Field BoundariesVery Long Dependency Name That Exceeds Normal Length To Test Field Boundaries')]' did not appear in 10 seconds.</status>
</test>
<test id="s1-t25" name="TC028 - Bulk Delete Dependencies" line="426">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:09:17.956" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:09:17.955" endtime="20250923 10:09:17.961"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:09:18.961" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:09:17.961" endtime="20250923 10:09:18.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:09:18.962" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:09:18.962" endtime="20250923 10:09:18.962"/>
</kw>
<status status="PASS" starttime="20250923 10:09:17.955" endtime="20250923 10:09:18.962"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 10:09:18.963" endtime="20250923 10:09:18.971"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:09:19.974" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:09:18.971" endtime="20250923 10:09:19.974"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:09:19.975" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:09:19.974" endtime="20250923 10:09:19.987"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:09:21.989" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:09:19.987" endtime="20250923 10:09:21.990"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:21.990" endtime="20250923 10:09:22.004"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:22.005" endtime="20250923 10:09:22.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:09:22.014" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 10:09:22.014" endtime="20250923 10:09:22.015"/>
</kw>
<status status="PASS" starttime="20250923 10:09:18.963" endtime="20250923 10:09:22.015"/>
</kw>
<status status="PASS" starttime="20250923 10:09:18.962" endtime="20250923 10:09:22.015"/>
</kw>
<status status="PASS" starttime="20250923 10:09:17.954" endtime="20250923 10:09:22.015"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{dep_names}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250923 10:09:22.015" level="INFO">@{dep_names} = [ ]</msg>
<status status="PASS" starttime="20250923 10:09:22.015" endtime="20250923 10:09:22.015"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>3</value>
<iter>
<var name="${i}">0</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>BulkDelete_${i}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:09:22.016" level="INFO">${timestamp} = 20250923_100922</msg>
<status status="PASS" starttime="20250923 10:09:22.016" endtime="20250923 10:09:22.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:09:22.017" level="INFO">${unique_name} = BulkDelete_0_20250923_100922</msg>
<status status="PASS" starttime="20250923 10:09:22.016" endtime="20250923 10:09:22.017"/>
</kw>
<msg timestamp="20250923 10:09:22.017" level="INFO">${dep_name} = BulkDelete_0_20250923_100922</msg>
<status status="PASS" starttime="20250923 10:09:22.016" endtime="20250923 10:09:22.017"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${dep_names}</arg>
<arg>${dep_name}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250923 10:09:22.017" endtime="20250923 10:09:22.017"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>Bulk delete test dependency ${i}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:22.018" endtime="20250923 10:09:22.028"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:22.028" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:09:22.028" endtime="20250923 10:09:22.051"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:22.051" endtime="20250923 10:09:22.273"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:22.273" endtime="20250923 10:09:22.284"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:22.284" endtime="20250923 10:09:22.293"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:22.293" endtime="20250923 10:09:22.301"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:22.301" level="INFO">Typing text 'BulkDelete_0_20250923_100922' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:09:22.301" endtime="20250923 10:09:22.336"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:22.336" level="INFO">Typing text 'Bulk delete test dependency 0' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:09:22.336" endtime="20250923 10:09:22.369"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:09:22.370" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:09:22.369" endtime="20250923 10:09:22.394"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:09:22.395" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:09:22.394" endtime="20250923 10:09:22.410"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:09:22.410" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:09:22.410" endtime="20250923 10:09:22.424"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:09:22.424" endtime="20250923 10:09:22.425"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:22.425" endtime="20250923 10:09:22.432"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:22.432" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:09:22.432" endtime="20250923 10:09:22.457"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:09:22.457" endtime="20250923 10:09:22.468"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:09:24.470" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:09:22.468" endtime="20250923 10:09:24.471"/>
</kw>
<status status="PASS" starttime="20250923 10:09:22.017" endtime="20250923 10:09:24.471"/>
</kw>
<status status="PASS" starttime="20250923 10:09:22.016" endtime="20250923 10:09:24.471"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>BulkDelete_${i}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:09:24.472" level="INFO">${timestamp} = 20250923_100924</msg>
<status status="PASS" starttime="20250923 10:09:24.472" endtime="20250923 10:09:24.472"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:09:24.473" level="INFO">${unique_name} = BulkDelete_1_20250923_100924</msg>
<status status="PASS" starttime="20250923 10:09:24.472" endtime="20250923 10:09:24.473"/>
</kw>
<msg timestamp="20250923 10:09:24.473" level="INFO">${dep_name} = BulkDelete_1_20250923_100924</msg>
<status status="PASS" starttime="20250923 10:09:24.471" endtime="20250923 10:09:24.473"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${dep_names}</arg>
<arg>${dep_name}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250923 10:09:24.473" endtime="20250923 10:09:24.473"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>Bulk delete test dependency ${i}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:24.475" endtime="20250923 10:09:24.489"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:24.489" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:09:24.489" endtime="20250923 10:09:24.516"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:24.516" endtime="20250923 10:09:24.740"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:24.740" endtime="20250923 10:09:24.750"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:24.751" endtime="20250923 10:09:24.759"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:24.759" endtime="20250923 10:09:24.767"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:24.768" level="INFO">Typing text 'BulkDelete_1_20250923_100924' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:09:24.767" endtime="20250923 10:09:24.801"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:24.801" level="INFO">Typing text 'Bulk delete test dependency 1' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:09:24.801" endtime="20250923 10:09:24.836"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:09:24.836" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:09:24.836" endtime="20250923 10:09:24.861"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:09:24.862" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:09:24.861" endtime="20250923 10:09:24.875"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:09:24.876" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:09:24.876" endtime="20250923 10:09:24.889"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:09:24.889" endtime="20250923 10:09:24.890"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:24.890" endtime="20250923 10:09:24.897"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:24.897" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:09:24.897" endtime="20250923 10:09:24.920"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:09:24.920" endtime="20250923 10:09:24.928"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:09:26.931" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:09:24.928" endtime="20250923 10:09:26.931"/>
</kw>
<status status="PASS" starttime="20250923 10:09:24.473" endtime="20250923 10:09:26.931"/>
</kw>
<status status="PASS" starttime="20250923 10:09:24.471" endtime="20250923 10:09:26.931"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>BulkDelete_${i}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 10:09:26.933" level="INFO">${timestamp} = 20250923_100926</msg>
<status status="PASS" starttime="20250923 10:09:26.933" endtime="20250923 10:09:26.933"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:09:26.934" level="INFO">${unique_name} = BulkDelete_2_20250923_100926</msg>
<status status="PASS" starttime="20250923 10:09:26.933" endtime="20250923 10:09:26.934"/>
</kw>
<msg timestamp="20250923 10:09:26.934" level="INFO">${dep_name} = BulkDelete_2_20250923_100926</msg>
<status status="PASS" starttime="20250923 10:09:26.932" endtime="20250923 10:09:26.934"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${dep_names}</arg>
<arg>${dep_name}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250923 10:09:26.934" endtime="20250923 10:09:26.934"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>Bulk delete test dependency ${i}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:26.937" endtime="20250923 10:09:26.951"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:26.952" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 10:09:26.951" endtime="20250923 10:09:26.979"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:26.979" endtime="20250923 10:09:26.989"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:26.989" endtime="20250923 10:09:26.997"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:26.997" endtime="20250923 10:09:27.005"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:27.005" endtime="20250923 10:09:27.012"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:27.013" level="INFO">Typing text 'BulkDelete_2_20250923_100926' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 10:09:27.012" endtime="20250923 10:09:27.047"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:27.048" level="INFO">Typing text 'Bulk delete test dependency 2' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 10:09:27.047" endtime="20250923 10:09:27.087"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 10:09:27.088" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 10:09:27.087" endtime="20250923 10:09:27.123"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:09:27.124" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 10:09:27.123" endtime="20250923 10:09:27.143"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 10:09:27.143" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 10:09:27.143" endtime="20250923 10:09:27.160"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 10:09:27.161" endtime="20250923 10:09:27.161"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:27.161" endtime="20250923 10:09:27.170"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:27.171" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 10:09:27.170" endtime="20250923 10:09:27.203"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 10:09:27.204" endtime="20250923 10:09:27.214"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:09:29.215" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:09:27.214" endtime="20250923 10:09:29.215"/>
</kw>
<status status="PASS" starttime="20250923 10:09:26.934" endtime="20250923 10:09:29.215"/>
</kw>
<status status="PASS" starttime="20250923 10:09:26.932" endtime="20250923 10:09:29.216"/>
</iter>
<status status="PASS" starttime="20250923 10:09:22.015" endtime="20250923 10:09:29.216"/>
</for>
<for flavor="IN">
<var>${dep_name}</var>
<value>@{dep_names}</value>
<iter>
<var name="${dep_name}">BulkDelete_0_20250923_100922</var>
<kw name="Delete Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with updated div-based selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:09:29.218" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_0_20250923_100922')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:09:29.217" endtime="20250923 10:09:29.218"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:29.218" endtime="20250923 10:09:29.240"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:09:29.241" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_0_20250923_100922')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:09:29.240" endtime="20250923 10:09:29.241"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:29.241" endtime="20250923 10:09:29.254"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:29.255" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_0_20250923_100922')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:09:29.254" endtime="20250923 10:09:29.297"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:09:29.298" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:09:29.297" endtime="20250923 10:09:29.302"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:09:31.304" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:09:29.303" endtime="20250923 10:09:31.305"/>
</kw>
<status status="PASS" starttime="20250923 10:09:29.216" endtime="20250923 10:09:31.305"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<msg timestamp="20250923 10:09:41.318" level="INFO">Current page does not contain element 'xpath://div[@class='dependency-name' and contains(text(), 'BulkDelete_0_20250923_100922')]'.</msg>
<status status="PASS" starttime="20250923 10:09:31.307" endtime="20250923 10:09:41.318"/>
</kw>
<status status="PASS" starttime="20250923 10:09:31.305" endtime="20250923 10:09:41.318"/>
</kw>
<status status="PASS" starttime="20250923 10:09:29.216" endtime="20250923 10:09:41.318"/>
</iter>
<iter>
<var name="${dep_name}">BulkDelete_1_20250923_100924</var>
<kw name="Delete Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with updated div-based selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:09:41.319" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_1_20250923_100924')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:09:41.318" endtime="20250923 10:09:41.319"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:41.319" endtime="20250923 10:09:41.334"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:09:41.335" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_1_20250923_100924')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:09:41.335" endtime="20250923 10:09:41.335"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:41.336" endtime="20250923 10:09:41.347"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:41.347" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_1_20250923_100924')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:09:41.347" endtime="20250923 10:09:41.396"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:09:41.397" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:09:41.396" endtime="20250923 10:09:41.420"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:09:43.423" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:09:41.421" endtime="20250923 10:09:43.424"/>
</kw>
<status status="PASS" starttime="20250923 10:09:41.318" endtime="20250923 10:09:43.424"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<msg timestamp="20250923 10:09:53.482" level="INFO">Current page does not contain element 'xpath://div[@class='dependency-name' and contains(text(), 'BulkDelete_1_20250923_100924')]'.</msg>
<status status="PASS" starttime="20250923 10:09:43.424" endtime="20250923 10:09:53.484"/>
</kw>
<status status="PASS" starttime="20250923 10:09:43.424" endtime="20250923 10:09:53.487"/>
</kw>
<status status="PASS" starttime="20250923 10:09:41.318" endtime="20250923 10:09:53.487"/>
</iter>
<iter>
<var name="${dep_name}">BulkDelete_2_20250923_100926</var>
<kw name="Delete Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with updated div-based selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:09:53.489" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_2_20250923_100926')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 10:09:53.489" endtime="20250923 10:09:53.489"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:53.489" endtime="20250923 10:09:53.504"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>${dependency_row}//button[@class='btn-delete']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 10:09:53.505" level="INFO">${delete_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_2_20250923_100926')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']</msg>
<status status="PASS" starttime="20250923 10:09:53.504" endtime="20250923 10:09:53.505"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 10:09:53.505" endtime="20250923 10:09:53.515"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 10:09:53.515" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'BulkDelete_2_20250923_100926')]/ancestor::div[@class='dependency-row']//button[@class='btn-delete']'.</msg>
<status status="PASS" starttime="20250923 10:09:53.515" endtime="20250923 10:09:53.552"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20250923 10:09:53.552" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<status status="PASS" starttime="20250923 10:09:53.552" endtime="20250923 10:09:53.556"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:09:55.559" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 10:09:53.556" endtime="20250923 10:09:55.559"/>
</kw>
<status status="PASS" starttime="20250923 10:09:53.488" endtime="20250923 10:09:55.559"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<msg timestamp="20250923 10:10:05.579" level="INFO">Current page does not contain element 'xpath://div[@class='dependency-name' and contains(text(), 'BulkDelete_2_20250923_100926')]'.</msg>
<status status="PASS" starttime="20250923 10:09:55.560" endtime="20250923 10:10:05.579"/>
</kw>
<status status="PASS" starttime="20250923 10:09:55.559" endtime="20250923 10:10:05.579"/>
</kw>
<status status="PASS" starttime="20250923 10:09:53.487" endtime="20250923 10:10:05.579"/>
</iter>
<status status="PASS" starttime="20250923 10:09:29.216" endtime="20250923 10:10:05.579"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:10:05.581" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:10:05.580" endtime="20250923 10:10:05.587"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:10:06.589" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:10:05.588" endtime="20250923 10:10:06.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:10:06.590" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:10:06.590" endtime="20250923 10:10:06.591"/>
</kw>
<status status="PASS" starttime="20250923 10:10:05.580" endtime="20250923 10:10:06.591"/>
</kw>
<status status="PASS" starttime="20250923 10:10:05.580" endtime="20250923 10:10:06.591"/>
</kw>
<doc>Test deleting multiple dependencies in sequence</doc>
<tag>bulk</tag>
<tag>crud</tag>
<tag>delete</tag>
<status status="PASS" starttime="20250923 10:09:17.954" endtime="20250923 10:10:06.591"/>
</test>
<kw name="Test Mode Suite Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 10:10:06.597" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 10:10:06.596" endtime="20250923 10:10:06.602"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 10:10:07.603" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 10:10:06.602" endtime="20250923 10:10:07.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 10:10:07.603" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 10:10:07.603" endtime="20250923 10:10:07.603"/>
</kw>
<status status="PASS" starttime="20250923 10:10:06.596" endtime="20250923 10:10:07.603"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 10:10:07.603" endtime="20250923 10:10:07.836"/>
</kw>
<status status="PASS" starttime="20250923 10:10:07.603" endtime="20250923 10:10:07.836"/>
</kw>
<status status="PASS" starttime="20250923 10:10:06.595" endtime="20250923 10:10:07.836"/>
</kw>
<doc>Dependency CRUD Operations Test Suite for DepFlow Application</doc>
<status status="FAIL" starttime="20250923 10:02:43.851" endtime="20250923 10:10:07.836"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="15" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="2" skip="0">admin</stat>
<stat pass="0" fail="1" skip="0">boundary</stat>
<stat pass="1" fail="0" skip="0">bulk</stat>
<stat pass="1" fail="1" skip="0">cancel</stat>
<stat pass="0" fail="2" skip="0">colors</stat>
<stat pass="3" fail="0" skip="0">comprehensive</stat>
<stat pass="1" fail="1" skip="0">confirmation</stat>
<stat pass="1" fail="0" skip="0">counters</stat>
<stat pass="0" fail="2" skip="0">create</stat>
<stat pass="8" fail="15" skip="0">crud</stat>
<stat pass="1" fail="0" skip="0">dashboard</stat>
<stat pass="2" fail="3" skip="0">delete</stat>
<stat pass="1" fail="1" skip="0">edge_case</stat>
<stat pass="0" fail="3" skip="0">edit</stat>
<stat pass="0" fail="2" skip="0">inline_edit</stat>
<stat pass="1" fail="0" skip="0">integration</stat>
<stat pass="0" fail="1" skip="0">minimal</stat>
<stat pass="1" fail="0" skip="0">modal</stat>
<stat pass="0" fail="2" skip="0">negative</stat>
<stat pass="1" fail="2" skip="0">priority</stat>
<stat pass="0" fail="4" skip="0">rbac</stat>
<stat pass="0" fail="2" skip="0">restriction</stat>
<stat pass="2" fail="1" skip="0">smoke</stat>
<stat pass="1" fail="0" skip="0">special_characters</stat>
<stat pass="1" fail="2" skip="0">status</stat>
<stat pass="1" fail="0" skip="0">teams</stat>
<stat pass="3" fail="2" skip="0">ui</stat>
<stat pass="0" fail="3" skip="0">update</stat>
<stat pass="0" fail="2" skip="0">user</stat>
<stat pass="0" fail="2" skip="0">validation</stat>
</tag>
<suite>
<stat pass="10" fail="15" skip="0" id="s1" name="02 Dependency Crud Tests">02 Dependency Crud Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
