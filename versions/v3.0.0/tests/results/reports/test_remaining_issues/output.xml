<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20250923 11:00:31.115" rpa="false" schemaversion="4">
<suite id="s1" name="02 Dependency Crud Tests" source="/Users/mmoola/Cursor/Dependency Management App/tests/test_suites/02_dependency_crud_tests.robot">
<kw name="Test Mode Suite Setup" library="depflow_keywords" type="SETUP">
<doc>Setup using test mode authentication</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 11:00:31.351" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 11:00:31.351" endtime="20250923 11:00:34.933"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 11:00:34.934" endtime="20250923 11:00:36.320"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 11:00:36.337" endtime="20250923 11:00:36.392"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 11:00:36.393" endtime="20250923 11:00:36.488"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:39.498" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 11:00:36.489" endtime="20250923 11:00:39.499"/>
</kw>
<status status="PASS" starttime="20250923 11:00:31.351" endtime="20250923 11:00:39.501"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 11:00:39.506" endtime="20250923 11:00:39.519"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:40.521" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:00:39.519" endtime="20250923 11:00:40.521"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:00:40.527" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 11:00:40.522" endtime="20250923 11:00:40.575"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:42.576" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 11:00:40.575" endtime="20250923 11:00:42.578"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:00:42.579" endtime="20250923 11:00:42.625"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:00:42.625" endtime="20250923 11:00:42.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 11:00:42.637" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 11:00:42.636" endtime="20250923 11:00:42.637"/>
</kw>
<status status="PASS" starttime="20250923 11:00:39.506" endtime="20250923 11:00:42.637"/>
</kw>
<status status="PASS" starttime="20250923 11:00:39.504" endtime="20250923 11:00:42.637"/>
</kw>
<status status="PASS" starttime="20250923 11:00:31.351" endtime="20250923 11:00:42.637"/>
</kw>
<test id="s1-t1" name="TC017 - Validate Required Field - Name" line="82">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:00:42.639" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 11:00:42.639" endtime="20250923 11:00:42.645"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:43.650" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:00:42.645" endtime="20250923 11:00:43.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 11:00:43.654" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 11:00:43.653" endtime="20250923 11:00:43.654"/>
</kw>
<status status="PASS" starttime="20250923 11:00:42.638" endtime="20250923 11:00:43.654"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 11:00:43.659" endtime="20250923 11:00:43.677"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:44.677" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:00:43.677" endtime="20250923 11:00:44.677"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:00:44.678" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 11:00:44.677" endtime="20250923 11:00:44.684"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:46.687" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 11:00:44.685" endtime="20250923 11:00:46.687"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:00:46.687" endtime="20250923 11:00:46.701"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:00:46.702" endtime="20250923 11:00:46.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 11:00:46.713" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 11:00:46.713" endtime="20250923 11:00:46.713"/>
</kw>
<status status="PASS" starttime="20250923 11:00:43.658" endtime="20250923 11:00:46.713"/>
</kw>
<status status="PASS" starttime="20250923 11:00:43.655" endtime="20250923 11:00:46.713"/>
</kw>
<status status="PASS" starttime="20250923 11:00:42.638" endtime="20250923 11:00:46.713"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 11:00:46.714" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 11:00:46.713" endtime="20250923 11:00:46.778"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:00:46.778" endtime="20250923 11:00:46.791"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:00:46.791" endtime="20250923 11:00:46.804"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:00:46.805" endtime="20250923 11:00:46.817"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:00:46.817" endtime="20250923 11:00:46.830"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 11:00:46.830" endtime="20250923 11:00:46.846"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 11:00:46.846" endtime="20250923 11:00:46.855"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:47.858" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:00:46.855" endtime="20250923 11:00:47.858"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>Test description without name</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 11:00:47.859" level="INFO">Typing text 'Test description without name' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 11:00:47.858" endtime="20250923 11:00:48.002"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 11:00:48.003" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 11:00:48.002" endtime="20250923 11:00:48.112"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 11:00:48.113" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 11:00:48.113" endtime="20250923 11:00:48.199"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 11:00:48.212" level="INFO">Element 'id:addDependencyModal' is displayed.</msg>
<status status="PASS" starttime="20250923 11:00:48.199" endtime="20250923 11:00:48.212"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:00:48.213" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 11:00:48.213" endtime="20250923 11:00:48.221"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:49.223" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:00:48.222" endtime="20250923 11:00:49.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 11:00:49.224" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 11:00:49.224" endtime="20250923 11:00:49.225"/>
</kw>
<status status="PASS" starttime="20250923 11:00:48.212" endtime="20250923 11:00:49.225"/>
</kw>
<status status="PASS" starttime="20250923 11:00:48.212" endtime="20250923 11:00:49.225"/>
</kw>
<doc>Test that name field is required for dependency creation</doc>
<tag>crud</tag>
<tag>negative</tag>
<tag>validation</tag>
<status status="PASS" starttime="20250923 11:00:42.637" endtime="20250923 11:00:49.225"/>
</test>
<test id="s1-t2" name="TC018 - Validate Required Field - Description" line="106">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:00:49.227" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 11:00:49.227" endtime="20250923 11:00:49.233"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:50.235" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:00:49.233" endtime="20250923 11:00:50.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 11:00:50.236" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 11:00:50.236" endtime="20250923 11:00:50.236"/>
</kw>
<status status="PASS" starttime="20250923 11:00:49.227" endtime="20250923 11:00:50.236"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 11:00:50.237" endtime="20250923 11:00:50.245"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:51.246" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:00:50.245" endtime="20250923 11:00:51.247"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:00:51.248" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 11:00:51.247" endtime="20250923 11:00:51.259"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:53.262" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 11:00:51.259" endtime="20250923 11:00:53.263"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:00:53.264" endtime="20250923 11:00:53.279"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:00:53.279" endtime="20250923 11:00:53.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 11:00:53.289" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 11:00:53.289" endtime="20250923 11:00:53.289"/>
</kw>
<status status="PASS" starttime="20250923 11:00:50.236" endtime="20250923 11:00:53.289"/>
</kw>
<status status="PASS" starttime="20250923 11:00:50.236" endtime="20250923 11:00:53.289"/>
</kw>
<status status="PASS" starttime="20250923 11:00:49.226" endtime="20250923 11:00:53.289"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 11:00:53.290" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 11:00:53.290" endtime="20250923 11:00:53.318"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:00:53.318" endtime="20250923 11:00:53.541"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:00:53.541" endtime="20250923 11:00:53.549"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:00:53.549" endtime="20250923 11:00:53.556"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:00:53.557" endtime="20250923 11:00:53.564"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 11:00:53.564" endtime="20250923 11:00:53.574"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 11:00:53.575" endtime="20250923 11:00:53.584"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 11:00:53.584" endtime="20250923 11:00:53.594"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:54.595" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:00:53.594" endtime="20250923 11:00:54.595"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>Test Name</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 11:00:54.596" level="INFO">Typing text 'Test Name' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 11:00:54.595" endtime="20250923 11:00:54.635"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>Short</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 11:00:54.635" level="INFO">Typing text 'Short' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 11:00:54.635" endtime="20250923 11:00:54.664"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 11:00:54.666" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 11:00:54.665" endtime="20250923 11:00:54.694"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 11:00:54.694" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 11:00:54.694" endtime="20250923 11:00:54.738"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 11:00:55.005" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 11:00:55.005" level="FAIL">The element 'id:addDependencyModal' should be visible, but it is not.</msg>
<status status="FAIL" starttime="20250923 11:00:54.738" endtime="20250923 11:00:55.020"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:00:55.020" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 11:00:55.020" endtime="20250923 11:00:55.024"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:56.026" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:00:55.024" endtime="20250923 11:00:56.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 11:00:56.026" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 11:00:56.026" endtime="20250923 11:00:56.026"/>
</kw>
<status status="PASS" starttime="20250923 11:00:55.020" endtime="20250923 11:00:56.026"/>
</kw>
<status status="PASS" starttime="20250923 11:00:55.020" endtime="20250923 11:00:56.026"/>
</kw>
<doc>Test that description field validation works</doc>
<tag>crud</tag>
<tag>negative</tag>
<tag>validation</tag>
<status status="FAIL" starttime="20250923 11:00:49.226" endtime="20250923 11:00:56.027">The element 'id:addDependencyModal' should be visible, but it is not.</status>
</test>
<test id="s1-t3" name="TC025 - RBAC Admin Can Edit Any Dependency" line="225">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:00:56.029" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 11:00:56.028" endtime="20250923 11:00:56.034"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:57.035" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:00:56.034" endtime="20250923 11:00:57.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 11:00:57.036" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 11:00:57.036" endtime="20250923 11:00:57.036"/>
</kw>
<status status="PASS" starttime="20250923 11:00:56.028" endtime="20250923 11:00:57.036"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 11:00:57.037" endtime="20250923 11:00:57.047"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:00:58.047" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:00:57.047" endtime="20250923 11:00:58.048"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:00:58.050" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 11:00:58.048" endtime="20250923 11:00:58.062"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:01:00.064" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 11:00:58.062" endtime="20250923 11:01:00.064"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:00.065" endtime="20250923 11:01:00.081"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:00.081" endtime="20250923 11:01:00.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 11:01:00.092" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 11:01:00.092" endtime="20250923 11:01:00.092"/>
</kw>
<status status="PASS" starttime="20250923 11:00:57.037" endtime="20250923 11:01:00.092"/>
</kw>
<status status="PASS" starttime="20250923 11:00:57.036" endtime="20250923 11:01:00.092"/>
</kw>
<status status="PASS" starttime="20250923 11:00:56.028" endtime="20250923 11:01:00.092"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>AdminEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 11:01:00.093" level="INFO">${timestamp} = 20250923_110100</msg>
<status status="PASS" starttime="20250923 11:01:00.092" endtime="20250923 11:01:00.093"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 11:01:00.094" level="INFO">${unique_name} = AdminEditTest_20250923_110100</msg>
<status status="PASS" starttime="20250923 11:01:00.093" endtime="20250923 11:01:00.094"/>
</kw>
<msg timestamp="20250923 11:01:00.094" level="INFO">${dep_name} = AdminEditTest_20250923_110100</msg>
<status status="PASS" starttime="20250923 11:01:00.092" endtime="20250923 11:01:00.094"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for admin RBAC test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 11:01:00.094" level="INFO">${description} = Dependency for admin RBAC test</msg>
<status status="PASS" starttime="20250923 11:01:00.094" endtime="20250923 11:01:00.094"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:00.095" endtime="20250923 11:01:00.103"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 11:01:00.104" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 11:01:00.104" endtime="20250923 11:01:00.127"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:00.127" endtime="20250923 11:01:00.137"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:00.137" endtime="20250923 11:01:00.148"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:00.148" endtime="20250923 11:01:00.159"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:00.159" endtime="20250923 11:01:00.168"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 11:01:00.169" level="INFO">Typing text 'AdminEditTest_20250923_110100' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 11:01:00.168" endtime="20250923 11:01:00.208"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 11:01:00.209" level="INFO">Typing text 'Dependency for admin RBAC test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 11:01:00.208" endtime="20250923 11:01:00.249"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 11:01:00.250" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 11:01:00.249" endtime="20250923 11:01:00.276"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 11:01:00.276" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 11:01:00.276" endtime="20250923 11:01:00.305"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 11:01:00.305" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 11:01:00.305" endtime="20250923 11:01:00.326"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 11:01:00.326" endtime="20250923 11:01:00.327"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:00.327" endtime="20250923 11:01:00.334"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 11:01:00.335" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 11:01:00.335" endtime="20250923 11:01:00.364"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 11:01:00.365" endtime="20250923 11:01:00.377"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:01:02.379" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 11:01:00.377" endtime="20250923 11:01:02.379"/>
</kw>
<status status="PASS" starttime="20250923 11:01:00.094" endtime="20250923 11:01:02.379"/>
</kw>
<kw name="Verify Edit Button Visibility" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>True</arg>
<doc>Verifies edit button visibility based on RBAC rules with updated selectors</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 11:01:02.380" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminEditTest_20250923_110100')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 11:01:02.380" endtime="20250923 11:01:02.380"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:02.380" endtime="20250923 11:01:02.402"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${edit_button}</var>
<arg>${dependency_row}//button[@class='btn-edit']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 11:01:02.402" level="INFO">${edit_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminEditTest_20250923_110100')]/ancestor::div[@class='dependency-row']//button[@class='btn-edit']</msg>
<status status="PASS" starttime="20250923 11:01:02.402" endtime="20250923 11:01:02.402"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${should_be_visible}</arg>
<arg>Element Should Be Visible</arg>
<arg>${edit_button}</arg>
<arg>ELSE</arg>
<arg>Element Should Not Be Visible</arg>
<arg>${edit_button}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 11:01:02.414" level="INFO">Element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminEditTest_20250923_110100')]/ancestor::div[@class='dependency-row']//button[@class='btn-edit']' is displayed.</msg>
<status status="PASS" starttime="20250923 11:01:02.403" endtime="20250923 11:01:02.414"/>
</kw>
<status status="PASS" starttime="20250923 11:01:02.402" endtime="20250923 11:01:02.414"/>
</kw>
<status status="PASS" starttime="20250923 11:01:02.379" endtime="20250923 11:01:02.414"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_name}</var>
<arg>${dep_name}_AdminEdited</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 11:01:02.414" level="INFO">${new_name} = AdminEditTest_20250923_110100_AdminEdited</msg>
<status status="PASS" starttime="20250923 11:01:02.414" endtime="20250923 11:01:02.414"/>
</kw>
<kw name="Edit Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${new_name}</arg>
<doc>Edits an existing dependency with updated div-based selectors</doc>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:01:04.419" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 11:01:02.417" endtime="20250923 11:01:04.419"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dependency_row}</var>
<arg>xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), '${dependency_name}')]/ancestor::div[@class='dependency-row']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 11:01:04.420" level="INFO">${dependency_row} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminEditTest_20250923_110100')]/ancestor::div[@class='dependency-row']</msg>
<status status="PASS" starttime="20250923 11:01:04.419" endtime="20250923 11:01:04.420"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:04.420" endtime="20250923 11:01:04.436"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${dependency_row}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20250923 11:01:04.436" endtime="20250923 11:01:04.713"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:01:05.715" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:01:04.714" endtime="20250923 11:01:05.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${edit_button}</var>
<arg>${dependency_row}//button[@class='btn-edit']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 11:01:05.716" level="INFO">${edit_button} = xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminEditTest_20250923_110100')]/ancestor::div[@class='dependency-row']//button[@class='btn-edit']</msg>
<status status="PASS" starttime="20250923 11:01:05.715" endtime="20250923 11:01:05.716"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:05.716" endtime="20250923 11:01:05.731"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 11:01:05.731" endtime="20250923 11:01:05.746"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:01:06.247" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20250923 11:01:05.746" endtime="20250923 11:01:06.248"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 11:01:06.249" level="INFO">Clicking element 'xpath://div[@class='dependency-row']//div[@class='dependency-name' and contains(text(), 'AdminEditTest_20250923_110100')]/ancestor::div[@class='dependency-row']//button[@class='btn-edit']'.</msg>
<status status="PASS" starttime="20250923 11:01:06.248" endtime="20250923 11:01:06.290"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:06.290" endtime="20250923 11:01:06.521"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${EDIT_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:06.521" endtime="20250923 11:01:06.534"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${EDIT_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:06.534" endtime="20250923 11:01:06.545"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${EDIT_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:06.545" endtime="20250923 11:01:06.555"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 11:01:06.555" endtime="20250923 11:01:06.566"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 11:01:06.567" endtime="20250923 11:01:06.577"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20250923 11:01:06.577" endtime="20250923 11:01:06.586"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:01:07.587" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:01:06.586" endtime="20250923 11:01:07.588"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_name}' != '${EMPTY}'</arg>
<arg>Clear Element Text And Input</arg>
<arg>${EDIT_NAME_FIELD}</arg>
<arg>${new_name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Clear Element Text And Input" library="depflow_keywords">
<arg>${EDIT_NAME_FIELD}</arg>
<arg>${new_name}</arg>
<doc>Clears element text and inputs new text</doc>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${element}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 11:01:07.591" endtime="20250923 11:01:07.615"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 11:01:07.615" level="INFO">Typing text 'AdminEditTest_20250923_110100_AdminEdited' into text field 'id:editName'.</msg>
<status status="PASS" starttime="20250923 11:01:07.615" endtime="20250923 11:01:07.659"/>
</kw>
<status status="PASS" starttime="20250923 11:01:07.590" endtime="20250923 11:01:07.659"/>
</kw>
<status status="PASS" starttime="20250923 11:01:07.588" endtime="20250923 11:01:07.659"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_description}' != '${EMPTY}'</arg>
<arg>Clear Element Text And Input</arg>
<arg>${EDIT_DESCRIPTION_FIELD}</arg>
<arg>${new_description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 11:01:07.659" endtime="20250923 11:01:07.660"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_team}' != '${EMPTY}'</arg>
<arg>Select From List By Label</arg>
<arg>${EDIT_TEAM_SELECT}</arg>
<arg>${new_team}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 11:01:07.660" endtime="20250923 11:01:07.660"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_status}' != '${EMPTY}'</arg>
<arg>Select From List By Value</arg>
<arg>${EDIT_STATUS_SELECT}</arg>
<arg>${new_status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 11:01:07.660" endtime="20250923 11:01:07.661"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_priority}' != '${EMPTY}'</arg>
<arg>Select From List By Value</arg>
<arg>${EDIT_PRIORITY_SELECT}</arg>
<arg>${new_priority}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 11:01:07.661" endtime="20250923 11:01:07.661"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 11:01:07.662" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-submit')]'.</msg>
<msg timestamp="20250923 11:01:18.266" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 11:01:18.270" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000104c9f418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000104c973b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x00000001047c0ec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x000000010480942c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x00000001047fe220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x00000001047fdcac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000104849604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x00000001047fc0d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000104c63b08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000104c66d20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000104c44e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000104c675cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000104c3659c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000104c869f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000104c86b70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000104c97000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 11:01:07.662" endtime="20250923 11:01:18.334"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 11:01:18.334" endtime="20250923 11:01:18.334"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 11:01:18.334" endtime="20250923 11:01:18.334"/>
</kw>
<status status="FAIL" starttime="20250923 11:01:02.415" endtime="20250923 11:01:18.334"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${new_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 11:01:18.335" endtime="20250923 11:01:18.335"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:01:18.342" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 11:01:18.337" endtime="20250923 11:01:18.406"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:01:19.508" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:01:18.407" endtime="20250923 11:01:19.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 11:01:19.644" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 11:01:19.596" endtime="20250923 11:01:19.647"/>
</kw>
<status status="PASS" starttime="20250923 11:01:18.336" endtime="20250923 11:01:19.779"/>
</kw>
<status status="PASS" starttime="20250923 11:01:18.335" endtime="20250923 11:01:19.779"/>
</kw>
<doc>Test that admin users can edit any dependency</doc>
<tag>admin</tag>
<tag>crud</tag>
<tag>edit</tag>
<tag>rbac</tag>
<status status="FAIL" starttime="20250923 11:00:56.027" endtime="20250923 11:01:19.780">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000104c9f418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000104c973b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x00000001047c0ec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x000000010480942c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x00000001047fe220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x00000001047fdcac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000104849604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x00000001047fc0d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x0000000104c63b08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x0000000104c66d20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x0000000104c44e58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x0000000104c675cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x0000000104c3659c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x0000000104c869f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x0000000104c86b70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x0000000104c97000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</status>
</test>
<test id="s1-t4" name="TC027 - Add Dependency With Long Text" line="410">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:01:19.892" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 11:01:19.855" endtime="20250923 11:01:19.922"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:01:20.930" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:01:19.923" endtime="20250923 11:01:20.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 11:01:20.934" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 11:01:20.933" endtime="20250923 11:01:20.934"/>
</kw>
<status status="PASS" starttime="20250923 11:01:19.850" endtime="20250923 11:01:20.934"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 11:01:20.935" endtime="20250923 11:01:20.984"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:01:21.990" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:01:20.984" endtime="20250923 11:01:21.991"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:01:21.993" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 11:01:21.992" endtime="20250923 11:01:22.053"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:01:24.056" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 11:01:22.054" endtime="20250923 11:01:24.056"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:24.056" endtime="20250923 11:01:24.081"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:24.081" endtime="20250923 11:01:24.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 11:01:24.092" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 11:01:24.092" endtime="20250923 11:01:24.092"/>
</kw>
<status status="PASS" starttime="20250923 11:01:20.934" endtime="20250923 11:01:24.092"/>
</kw>
<status status="PASS" starttime="20250923 11:01:20.934" endtime="20250923 11:01:24.092"/>
</kw>
<status status="PASS" starttime="20250923 11:01:19.796" endtime="20250923 11:01:24.092"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${long_name}</var>
<arg>'Very Long Dependency Name That Exceeds Normal Length To Test Field Boundaries' * 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250923 11:01:24.093" level="INFO">${long_name} = Very Long Dependency Name That Exceeds Normal Length To Test Field BoundariesVery Long Dependency Name That Exceeds Normal Length To Test Field Boundaries</msg>
<status status="PASS" starttime="20250923 11:01:24.092" endtime="20250923 11:01:24.093"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${long_desc}</var>
<arg>'This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. ' * 3</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250923 11:01:24.093" level="INFO">${long_desc} = This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. This is a very long description that tests the maximum length bou...</msg>
<status status="PASS" starttime="20250923 11:01:24.093" endtime="20250923 11:01:24.093"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${long_name}</arg>
<arg>${long_desc}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:24.097" endtime="20250923 11:01:24.106"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 11:01:24.107" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 11:01:24.106" endtime="20250923 11:01:24.152"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:24.152" endtime="20250923 11:01:24.167"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:24.167" endtime="20250923 11:01:24.183"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:24.183" endtime="20250923 11:01:24.192"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:24.192" endtime="20250923 11:01:24.203"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 11:01:24.203" level="INFO">Typing text 'Very Long Dependency Name That Exceeds Normal Length To Test Field BoundariesVery Long Dependency Name That Exceeds Normal Length To Test Field Boundaries' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 11:01:24.203" endtime="20250923 11:01:24.284"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 11:01:24.284" level="INFO">Typing text 'This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. ' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 11:01:24.284" endtime="20250923 11:01:24.434"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 11:01:24.434" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 11:01:24.434" endtime="20250923 11:01:24.475"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 11:01:24.476" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 11:01:24.475" endtime="20250923 11:01:24.490"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 11:01:24.491" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 11:01:24.491" endtime="20250923 11:01:24.503"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 11:01:24.503" endtime="20250923 11:01:24.504"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 11:01:24.504" endtime="20250923 11:01:24.512"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 11:01:24.513" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 11:01:24.512" endtime="20250923 11:01:24.543"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 11:01:24.544" endtime="20250923 11:01:24.551"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:01:26.553" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 11:01:24.551" endtime="20250923 11:01:26.553"/>
</kw>
<status status="PASS" starttime="20250923 11:01:24.093" endtime="20250923 11:01:26.553"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${long_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${found}</var>
<arg>return Array.from(document.querySelectorAll('.dependency-name')).some(el =&gt;</arg>
<arg>el.textContent.includes('${dependency_name}'.substring(0, 50))</arg>
<arg>);</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:01:26.554" level="INFO">Executing JavaScript:
return Array.from(document.querySelectorAll('.dependency-name')).some(el =&gt;el.textContent.includes('Very Long Dependency Name That Exceeds Normal Length To Test Field BoundariesVery Long Dependency Name That Exceeds Normal Length To Test Field Boundaries'.substring(0, 50)));
Without any arguments.</msg>
<msg timestamp="20250923 11:01:26.563" level="INFO">${found} = True</msg>
<status status="PASS" starttime="20250923 11:01:26.554" endtime="20250923 11:01:26.563"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${found}</arg>
<arg>Dependency with name starting "${dependency_name[:50]}" not found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250923 11:01:26.563" endtime="20250923 11:01:26.565"/>
</kw>
<status status="PASS" starttime="20250923 11:01:26.553" endtime="20250923 11:01:26.565"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:01:26.566" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 11:01:26.566" endtime="20250923 11:01:26.573"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:01:27.575" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:01:26.573" endtime="20250923 11:01:27.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 11:01:27.579" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 11:01:27.578" endtime="20250923 11:01:27.579"/>
</kw>
<status status="PASS" starttime="20250923 11:01:26.566" endtime="20250923 11:01:27.579"/>
</kw>
<status status="PASS" starttime="20250923 11:01:26.566" endtime="20250923 11:01:27.579"/>
</kw>
<doc>Test creating dependency with maximum length text fields</doc>
<tag>boundary</tag>
<tag>crud</tag>
<tag>edge_case</tag>
<status status="PASS" starttime="20250923 11:01:19.792" endtime="20250923 11:01:27.579"/>
</test>
<kw name="Test Mode Suite Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 11:01:27.584" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 11:01:27.582" endtime="20250923 11:01:27.596"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 11:01:28.598" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 11:01:27.596" endtime="20250923 11:01:28.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 11:01:28.599" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 11:01:28.599" endtime="20250923 11:01:28.599"/>
</kw>
<status status="PASS" starttime="20250923 11:01:27.582" endtime="20250923 11:01:28.600"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 11:01:28.600" endtime="20250923 11:01:28.780"/>
</kw>
<status status="PASS" starttime="20250923 11:01:28.600" endtime="20250923 11:01:28.780"/>
</kw>
<status status="PASS" starttime="20250923 11:01:27.581" endtime="20250923 11:01:28.780"/>
</kw>
<doc>Dependency CRUD Operations Test Suite for DepFlow Application</doc>
<status status="FAIL" starttime="20250923 11:00:31.116" endtime="20250923 11:01:28.780"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">admin</stat>
<stat pass="1" fail="0" skip="0">boundary</stat>
<stat pass="2" fail="2" skip="0">crud</stat>
<stat pass="1" fail="0" skip="0">edge_case</stat>
<stat pass="0" fail="1" skip="0">edit</stat>
<stat pass="1" fail="1" skip="0">negative</stat>
<stat pass="0" fail="1" skip="0">rbac</stat>
<stat pass="1" fail="1" skip="0">validation</stat>
</tag>
<suite>
<stat pass="2" fail="2" skip="0" id="s1" name="02 Dependency Crud Tests">02 Dependency Crud Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
