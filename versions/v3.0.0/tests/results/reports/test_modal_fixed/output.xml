<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20250923 08:19:51.341" rpa="false" schemaversion="4">
<suite id="s1" name="02 Dependency Crud Tests" source="/Users/mmoola/Cursor/Dependency Management App/tests/test_suites/02_dependency_crud_tests.robot">
<kw name="Test Mode Suite Setup" library="depflow_keywords" type="SETUP">
<doc>Setup using test mode authentication</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 08:19:51.529" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 08:19:51.529" endtime="20250923 08:19:53.677"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 08:19:53.677" endtime="20250923 08:19:54.048"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 08:19:54.049" endtime="20250923 08:19:54.052"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:19:54.052" endtime="20250923 08:19:54.066"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:19:57.069" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 08:19:54.066" endtime="20250923 08:19:57.070"/>
</kw>
<status status="PASS" starttime="20250923 08:19:51.529" endtime="20250923 08:19:57.071"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:19:57.074" endtime="20250923 08:19:57.088"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:19:58.089" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:19:57.088" endtime="20250923 08:19:58.089"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:19:58.091" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:19:58.089" endtime="20250923 08:19:58.110"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:20:00.112" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:19:58.110" endtime="20250923 08:20:00.112"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:20:00.112" endtime="20250923 08:20:00.140"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:20:00.140" endtime="20250923 08:20:00.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:20:00.153" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:20:00.153" endtime="20250923 08:20:00.153"/>
</kw>
<status status="PASS" starttime="20250923 08:19:57.073" endtime="20250923 08:20:00.153"/>
</kw>
<status status="PASS" starttime="20250923 08:19:57.072" endtime="20250923 08:20:00.153"/>
</kw>
<status status="PASS" starttime="20250923 08:19:51.529" endtime="20250923 08:20:00.153"/>
</kw>
<test id="s1-t1" name="TC014 - Open Add Dependency Modal" line="37">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:20:00.155" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:20:00.155" endtime="20250923 08:20:00.159"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:20:01.162" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:20:00.160" endtime="20250923 08:20:01.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:20:01.163" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:20:01.162" endtime="20250923 08:20:01.163"/>
</kw>
<status status="PASS" starttime="20250923 08:20:00.154" endtime="20250923 08:20:01.163"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:20:01.163" endtime="20250923 08:20:01.169"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:20:02.170" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:20:01.169" endtime="20250923 08:20:02.171"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:20:02.173" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:20:02.171" endtime="20250923 08:20:02.186"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:20:04.189" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:20:02.187" endtime="20250923 08:20:04.191"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:20:04.191" endtime="20250923 08:20:04.204"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:20:04.204" endtime="20250923 08:20:04.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:20:04.213" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:20:04.213" endtime="20250923 08:20:04.213"/>
</kw>
<status status="PASS" starttime="20250923 08:20:01.163" endtime="20250923 08:20:04.213"/>
</kw>
<status status="PASS" starttime="20250923 08:20:01.163" endtime="20250923 08:20:04.213"/>
</kw>
<status status="PASS" starttime="20250923 08:20:00.154" endtime="20250923 08:20:04.213"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:20:04.215" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:20:04.214" endtime="20250923 08:20:04.218"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:20:04.219" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:20:04.218" endtime="20250923 08:20:04.221"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 08:20:04.222" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 08:20:04.222" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 08:20:04.222" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 08:20:04.222" endtime="20250923 08:20:04.233"/>
</kw>
<status status="PASS" starttime="20250923 08:20:04.221" endtime="20250923 08:20:04.233"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:20:05.234" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:20:04.233" endtime="20250923 08:20:05.234"/>
</kw>
<status status="PASS" starttime="20250923 08:20:04.213" endtime="20250923 08:20:05.234"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:20:06.237" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:20:05.235" endtime="20250923 08:20:06.237"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:20:06.238" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:20:06.238" endtime="20250923 08:20:06.294"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:20:06.294" endtime="20250923 08:20:06.308"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:20:06.318" level="INFO">Element 'id:addName' is displayed.</msg>
<status status="PASS" starttime="20250923 08:20:06.308" endtime="20250923 08:20:06.318"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:20:06.334" level="INFO">Element 'id:addDescription' is displayed.</msg>
<status status="PASS" starttime="20250923 08:20:06.318" endtime="20250923 08:20:06.334"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:20:06.345" level="INFO">Element 'id:addTeam' is displayed.</msg>
<status status="PASS" starttime="20250923 08:20:06.334" endtime="20250923 08:20:06.345"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:20:06.355" level="INFO">Element 'id:addStatus' is displayed.</msg>
<status status="PASS" starttime="20250923 08:20:06.345" endtime="20250923 08:20:06.355"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:20:06.364" level="INFO">Element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]' is displayed.</msg>
<status status="PASS" starttime="20250923 08:20:06.355" endtime="20250923 08:20:06.364"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${CANCEL_BUTTON}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:20:06.373" level="INFO">Element 'xpath://button[contains(@class, 'btn-cancel')]' is displayed.</msg>
<status status="PASS" starttime="20250923 08:20:06.364" endtime="20250923 08:20:06.373"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:20:06.373" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:20:06.373" endtime="20250923 08:20:06.376"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:20:07.377" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:20:06.376" endtime="20250923 08:20:07.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:20:07.377" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:20:07.377" endtime="20250923 08:20:07.377"/>
</kw>
<status status="PASS" starttime="20250923 08:20:06.373" endtime="20250923 08:20:07.377"/>
</kw>
<status status="PASS" starttime="20250923 08:20:06.373" endtime="20250923 08:20:07.377"/>
</kw>
<doc>Test opening the Add Dependency modal</doc>
<tag>modal</tag>
<tag>smoke</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 08:20:00.153" endtime="20250923 08:20:07.377"/>
</test>
<kw name="Test Mode Suite Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:20:07.380" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:20:07.379" endtime="20250923 08:20:07.385"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:20:08.386" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:20:07.386" endtime="20250923 08:20:08.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:20:08.387" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:20:08.386" endtime="20250923 08:20:08.387"/>
</kw>
<status status="PASS" starttime="20250923 08:20:07.379" endtime="20250923 08:20:08.387"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 08:20:08.387" endtime="20250923 08:20:08.559"/>
</kw>
<status status="PASS" starttime="20250923 08:20:08.387" endtime="20250923 08:20:08.559"/>
</kw>
<status status="PASS" starttime="20250923 08:20:07.379" endtime="20250923 08:20:08.559"/>
</kw>
<doc>Dependency CRUD Operations Test Suite for DepFlow Application</doc>
<status status="PASS" starttime="20250923 08:19:51.342" endtime="20250923 08:20:08.559"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">modal</stat>
<stat pass="1" fail="0" skip="0">smoke</stat>
<stat pass="1" fail="0" skip="0">ui</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="02 Dependency Crud Tests">02 Dependency Crud Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
