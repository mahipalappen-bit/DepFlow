<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20250923 08:22:42.545" rpa="false" schemaversion="4">
<suite id="s1" name="02 Dependency Crud Tests" source="/Users/mmoola/Cursor/Dependency Management App/tests/test_suites/02_dependency_crud_tests.robot">
<kw name="Test Mode Suite Setup" library="depflow_keywords" type="SETUP">
<doc>Setup using test mode authentication</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 08:22:42.731" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 08:22:42.730" endtime="20250923 08:22:44.582"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 08:22:44.583" endtime="20250923 08:22:44.946"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 08:22:44.946" endtime="20250923 08:22:44.948"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:22:44.948" endtime="20250923 08:22:44.956"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:22:47.959" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 08:22:44.956" endtime="20250923 08:22:47.959"/>
</kw>
<status status="PASS" starttime="20250923 08:22:42.730" endtime="20250923 08:22:47.959"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:22:47.960" endtime="20250923 08:22:47.969"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:22:48.971" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:22:47.969" endtime="20250923 08:22:48.971"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:22:48.971" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:22:48.971" endtime="20250923 08:22:48.985"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:22:50.988" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:22:48.985" endtime="20250923 08:22:50.988"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:22:50.989" endtime="20250923 08:22:51.011"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:22:51.011" endtime="20250923 08:22:51.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:22:51.023" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:22:51.023" endtime="20250923 08:22:51.023"/>
</kw>
<status status="PASS" starttime="20250923 08:22:47.960" endtime="20250923 08:22:51.023"/>
</kw>
<status status="PASS" starttime="20250923 08:22:47.960" endtime="20250923 08:22:51.023"/>
</kw>
<status status="PASS" starttime="20250923 08:22:42.730" endtime="20250923 08:22:51.023"/>
</kw>
<test id="s1-t1" name="TC013 - Verify Dashboard Elements Present" line="27">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:22:51.025" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:22:51.024" endtime="20250923 08:22:51.029"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:22:52.030" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:22:51.029" endtime="20250923 08:22:52.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:22:52.031" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:22:52.031" endtime="20250923 08:22:52.031"/>
</kw>
<status status="PASS" starttime="20250923 08:22:51.024" endtime="20250923 08:22:52.031"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:22:52.032" endtime="20250923 08:22:52.040"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:22:53.042" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:22:52.041" endtime="20250923 08:22:53.042"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:22:53.042" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:22:53.042" endtime="20250923 08:22:53.048"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:22:55.049" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:22:53.049" endtime="20250923 08:22:55.049"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:22:55.050" endtime="20250923 08:22:55.058"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:22:55.058" endtime="20250923 08:22:55.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:22:55.065" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:22:55.064" endtime="20250923 08:22:55.065"/>
</kw>
<status status="PASS" starttime="20250923 08:22:52.031" endtime="20250923 08:22:55.065"/>
</kw>
<status status="PASS" starttime="20250923 08:22:52.031" endtime="20250923 08:22:55.065"/>
</kw>
<status status="PASS" starttime="20250923 08:22:51.024" endtime="20250923 08:22:55.065"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 08:22:55.070" level="INFO">Current page contains element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:22:55.065" endtime="20250923 08:22:55.070"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${TOTAL_COUNT}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 08:22:55.076" level="INFO">Current page contains element 'id:totalCount'.</msg>
<status status="PASS" starttime="20250923 08:22:55.071" endtime="20250923 08:22:55.076"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${SEARCH_INPUT}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 08:22:55.081" level="INFO">Current page contains element 'id:searchInput'.</msg>
<status status="PASS" starttime="20250923 08:22:55.076" endtime="20250923 08:22:55.081"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${DEPENDENCY_TABLE}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 08:22:55.085" level="INFO">Current page contains element 'css:.dependencies-table'.</msg>
<status status="PASS" starttime="20250923 08:22:55.081" endtime="20250923 08:22:55.085"/>
</kw>
<kw name="Verify DepFlow Dashboard Logo Present" library="depflow_keywords">
<doc>Verifies DepFlow logo is present on dashboard page</doc>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${visible_logos}</var>
<arg>xpath://div[contains(@class, 'depflow-logo') and not(contains(@style, 'display: none'))]</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20250923 08:22:55.090" level="INFO">${visible_logos} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="65a1271837638b0feef6e9adf38ba07a", element="f.1D74A0694687F3D2A745BFC97D5E7645.d.B744A08D6A84D4A79CA3C3F50E16A83E.e.38")&gt;, &lt;selenium.webdriv...</msg>
<status status="PASS" starttime="20250923 08:22:55.085" endtime="20250923 08:22:55.090"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${visible_logos}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20250923 08:22:55.090" level="INFO">Length is 2</msg>
<msg timestamp="20250923 08:22:55.090" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20250923 08:22:55.090" endtime="20250923 08:22:55.090"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${count} &gt; 0</arg>
<arg>No visible DepFlow logo found on dashboard</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250923 08:22:55.090" endtime="20250923 08:22:55.090"/>
</kw>
<status status="PASS" starttime="20250923 08:22:55.085" endtime="20250923 08:22:55.090"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:22:55.091" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:22:55.091" endtime="20250923 08:22:55.094"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:22:56.094" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:22:55.094" endtime="20250923 08:22:56.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:22:56.096" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:22:56.095" endtime="20250923 08:22:56.096"/>
</kw>
<status status="PASS" starttime="20250923 08:22:55.091" endtime="20250923 08:22:56.096"/>
</kw>
<status status="PASS" starttime="20250923 08:22:55.091" endtime="20250923 08:22:56.096"/>
</kw>
<doc>Verify all dashboard elements are present after login</doc>
<tag>dashboard</tag>
<tag>smoke</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 08:22:51.023" endtime="20250923 08:22:56.096"/>
</test>
<test id="s1-t2" name="TC014 - Open Add Dependency Modal" line="37">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:22:56.099" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:22:56.099" endtime="20250923 08:22:56.104"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:22:57.106" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:22:56.104" endtime="20250923 08:22:57.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:22:57.107" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:22:57.107" endtime="20250923 08:22:57.107"/>
</kw>
<status status="PASS" starttime="20250923 08:22:56.098" endtime="20250923 08:22:57.107"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:22:57.109" endtime="20250923 08:22:57.116"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:22:58.118" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:22:57.116" endtime="20250923 08:22:58.118"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:22:58.120" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:22:58.118" endtime="20250923 08:22:58.128"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:00.129" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:22:58.128" endtime="20250923 08:23:00.129"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:00.129" endtime="20250923 08:23:00.145"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:00.145" endtime="20250923 08:23:00.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:23:00.155" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:23:00.155" endtime="20250923 08:23:00.155"/>
</kw>
<status status="PASS" starttime="20250923 08:22:57.108" endtime="20250923 08:23:00.155"/>
</kw>
<status status="PASS" starttime="20250923 08:22:57.107" endtime="20250923 08:23:00.155"/>
</kw>
<status status="PASS" starttime="20250923 08:22:56.098" endtime="20250923 08:23:00.155"/>
</kw>
<kw name="Ensure All Modals Closed" library="depflow_keywords">
<doc>Ensures all modals are closed before proceeding</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof closeLoginModal === 'function') { closeLoginModal(); }</arg>
<arg>if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }</arg>
<arg>if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:23:00.156" level="INFO">Executing JavaScript:
if (typeof closeLoginModal === 'function') { closeLoginModal(); }if (typeof closeAddDependencyModal === 'function') { closeAddDependencyModal(); }if (typeof closeEditDependencyModal === 'function') { closeEditDependencyModal(); }
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:23:00.156" endtime="20250923 08:23:00.159"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.querySelectorAll('.modal').forEach(modal =&gt; {</arg>
<arg>modal.style.display = 'none';</arg>
<arg>modal.classList.remove('show');</arg>
<arg>});</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:23:00.160" level="INFO">Executing JavaScript:
document.querySelectorAll('.modal').forEach(modal =&gt; {modal.style.display = 'none';modal.classList.remove('show');});
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:23:00.159" endtime="20250923 08:23:00.162"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Press Keys</arg>
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 08:23:00.163" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20250923 08:23:00.163" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20250923 08:23:00.163" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 08:23:00.162" endtime="20250923 08:23:00.168"/>
</kw>
<status status="PASS" starttime="20250923 08:23:00.162" endtime="20250923 08:23:00.168"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:01.169" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:23:00.168" endtime="20250923 08:23:01.169"/>
</kw>
<status status="PASS" starttime="20250923 08:23:00.156" endtime="20250923 08:23:01.169"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:02.172" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:23:01.170" endtime="20250923 08:23:02.173"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:02.173" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:23:02.173" endtime="20250923 08:23:02.214"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:02.215" endtime="20250923 08:23:02.244"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:23:02.263" level="INFO">Element 'id:addName' is displayed.</msg>
<status status="PASS" starttime="20250923 08:23:02.244" endtime="20250923 08:23:02.263"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:23:02.275" level="INFO">Element 'id:addDescription' is displayed.</msg>
<status status="PASS" starttime="20250923 08:23:02.264" endtime="20250923 08:23:02.275"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:23:02.286" level="INFO">Element 'id:addTeam' is displayed.</msg>
<status status="PASS" starttime="20250923 08:23:02.275" endtime="20250923 08:23:02.286"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:23:02.295" level="INFO">Element 'id:addStatus' is displayed.</msg>
<status status="PASS" starttime="20250923 08:23:02.286" endtime="20250923 08:23:02.295"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:23:02.305" level="INFO">Element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]' is displayed.</msg>
<status status="PASS" starttime="20250923 08:23:02.296" endtime="20250923 08:23:02.305"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${CANCEL_BUTTON}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:23:02.313" level="INFO">Element 'xpath://button[contains(@class, 'btn-cancel')]' is displayed.</msg>
<status status="PASS" starttime="20250923 08:23:02.305" endtime="20250923 08:23:02.313"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:23:02.314" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:23:02.314" endtime="20250923 08:23:02.316"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:03.317" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:23:02.316" endtime="20250923 08:23:03.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:23:03.318" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:23:03.318" endtime="20250923 08:23:03.318"/>
</kw>
<status status="PASS" starttime="20250923 08:23:02.313" endtime="20250923 08:23:03.319"/>
</kw>
<status status="PASS" starttime="20250923 08:23:02.313" endtime="20250923 08:23:03.319"/>
</kw>
<doc>Test opening the Add Dependency modal</doc>
<tag>modal</tag>
<tag>smoke</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 08:22:56.097" endtime="20250923 08:23:03.319"/>
</test>
<test id="s1-t3" name="TC015 - Add New Dependency Successfully" line="52">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:23:03.322" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:23:03.321" endtime="20250923 08:23:03.327"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:04.328" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:23:03.327" endtime="20250923 08:23:04.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:23:04.329" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:23:04.328" endtime="20250923 08:23:04.329"/>
</kw>
<status status="PASS" starttime="20250923 08:23:03.321" endtime="20250923 08:23:04.329"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:23:04.330" endtime="20250923 08:23:04.337"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:05.338" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:23:04.337" endtime="20250923 08:23:05.338"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:23:05.339" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:23:05.338" endtime="20250923 08:23:05.344"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:07.350" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:23:05.344" endtime="20250923 08:23:07.352"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:07.353" endtime="20250923 08:23:07.371"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:07.372" endtime="20250923 08:23:07.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:23:07.383" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:23:07.383" endtime="20250923 08:23:07.383"/>
</kw>
<status status="PASS" starttime="20250923 08:23:04.329" endtime="20250923 08:23:07.383"/>
</kw>
<status status="PASS" starttime="20250923 08:23:04.329" endtime="20250923 08:23:07.383"/>
</kw>
<status status="PASS" starttime="20250923 08:23:03.321" endtime="20250923 08:23:07.383"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>CreateTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:23:07.384" level="INFO">${timestamp} = 20250923_082307</msg>
<status status="PASS" starttime="20250923 08:23:07.383" endtime="20250923 08:23:07.384"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:23:07.384" level="INFO">${unique_name} = CreateTest_20250923_082307</msg>
<status status="PASS" starttime="20250923 08:23:07.384" endtime="20250923 08:23:07.384"/>
</kw>
<msg timestamp="20250923 08:23:07.384" level="INFO">${unique_name} = CreateTest_20250923_082307</msg>
<status status="PASS" starttime="20250923 08:23:07.383" endtime="20250923 08:23:07.384"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency created by Robot Framework automation</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:23:07.384" level="INFO">${description} = Test dependency created by Robot Framework automation</msg>
<status status="PASS" starttime="20250923 08:23:07.384" endtime="20250923 08:23:07.384"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${TEST_DEP_STATUS}</arg>
<arg>${TEST_DEP_PRIORITY}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:07.385" endtime="20250923 08:23:07.395"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:07.396" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:23:07.395" endtime="20250923 08:23:07.419"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:07.420" endtime="20250923 08:23:07.639"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:07.639" endtime="20250923 08:23:07.648"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:07.648" endtime="20250923 08:23:07.656"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:07.656" endtime="20250923 08:23:07.664"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:07.665" level="INFO">Typing text 'CreateTest_20250923_082307' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:23:07.664" endtime="20250923 08:23:07.754"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:07.755" level="INFO">Typing text 'Test dependency created by Robot Framework automation' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:23:07.754" endtime="20250923 08:23:07.797"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:23:07.797" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:23:07.797" endtime="20250923 08:23:07.831"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:23:07.832" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:23:07.831" endtime="20250923 08:23:07.849"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:23:07.849" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:23:07.849" endtime="20250923 08:23:07.870"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:23:07.870" endtime="20250923 08:23:07.871"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:07.871" endtime="20250923 08:23:07.879"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:07.879" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:23:07.879" endtime="20250923 08:23:07.911"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:23:07.911" endtime="20250923 08:23:07.921"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:09.922" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:23:07.921" endtime="20250923 08:23:09.922"/>
</kw>
<status status="PASS" starttime="20250923 08:23:07.384" endtime="20250923 08:23:09.922"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:23:09.923" endtime="20250923 08:23:09.935"/>
</kw>
<status status="PASS" starttime="20250923 08:23:09.923" endtime="20250923 08:23:09.935"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NOTIFICATION}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 08:23:20.330" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:23:20.330" level="FAIL">Element 'id:notification' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 08:23:09.935" endtime="20250923 08:23:20.336"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${actual_message}</var>
<arg>${NOTIFICATION}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 08:23:20.336" endtime="20250923 08:23:20.336"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${actual_message}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250923 08:23:20.336" endtime="20250923 08:23:20.336"/>
</kw>
<status status="FAIL" starttime="20250923 08:23:09.935" endtime="20250923 08:23:20.336"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${unique_name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 08:23:20.336" endtime="20250923 08:23:20.336"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${description}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 08:23:20.336" endtime="20250923 08:23:20.336"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${TEST_DEP_TEAM}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 08:23:20.337" endtime="20250923 08:23:20.337"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:23:20.337" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:23:20.337" endtime="20250923 08:23:20.340"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:21.343" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:23:20.340" endtime="20250923 08:23:21.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:23:21.345" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:23:21.344" endtime="20250923 08:23:21.345"/>
</kw>
<status status="PASS" starttime="20250923 08:23:20.337" endtime="20250923 08:23:21.345"/>
</kw>
<status status="PASS" starttime="20250923 08:23:20.337" endtime="20250923 08:23:21.345"/>
</kw>
<doc>Test successful creation of a new dependency</doc>
<tag>create</tag>
<tag>crud</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20250923 08:23:03.320" endtime="20250923 08:23:21.345">Element 'id:notification' not visible after 5 seconds.</status>
</test>
<test id="s1-t4" name="TC016 - Add Dependency With Minimal Required Fields" line="70">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:23:21.348" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:23:21.347" endtime="20250923 08:23:21.353"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:22.356" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:23:21.353" endtime="20250923 08:23:22.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:23:22.356" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:23:22.356" endtime="20250923 08:23:22.357"/>
</kw>
<status status="PASS" starttime="20250923 08:23:21.347" endtime="20250923 08:23:22.357"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:23:22.357" endtime="20250923 08:23:22.365"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:23.367" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:23:22.365" endtime="20250923 08:23:23.368"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:23:23.370" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:23:23.369" endtime="20250923 08:23:23.381"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:25.382" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:23:23.381" endtime="20250923 08:23:25.382"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:25.382" endtime="20250923 08:23:25.398"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:25.398" endtime="20250923 08:23:25.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:23:25.410" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:23:25.409" endtime="20250923 08:23:25.410"/>
</kw>
<status status="PASS" starttime="20250923 08:23:22.357" endtime="20250923 08:23:25.410"/>
</kw>
<status status="PASS" starttime="20250923 08:23:22.357" endtime="20250923 08:23:25.410"/>
</kw>
<status status="PASS" starttime="20250923 08:23:21.347" endtime="20250923 08:23:25.410"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>MinimalTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:23:25.410" level="INFO">${timestamp} = 20250923_082325</msg>
<status status="PASS" starttime="20250923 08:23:25.410" endtime="20250923 08:23:25.410"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:23:25.411" level="INFO">${unique_name} = MinimalTest_20250923_082325</msg>
<status status="PASS" starttime="20250923 08:23:25.411" endtime="20250923 08:23:25.411"/>
</kw>
<msg timestamp="20250923 08:23:25.411" level="INFO">${unique_name} = MinimalTest_20250923_082325</msg>
<status status="PASS" starttime="20250923 08:23:25.410" endtime="20250923 08:23:25.411"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Minimal test dependency with required fields only</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:23:25.411" level="INFO">${description} = Minimal test dependency with required fields only</msg>
<status status="PASS" starttime="20250923 08:23:25.411" endtime="20250923 08:23:25.411"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:25.412" endtime="20250923 08:23:25.421"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:25.421" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:23:25.421" endtime="20250923 08:23:25.446"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:25.446" endtime="20250923 08:23:25.463"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:25.464" endtime="20250923 08:23:25.474"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:25.474" endtime="20250923 08:23:25.483"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:25.483" endtime="20250923 08:23:25.493"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:25.494" level="INFO">Typing text 'MinimalTest_20250923_082325' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:23:25.494" endtime="20250923 08:23:25.526"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:25.527" level="INFO">Typing text 'Minimal test dependency with required fields only' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:23:25.527" endtime="20250923 08:23:25.564"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:23:25.565" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:23:25.564" endtime="20250923 08:23:25.589"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:23:25.590" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:23:25.589" endtime="20250923 08:23:25.604"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:23:25.605" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:23:25.604" endtime="20250923 08:23:25.620"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:23:25.620" endtime="20250923 08:23:25.621"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:25.621" endtime="20250923 08:23:25.628"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:25.629" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:23:25.629" endtime="20250923 08:23:25.656"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:23:25.656" endtime="20250923 08:23:25.665"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:27.666" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:23:25.665" endtime="20250923 08:23:27.667"/>
</kw>
<status status="PASS" starttime="20250923 08:23:25.411" endtime="20250923 08:23:27.667"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:23:27.667" endtime="20250923 08:23:27.680"/>
</kw>
<status status="PASS" starttime="20250923 08:23:27.667" endtime="20250923 08:23:27.680"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NOTIFICATION}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20250923 08:23:38.163" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:23:38.163" level="FAIL">Element 'id:notification' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20250923 08:23:27.681" endtime="20250923 08:23:38.164"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${actual_message}</var>
<arg>${NOTIFICATION}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 08:23:38.164" endtime="20250923 08:23:38.164"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${actual_message}</arg>
<arg>${expected_message}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250923 08:23:38.164" endtime="20250923 08:23:38.164"/>
</kw>
<status status="FAIL" starttime="20250923 08:23:27.680" endtime="20250923 08:23:38.164"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:23:38.165" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:23:38.165" endtime="20250923 08:23:38.170"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:39.171" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:23:38.170" endtime="20250923 08:23:39.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:23:39.171" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:23:39.171" endtime="20250923 08:23:39.172"/>
</kw>
<status status="PASS" starttime="20250923 08:23:38.164" endtime="20250923 08:23:39.172"/>
</kw>
<status status="PASS" starttime="20250923 08:23:38.164" endtime="20250923 08:23:39.172"/>
</kw>
<doc>Test creating dependency with only required fields</doc>
<tag>create</tag>
<tag>crud</tag>
<tag>minimal</tag>
<status status="FAIL" starttime="20250923 08:23:21.346" endtime="20250923 08:23:39.172">Element 'id:notification' not visible after 5 seconds.</status>
</test>
<test id="s1-t5" name="TC017 - Validate Required Field - Name" line="82">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:23:39.173" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:23:39.173" endtime="20250923 08:23:39.176"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:40.177" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:23:39.176" endtime="20250923 08:23:40.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:23:40.178" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:23:40.177" endtime="20250923 08:23:40.178"/>
</kw>
<status status="PASS" starttime="20250923 08:23:39.172" endtime="20250923 08:23:40.178"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:23:40.179" endtime="20250923 08:23:40.188"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:41.191" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:23:40.188" endtime="20250923 08:23:41.191"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:23:41.193" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:23:41.191" endtime="20250923 08:23:41.205"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:43.208" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:23:41.205" endtime="20250923 08:23:43.208"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:43.208" endtime="20250923 08:23:43.224"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:43.224" endtime="20250923 08:23:43.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:23:43.235" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:23:43.234" endtime="20250923 08:23:43.235"/>
</kw>
<status status="PASS" starttime="20250923 08:23:40.178" endtime="20250923 08:23:43.235"/>
</kw>
<status status="PASS" starttime="20250923 08:23:40.178" endtime="20250923 08:23:43.235"/>
</kw>
<status status="PASS" starttime="20250923 08:23:39.172" endtime="20250923 08:23:43.235"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:43.235" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:23:43.235" endtime="20250923 08:23:43.261"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:43.261" endtime="20250923 08:23:43.286"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>Test description without name</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:43.287" level="INFO">Typing text 'Test description without name' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:23:43.286" endtime="20250923 08:23:43.324"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:23:43.325" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:23:43.325" endtime="20250923 08:23:43.352"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:43.353" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-submit')]'.</msg>
<msg timestamp="20250923 08:23:53.550" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:23:53.551" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000105237418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x000000010522f3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000104d58ec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x0000000104da142c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000104d96220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000104d95cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000104de1604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x0000000104d940d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x00000001051fbb08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x00000001051fed20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x00000001051dce58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x00000001051ff5cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x00000001051ce59c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x000000010521e9f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x000000010521eb70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x000000010522f000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 08:23:43.353" endtime="20250923 08:23:53.587"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 08:23:53.587" endtime="20250923 08:23:53.587"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:23:53.588" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:23:53.588" endtime="20250923 08:23:53.592"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:54.592" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:23:53.592" endtime="20250923 08:23:54.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:23:54.594" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:23:54.594" endtime="20250923 08:23:54.595"/>
</kw>
<status status="PASS" starttime="20250923 08:23:53.588" endtime="20250923 08:23:54.595"/>
</kw>
<status status="PASS" starttime="20250923 08:23:53.588" endtime="20250923 08:23:54.595"/>
</kw>
<doc>Test that name field is required for dependency creation</doc>
<tag>crud</tag>
<tag>negative</tag>
<tag>validation</tag>
<status status="FAIL" starttime="20250923 08:23:39.172" endtime="20250923 08:23:54.595">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000105237418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x000000010522f3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000104d58ec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x0000000104da142c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000104d96220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000104d95cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000104de1604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x0000000104d940d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x00000001051fbb08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x00000001051fed20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x00000001051dce58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x00000001051ff5cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x00000001051ce59c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x000000010521e9f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x000000010521eb70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x000000010522f000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</status>
</test>
<test id="s1-t6" name="TC018 - Validate Required Field - Description" line="98">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:23:54.598" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:23:54.597" endtime="20250923 08:23:54.603"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:55.604" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:23:54.603" endtime="20250923 08:23:55.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:23:55.605" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:23:55.605" endtime="20250923 08:23:55.605"/>
</kw>
<status status="PASS" starttime="20250923 08:23:54.597" endtime="20250923 08:23:55.605"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:23:55.606" endtime="20250923 08:23:55.614"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:56.614" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:23:55.614" endtime="20250923 08:23:56.614"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:23:56.615" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:23:56.615" endtime="20250923 08:23:56.627"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:23:58.629" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:23:56.628" endtime="20250923 08:23:58.629"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:58.629" endtime="20250923 08:23:58.641"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:58.641" endtime="20250923 08:23:58.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:23:58.651" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:23:58.651" endtime="20250923 08:23:58.651"/>
</kw>
<status status="PASS" starttime="20250923 08:23:55.605" endtime="20250923 08:23:58.651"/>
</kw>
<status status="PASS" starttime="20250923 08:23:55.605" endtime="20250923 08:23:58.651"/>
</kw>
<status status="PASS" starttime="20250923 08:23:54.597" endtime="20250923 08:23:58.651"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:58.652" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:23:58.651" endtime="20250923 08:23:58.677"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:23:58.677" endtime="20250923 08:23:58.898"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>Test Name</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:58.899" level="INFO">Typing text 'Test Name' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:23:58.899" endtime="20250923 08:23:58.934"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>Short</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:58.935" level="INFO">Typing text 'Short' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:23:58.934" endtime="20250923 08:23:58.962"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:23:58.962" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:23:58.962" endtime="20250923 08:23:58.987"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:23:58.987" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-submit')]'.</msg>
<msg timestamp="20250923 08:24:09.175" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-4.png"&gt;&lt;img src="selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:24:09.175" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000105237418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x000000010522f3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000104d58ec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x0000000104da142c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000104d96220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000104d95cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000104de1604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x0000000104d940d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x00000001051fbb08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x00000001051fed20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x00000001051dce58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x00000001051ff5cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x00000001051ce59c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x000000010521e9f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x000000010521eb70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x000000010522f000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 08:23:58.987" endtime="20250923 08:24:09.176"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 08:24:09.176" endtime="20250923 08:24:09.176"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:24:09.177" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:24:09.176" endtime="20250923 08:24:09.181"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:10.183" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:24:09.181" endtime="20250923 08:24:10.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:24:10.184" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:24:10.184" endtime="20250923 08:24:10.184"/>
</kw>
<status status="PASS" starttime="20250923 08:24:09.176" endtime="20250923 08:24:10.184"/>
</kw>
<status status="PASS" starttime="20250923 08:24:09.176" endtime="20250923 08:24:10.184"/>
</kw>
<doc>Test that description field validation works</doc>
<tag>crud</tag>
<tag>negative</tag>
<tag>validation</tag>
<status status="FAIL" starttime="20250923 08:23:54.596" endtime="20250923 08:24:10.184">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000105237418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x000000010522f3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000104d58ec4 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73040
3   chromedriver                        0x0000000104da142c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 369336
4   chromedriver                        0x0000000104d96220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
5   chromedriver                        0x0000000104d95cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
6   chromedriver                        0x0000000104de1604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
7   chromedriver                        0x0000000104d940d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
8   chromedriver                        0x00000001051fbb08 cxxbridge1$str$ptr + 2638060
9   chromedriver                        0x00000001051fed20 cxxbridge1$str$ptr + 2650884
10  chromedriver                        0x00000001051dce58 cxxbridge1$str$ptr + 2511932
11  chromedriver                        0x00000001051ff5cc cxxbridge1$str$ptr + 2653104
12  chromedriver                        0x00000001051ce59c cxxbridge1$str$ptr + 2452352
13  chromedriver                        0x000000010521e9f0 cxxbridge1$str$ptr + 2781140
14  chromedriver                        0x000000010521eb70 cxxbridge1$str$ptr + 2781524
15  chromedriver                        0x000000010522f000 cxxbridge1$str$ptr + 2848228
16  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
17  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</status>
</test>
<test id="s1-t7" name="TC019 - Edit Existing Dependency" line="115">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:24:10.186" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:24:10.186" endtime="20250923 08:24:10.191"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:11.193" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:24:10.191" endtime="20250923 08:24:11.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:24:11.194" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:24:11.194" endtime="20250923 08:24:11.194"/>
</kw>
<status status="PASS" starttime="20250923 08:24:10.186" endtime="20250923 08:24:11.194"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:24:11.195" endtime="20250923 08:24:11.204"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:12.206" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:24:11.204" endtime="20250923 08:24:12.206"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:24:12.207" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:24:12.206" endtime="20250923 08:24:12.221"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:14.222" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:24:12.221" endtime="20250923 08:24:14.223"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:14.223" endtime="20250923 08:24:14.238"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:14.238" endtime="20250923 08:24:14.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:24:14.248" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:24:14.248" endtime="20250923 08:24:14.248"/>
</kw>
<status status="PASS" starttime="20250923 08:24:11.195" endtime="20250923 08:24:14.248"/>
</kw>
<status status="PASS" starttime="20250923 08:24:11.195" endtime="20250923 08:24:14.249"/>
</kw>
<status status="PASS" starttime="20250923 08:24:10.185" endtime="20250923 08:24:14.249"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${original_name}</var>
<arg>EditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:24:14.249" level="INFO">${timestamp} = 20250923_082414</msg>
<status status="PASS" starttime="20250923 08:24:14.249" endtime="20250923 08:24:14.249"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:24:14.249" level="INFO">${unique_name} = EditTest_20250923_082414</msg>
<status status="PASS" starttime="20250923 08:24:14.249" endtime="20250923 08:24:14.249"/>
</kw>
<msg timestamp="20250923 08:24:14.249" level="INFO">${original_name} = EditTest_20250923_082414</msg>
<status status="PASS" starttime="20250923 08:24:14.249" endtime="20250923 08:24:14.249"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${original_desc}</var>
<arg>Original description for edit test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:24:14.250" level="INFO">${original_desc} = Original description for edit test</msg>
<status status="PASS" starttime="20250923 08:24:14.249" endtime="20250923 08:24:14.250"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${original_name}</arg>
<arg>${original_desc}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:14.251" endtime="20250923 08:24:14.258"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:14.259" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:24:14.259" endtime="20250923 08:24:14.282"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:14.282" endtime="20250923 08:24:14.505"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:14.505" endtime="20250923 08:24:14.515"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:14.515" endtime="20250923 08:24:14.524"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:14.524" endtime="20250923 08:24:14.533"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:14.533" level="INFO">Typing text 'EditTest_20250923_082414' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:24:14.533" endtime="20250923 08:24:14.567"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:14.567" level="INFO">Typing text 'Original description for edit test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:24:14.567" endtime="20250923 08:24:14.600"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:24:14.601" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:24:14.600" endtime="20250923 08:24:14.625"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:24:14.626" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:24:14.625" endtime="20250923 08:24:14.640"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:24:14.641" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:24:14.641" endtime="20250923 08:24:14.655"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:24:14.655" endtime="20250923 08:24:14.656"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:14.656" endtime="20250923 08:24:14.663"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:14.663" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:24:14.663" endtime="20250923 08:24:14.688"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:24:14.689" endtime="20250923 08:24:14.699"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:16.701" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:24:14.699" endtime="20250923 08:24:16.701"/>
</kw>
<status status="PASS" starttime="20250923 08:24:14.250" endtime="20250923 08:24:16.701"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_name}</var>
<arg>${original_name}_EDITED</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:24:16.702" level="INFO">${new_name} = EditTest_20250923_082414_EDITED</msg>
<status status="PASS" starttime="20250923 08:24:16.701" endtime="20250923 08:24:16.702"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_desc}</var>
<arg>Updated description after edit</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:24:16.702" level="INFO">${new_desc} = Updated description after edit</msg>
<status status="PASS" starttime="20250923 08:24:16.702" endtime="20250923 08:24:16.702"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_team}</var>
<arg>Data Collection</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:24:16.702" level="INFO">${new_team} = Data Collection</msg>
<status status="PASS" starttime="20250923 08:24:16.702" endtime="20250923 08:24:16.702"/>
</kw>
<kw name="Edit Dependency" library="depflow_keywords">
<arg>${original_name}</arg>
<arg>${new_name}</arg>
<arg>${new_desc}</arg>
<arg>${new_team}</arg>
<doc>Edits an existing dependency</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${edit_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dependency_name}')]]//button[contains(@class, 'btn-edit')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:24:16.703" level="INFO">${edit_button} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'EditTest_20250923_082414')]]//button[contains(@class, 'btn-edit')]</msg>
<status status="PASS" starttime="20250923 08:24:16.703" endtime="20250923 08:24:16.703"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:16.704" level="INFO">Clicking element 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'EditTest_20250923_082414')]]//button[contains(@class, 'btn-edit')]'.</msg>
<msg timestamp="20250923 08:24:26.963" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-5.png"&gt;&lt;img src="selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:24:26.963" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'EditTest_20250923_082414')]]//button[contains(@class, 'btn-edit')]' not found.</msg>
<status status="FAIL" starttime="20250923 08:24:16.703" endtime="20250923 08:24:26.985"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 08:24:26.985" endtime="20250923 08:24:26.985"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_name}' != '${EMPTY}'</arg>
<arg>Clear Element Text And Input</arg>
<arg>${DEP_NAME_FIELD}</arg>
<arg>${new_name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 08:24:26.985" endtime="20250923 08:24:26.985"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_description}' != '${EMPTY}'</arg>
<arg>Clear Element Text And Input</arg>
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${new_description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 08:24:26.985" endtime="20250923 08:24:26.985"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${new_team}' != '${EMPTY}'</arg>
<arg>Select From List By Label</arg>
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${new_team}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250923 08:24:26.985" endtime="20250923 08:24:26.985"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 08:24:26.985" endtime="20250923 08:24:26.985"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" starttime="20250923 08:24:26.985" endtime="20250923 08:24:26.985"/>
</kw>
<status status="FAIL" starttime="20250923 08:24:16.702" endtime="20250923 08:24:26.985"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${new_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 08:24:26.985" endtime="20250923 08:24:26.985"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${original_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 08:24:26.985" endtime="20250923 08:24:26.985"/>
</kw>
<kw name="Verify Notification Message" library="depflow_keywords">
<arg>successfully</arg>
<doc>Verifies notification message appears</doc>
<status status="NOT RUN" starttime="20250923 08:24:26.985" endtime="20250923 08:24:26.985"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:24:26.986" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:24:26.986" endtime="20250923 08:24:26.990"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:27.990" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:24:26.990" endtime="20250923 08:24:27.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:24:27.991" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:24:27.991" endtime="20250923 08:24:27.991"/>
</kw>
<status status="PASS" starttime="20250923 08:24:26.986" endtime="20250923 08:24:27.991"/>
</kw>
<status status="PASS" starttime="20250923 08:24:26.985" endtime="20250923 08:24:27.991"/>
</kw>
<doc>Test editing an existing dependency</doc>
<tag>crud</tag>
<tag>edit</tag>
<tag>update</tag>
<status status="FAIL" starttime="20250923 08:24:10.185" endtime="20250923 08:24:27.991">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'EditTest_20250923_082414')]]//button[contains(@class, 'btn-edit')]' not found.</status>
</test>
<test id="s1-t8" name="TC020 - Delete Dependency Successfully" line="136">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:24:27.994" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:24:27.993" endtime="20250923 08:24:27.998"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:29.001" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:24:27.999" endtime="20250923 08:24:29.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:24:29.002" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:24:29.001" endtime="20250923 08:24:29.002"/>
</kw>
<status status="PASS" starttime="20250923 08:24:27.992" endtime="20250923 08:24:29.002"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:24:29.002" endtime="20250923 08:24:29.011"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:30.012" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:24:29.011" endtime="20250923 08:24:30.012"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:24:30.013" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:24:30.012" endtime="20250923 08:24:30.027"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:32.029" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:24:30.027" endtime="20250923 08:24:32.029"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:32.030" endtime="20250923 08:24:32.043"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:32.043" endtime="20250923 08:24:32.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:24:32.055" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:24:32.055" endtime="20250923 08:24:32.055"/>
</kw>
<status status="PASS" starttime="20250923 08:24:29.002" endtime="20250923 08:24:32.055"/>
</kw>
<status status="PASS" starttime="20250923 08:24:29.002" endtime="20250923 08:24:32.055"/>
</kw>
<status status="PASS" starttime="20250923 08:24:27.992" endtime="20250923 08:24:32.055"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>DeleteTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:24:32.056" level="INFO">${timestamp} = 20250923_082432</msg>
<status status="PASS" starttime="20250923 08:24:32.056" endtime="20250923 08:24:32.056"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:24:32.056" level="INFO">${unique_name} = DeleteTest_20250923_082432</msg>
<status status="PASS" starttime="20250923 08:24:32.056" endtime="20250923 08:24:32.056"/>
</kw>
<msg timestamp="20250923 08:24:32.056" level="INFO">${dep_name} = DeleteTest_20250923_082432</msg>
<status status="PASS" starttime="20250923 08:24:32.055" endtime="20250923 08:24:32.056"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency created for deletion test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:24:32.056" level="INFO">${description} = Dependency created for deletion test</msg>
<status status="PASS" starttime="20250923 08:24:32.056" endtime="20250923 08:24:32.056"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:32.057" endtime="20250923 08:24:32.066"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:32.066" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:24:32.066" endtime="20250923 08:24:32.089"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:32.089" endtime="20250923 08:24:32.103"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:32.103" endtime="20250923 08:24:32.112"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:32.112" endtime="20250923 08:24:32.121"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:32.121" endtime="20250923 08:24:32.128"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:32.129" level="INFO">Typing text 'DeleteTest_20250923_082432' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:24:32.128" endtime="20250923 08:24:32.162"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:32.162" level="INFO">Typing text 'Dependency created for deletion test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:24:32.162" endtime="20250923 08:24:32.198"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:24:32.198" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:24:32.198" endtime="20250923 08:24:32.398"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:24:32.399" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:24:32.399" endtime="20250923 08:24:32.417"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:24:32.417" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:24:32.417" endtime="20250923 08:24:32.432"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:24:32.432" endtime="20250923 08:24:32.433"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:32.433" endtime="20250923 08:24:32.440"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:32.440" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:24:32.440" endtime="20250923 08:24:32.465"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:24:32.465" endtime="20250923 08:24:32.473"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:34.475" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:24:32.474" endtime="20250923 08:24:34.476"/>
</kw>
<status status="PASS" starttime="20250923 08:24:32.056" endtime="20250923 08:24:34.476"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with confirmation dialog handling</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dependency_name}')]]//button[contains(@class, 'btn-delete')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:24:34.476" level="INFO">${delete_button} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'DeleteTest_20250923_082432')]]//button[contains(@class, 'btn-delete')]</msg>
<status status="PASS" starttime="20250923 08:24:34.476" endtime="20250923 08:24:34.476"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:34.477" level="INFO">Clicking element 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'DeleteTest_20250923_082432')]]//button[contains(@class, 'btn-delete')]'.</msg>
<msg timestamp="20250923 08:24:44.699" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-6.png"&gt;&lt;img src="selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:24:44.700" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'DeleteTest_20250923_082432')]]//button[contains(@class, 'btn-delete')]' not found.</msg>
<status status="FAIL" starttime="20250923 08:24:34.477" endtime="20250923 08:24:44.700"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<status status="NOT RUN" starttime="20250923 08:24:44.700" endtime="20250923 08:24:44.700"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 08:24:44.700" endtime="20250923 08:24:44.700"/>
</kw>
<status status="FAIL" starttime="20250923 08:24:34.476" endtime="20250923 08:24:44.700"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 08:24:44.700" endtime="20250923 08:24:44.700"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:24:44.702" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:24:44.701" endtime="20250923 08:24:44.705"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:45.706" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:24:44.705" endtime="20250923 08:24:45.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:24:45.706" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:24:45.706" endtime="20250923 08:24:45.706"/>
</kw>
<status status="PASS" starttime="20250923 08:24:44.701" endtime="20250923 08:24:45.707"/>
</kw>
<status status="PASS" starttime="20250923 08:24:44.701" endtime="20250923 08:24:45.707"/>
</kw>
<doc>Test successful deletion of a dependency with confirmation</doc>
<tag>confirmation</tag>
<tag>crud</tag>
<tag>delete</tag>
<status status="FAIL" starttime="20250923 08:24:27.992" endtime="20250923 08:24:45.707">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'DeleteTest_20250923_082432')]]//button[contains(@class, 'btn-delete')]' not found.</status>
</test>
<test id="s1-t9" name="TC021 - Delete Dependency Cancel Confirmation" line="151">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:24:45.709" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:24:45.709" endtime="20250923 08:24:45.714"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:46.716" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:24:45.714" endtime="20250923 08:24:46.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:24:46.717" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:24:46.717" endtime="20250923 08:24:46.717"/>
</kw>
<status status="PASS" starttime="20250923 08:24:45.708" endtime="20250923 08:24:46.717"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:24:46.718" endtime="20250923 08:24:46.727"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:47.730" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:24:46.727" endtime="20250923 08:24:47.730"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:24:47.731" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:24:47.730" endtime="20250923 08:24:47.741"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:49.742" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:24:47.741" endtime="20250923 08:24:49.742"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:49.744" endtime="20250923 08:24:49.760"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:49.761" endtime="20250923 08:24:49.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:24:49.772" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:24:49.772" endtime="20250923 08:24:49.772"/>
</kw>
<status status="PASS" starttime="20250923 08:24:46.718" endtime="20250923 08:24:49.772"/>
</kw>
<status status="PASS" starttime="20250923 08:24:46.717" endtime="20250923 08:24:49.772"/>
</kw>
<status status="PASS" starttime="20250923 08:24:45.708" endtime="20250923 08:24:49.772"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>DeleteCancelTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:24:49.772" level="INFO">${timestamp} = 20250923_082449</msg>
<status status="PASS" starttime="20250923 08:24:49.772" endtime="20250923 08:24:49.772"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:24:49.773" level="INFO">${unique_name} = DeleteCancelTest_20250923_082449</msg>
<status status="PASS" starttime="20250923 08:24:49.772" endtime="20250923 08:24:49.773"/>
</kw>
<msg timestamp="20250923 08:24:49.773" level="INFO">${dep_name} = DeleteCancelTest_20250923_082449</msg>
<status status="PASS" starttime="20250923 08:24:49.772" endtime="20250923 08:24:49.773"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for delete cancel test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:24:49.773" level="INFO">${description} = Dependency for delete cancel test</msg>
<status status="PASS" starttime="20250923 08:24:49.773" endtime="20250923 08:24:49.773"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:49.774" endtime="20250923 08:24:49.783"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:49.783" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:24:49.783" endtime="20250923 08:24:49.812"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:49.812" endtime="20250923 08:24:49.831"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:49.831" endtime="20250923 08:24:49.840"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:49.840" endtime="20250923 08:24:49.848"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:49.848" endtime="20250923 08:24:49.858"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:49.860" level="INFO">Typing text 'DeleteCancelTest_20250923_082449' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:24:49.859" endtime="20250923 08:24:49.903"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:49.904" level="INFO">Typing text 'Dependency for delete cancel test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:24:49.903" endtime="20250923 08:24:49.941"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:24:49.941" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:24:49.941" endtime="20250923 08:24:49.970"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:24:49.970" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:24:49.970" endtime="20250923 08:24:49.986"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:24:49.986" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:24:49.986" endtime="20250923 08:24:50.001"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:24:50.002" endtime="20250923 08:24:50.003"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:24:50.003" endtime="20250923 08:24:50.010"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:50.011" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:24:50.011" endtime="20250923 08:24:50.037"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:24:50.037" endtime="20250923 08:24:50.049"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:24:52.050" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:24:50.049" endtime="20250923 08:24:52.050"/>
</kw>
<status status="PASS" starttime="20250923 08:24:49.773" endtime="20250923 08:24:52.050"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-delete')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:24:52.052" level="INFO">${delete_button} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'DeleteCancelTest_20250923_082449')]]//button[contains(@class, 'btn-delete')]</msg>
<status status="PASS" starttime="20250923 08:24:52.051" endtime="20250923 08:24:52.052"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:24:52.053" level="INFO">Clicking element 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'DeleteCancelTest_20250923_082449')]]//button[contains(@class, 'btn-delete')]'.</msg>
<msg timestamp="20250923 08:25:02.302" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-7.png"&gt;&lt;img src="selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:25:02.302" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'DeleteCancelTest_20250923_082449')]]//button[contains(@class, 'btn-delete')]' not found.</msg>
<status status="FAIL" starttime="20250923 08:24:52.052" endtime="20250923 08:25:02.302"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>DISMISS</arg>
<doc>Handles the current alert and returns its message.</doc>
<status status="NOT RUN" starttime="20250923 08:25:02.303" endtime="20250923 08:25:02.303"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 08:25:02.303" endtime="20250923 08:25:02.303"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 08:25:02.303" endtime="20250923 08:25:02.303"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:25:02.304" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:25:02.303" endtime="20250923 08:25:02.307"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:03.308" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:25:02.307" endtime="20250923 08:25:03.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:25:03.310" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:25:03.309" endtime="20250923 08:25:03.310"/>
</kw>
<status status="PASS" starttime="20250923 08:25:02.303" endtime="20250923 08:25:03.310"/>
</kw>
<status status="PASS" starttime="20250923 08:25:02.303" endtime="20250923 08:25:03.310"/>
</kw>
<doc>Test canceling dependency deletion via confirmation dialog</doc>
<tag>cancel</tag>
<tag>confirmation</tag>
<tag>crud</tag>
<tag>delete</tag>
<status status="FAIL" starttime="20250923 08:24:45.707" endtime="20250923 08:25:03.310">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'DeleteCancelTest_20250923_082449')]]//button[contains(@class, 'btn-delete')]' not found.</status>
</test>
<test id="s1-t10" name="TC022 - Cancel Add Dependency Operation" line="169">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:25:03.312" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:25:03.312" endtime="20250923 08:25:03.317"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:04.318" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:25:03.317" endtime="20250923 08:25:04.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:25:04.319" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:25:04.319" endtime="20250923 08:25:04.319"/>
</kw>
<status status="PASS" starttime="20250923 08:25:03.312" endtime="20250923 08:25:04.319"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:25:04.320" endtime="20250923 08:25:04.327"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:05.327" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:25:04.327" endtime="20250923 08:25:05.328"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:25:05.330" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:25:05.328" endtime="20250923 08:25:05.341"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:07.343" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:25:05.341" endtime="20250923 08:25:07.343"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:07.344" endtime="20250923 08:25:07.359"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:07.359" endtime="20250923 08:25:07.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:25:07.370" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:25:07.370" endtime="20250923 08:25:07.370"/>
</kw>
<status status="PASS" starttime="20250923 08:25:04.320" endtime="20250923 08:25:07.370"/>
</kw>
<status status="PASS" starttime="20250923 08:25:04.319" endtime="20250923 08:25:07.370"/>
</kw>
<status status="PASS" starttime="20250923 08:25:03.311" endtime="20250923 08:25:07.370"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:07.370" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:25:07.370" endtime="20250923 08:25:07.397"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:07.397" endtime="20250923 08:25:07.411"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>Cancelled Dependency</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:07.411" level="INFO">Typing text 'Cancelled Dependency' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:25:07.411" endtime="20250923 08:25:07.467"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>This should not be saved</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:07.467" level="INFO">Typing text 'This should not be saved' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:25:07.467" endtime="20250923 08:25:07.503"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CANCEL_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:07.504" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-cancel')]'.</msg>
<status status="PASS" starttime="20250923 08:25:07.504" endtime="20250923 08:25:07.538"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:25:07.538" endtime="20250923 08:25:07.550"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>Cancelled Dependency</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<msg timestamp="20250923 08:25:17.606" level="INFO">Current page does not contain element 'xpath://div[@class='dependency-name' and contains(text(), 'Cancelled Dependency')]'.</msg>
<status status="PASS" starttime="20250923 08:25:07.551" endtime="20250923 08:25:17.606"/>
</kw>
<status status="PASS" starttime="20250923 08:25:07.550" endtime="20250923 08:25:17.606"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:25:17.608" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:25:17.607" endtime="20250923 08:25:17.613"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:18.616" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:25:17.614" endtime="20250923 08:25:18.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:25:18.617" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:25:18.617" endtime="20250923 08:25:18.617"/>
</kw>
<status status="PASS" starttime="20250923 08:25:17.607" endtime="20250923 08:25:18.617"/>
</kw>
<status status="PASS" starttime="20250923 08:25:17.607" endtime="20250923 08:25:18.617"/>
</kw>
<doc>Test canceling the add dependency operation</doc>
<tag>cancel</tag>
<tag>crud</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 08:25:03.310" endtime="20250923 08:25:18.617"/>
</test>
<test id="s1-t11" name="TC023 - Inline Edit Status Field" line="187">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:25:18.620" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:25:18.619" endtime="20250923 08:25:18.625"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:19.626" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:25:18.625" endtime="20250923 08:25:19.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:25:19.627" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:25:19.626" endtime="20250923 08:25:19.627"/>
</kw>
<status status="PASS" starttime="20250923 08:25:18.619" endtime="20250923 08:25:19.627"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:25:19.627" endtime="20250923 08:25:19.639"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:20.639" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:25:19.639" endtime="20250923 08:25:20.639"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:25:20.640" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:25:20.639" endtime="20250923 08:25:20.650"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:22.651" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:25:20.650" endtime="20250923 08:25:22.652"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:22.652" endtime="20250923 08:25:22.667"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:22.667" endtime="20250923 08:25:22.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:25:22.678" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:25:22.678" endtime="20250923 08:25:22.678"/>
</kw>
<status status="PASS" starttime="20250923 08:25:19.627" endtime="20250923 08:25:22.678"/>
</kw>
<status status="PASS" starttime="20250923 08:25:19.627" endtime="20250923 08:25:22.678"/>
</kw>
<status status="PASS" starttime="20250923 08:25:18.619" endtime="20250923 08:25:22.678"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>StatusEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:25:22.679" level="INFO">${timestamp} = 20250923_082522</msg>
<status status="PASS" starttime="20250923 08:25:22.679" endtime="20250923 08:25:22.679"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:25:22.680" level="INFO">${unique_name} = StatusEditTest_20250923_082522</msg>
<status status="PASS" starttime="20250923 08:25:22.679" endtime="20250923 08:25:22.680"/>
</kw>
<msg timestamp="20250923 08:25:22.680" level="INFO">${dep_name} = StatusEditTest_20250923_082522</msg>
<status status="PASS" starttime="20250923 08:25:22.679" endtime="20250923 08:25:22.680"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for status inline editing</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:25:22.680" level="INFO">${description} = Dependency for status inline editing</msg>
<status status="PASS" starttime="20250923 08:25:22.680" endtime="20250923 08:25:22.680"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:22.681" endtime="20250923 08:25:22.689"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:22.689" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:25:22.689" endtime="20250923 08:25:22.711"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:22.711" endtime="20250923 08:25:22.944"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:22.944" endtime="20250923 08:25:22.955"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:22.955" endtime="20250923 08:25:22.964"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:22.964" endtime="20250923 08:25:22.971"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:22.972" level="INFO">Typing text 'StatusEditTest_20250923_082522' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:25:22.971" endtime="20250923 08:25:23.007"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:23.007" level="INFO">Typing text 'Dependency for status inline editing' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:25:23.007" endtime="20250923 08:25:23.144"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:25:23.145" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:25:23.144" endtime="20250923 08:25:23.168"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:25:23.169" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:25:23.168" endtime="20250923 08:25:23.184"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:25:23.185" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:25:23.184" endtime="20250923 08:25:23.198"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:25:23.198" endtime="20250923 08:25:23.199"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:23.199" endtime="20250923 08:25:23.206"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:23.206" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:25:23.206" endtime="20250923 08:25:23.232"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:25:23.232" endtime="20250923 08:25:23.241"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:25.242" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:25:23.242" endtime="20250923 08:25:25.243"/>
</kw>
<status status="PASS" starttime="20250923 08:25:22.680" endtime="20250923 08:25:25.243"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status_dropdown}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//select[contains(@class, 'status-dropdown')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:25:25.244" level="INFO">${status_dropdown} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'StatusEditTest_20250923_082522')]]//select[contains(@class, 'status-dropdown')]</msg>
<status status="PASS" starttime="20250923 08:25:25.244" endtime="20250923 08:25:25.244"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${status_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:25.245" level="INFO">Clicking element 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'StatusEditTest_20250923_082522')]]//select[contains(@class, 'status-dropdown')]'.</msg>
<msg timestamp="20250923 08:25:35.459" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-8.png"&gt;&lt;img src="selenium-screenshot-8.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:25:35.460" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'StatusEditTest_20250923_082522')]]//select[contains(@class, 'status-dropdown')]' not found.</msg>
<status status="FAIL" starttime="20250923 08:25:25.245" endtime="20250923 08:25:35.460"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${status_dropdown}</arg>
<arg>IN PROGRESS</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 08:25:35.460" endtime="20250923 08:25:35.460"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 08:25:35.460" endtime="20250923 08:25:35.460"/>
</kw>
<kw name="Get Selected List Label" library="SeleniumLibrary">
<var>${updated_status}</var>
<arg>${status_dropdown}</arg>
<doc>Returns the label of selected option from selection list ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 08:25:35.460" endtime="20250923 08:25:35.460"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${updated_status}</arg>
<arg>IN PROGRESS</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250923 08:25:35.460" endtime="20250923 08:25:35.460"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:25:35.461" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:25:35.461" endtime="20250923 08:25:35.464"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:36.466" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:25:35.465" endtime="20250923 08:25:36.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:25:36.467" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:25:36.467" endtime="20250923 08:25:36.467"/>
</kw>
<status status="PASS" starttime="20250923 08:25:35.461" endtime="20250923 08:25:36.468"/>
</kw>
<status status="PASS" starttime="20250923 08:25:35.461" endtime="20250923 08:25:36.468"/>
</kw>
<doc>Test inline editing of status field via dropdown</doc>
<tag>crud</tag>
<tag>inline_edit</tag>
<tag>status</tag>
<tag>update</tag>
<status status="FAIL" starttime="20250923 08:25:18.618" endtime="20250923 08:25:36.468">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'StatusEditTest_20250923_082522')]]//select[contains(@class, 'status-dropdown')]' not found.</status>
</test>
<test id="s1-t12" name="TC024 - Inline Edit Priority Field" line="206">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:25:36.471" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:25:36.470" endtime="20250923 08:25:36.476"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:37.477" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:25:36.476" endtime="20250923 08:25:37.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:25:37.478" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:25:37.478" endtime="20250923 08:25:37.478"/>
</kw>
<status status="PASS" starttime="20250923 08:25:36.470" endtime="20250923 08:25:37.478"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:25:37.480" endtime="20250923 08:25:37.488"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:38.490" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:25:37.489" endtime="20250923 08:25:38.491"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:25:38.492" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:25:38.491" endtime="20250923 08:25:38.502"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:40.503" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:25:38.502" endtime="20250923 08:25:40.503"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:40.503" endtime="20250923 08:25:40.518"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:40.518" endtime="20250923 08:25:40.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:25:40.529" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:25:40.529" endtime="20250923 08:25:40.529"/>
</kw>
<status status="PASS" starttime="20250923 08:25:37.479" endtime="20250923 08:25:40.529"/>
</kw>
<status status="PASS" starttime="20250923 08:25:37.479" endtime="20250923 08:25:40.529"/>
</kw>
<status status="PASS" starttime="20250923 08:25:36.470" endtime="20250923 08:25:40.529"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>PriorityEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:25:40.530" level="INFO">${timestamp} = 20250923_082540</msg>
<status status="PASS" starttime="20250923 08:25:40.529" endtime="20250923 08:25:40.530"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:25:40.530" level="INFO">${unique_name} = PriorityEditTest_20250923_082540</msg>
<status status="PASS" starttime="20250923 08:25:40.530" endtime="20250923 08:25:40.530"/>
</kw>
<msg timestamp="20250923 08:25:40.530" level="INFO">${dep_name} = PriorityEditTest_20250923_082540</msg>
<status status="PASS" starttime="20250923 08:25:40.529" endtime="20250923 08:25:40.530"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for priority inline editing</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:25:40.530" level="INFO">${description} = Dependency for priority inline editing</msg>
<status status="PASS" starttime="20250923 08:25:40.530" endtime="20250923 08:25:40.530"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>LOW</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:40.531" endtime="20250923 08:25:40.539"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:40.539" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:25:40.539" endtime="20250923 08:25:40.562"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:40.562" endtime="20250923 08:25:40.578"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:40.578" endtime="20250923 08:25:40.587"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:40.587" endtime="20250923 08:25:40.596"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:40.596" endtime="20250923 08:25:40.609"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:40.610" level="INFO">Typing text 'PriorityEditTest_20250923_082540' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:25:40.609" endtime="20250923 08:25:40.657"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:40.658" level="INFO">Typing text 'Dependency for priority inline editing' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:25:40.657" endtime="20250923 08:25:40.692"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:25:40.694" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:25:40.692" endtime="20250923 08:25:40.721"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:25:40.722" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:25:40.721" endtime="20250923 08:25:40.738"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:25:40.738" level="INFO">Selecting options from selection list 'id:addPriority' by value LOW.</msg>
<status status="PASS" starttime="20250923 08:25:40.738" endtime="20250923 08:25:40.764"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:25:40.764" endtime="20250923 08:25:40.765"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:40.765" endtime="20250923 08:25:40.773"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:40.773" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:25:40.773" endtime="20250923 08:25:40.797"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:25:40.798" endtime="20250923 08:25:40.807"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:42.809" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:25:40.807" endtime="20250923 08:25:42.810"/>
</kw>
<status status="PASS" starttime="20250923 08:25:40.530" endtime="20250923 08:25:42.810"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${priority_dropdown}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//select[contains(@class, 'priority-dropdown')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:25:42.811" level="INFO">${priority_dropdown} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'PriorityEditTest_20250923_082540')]]//select[contains(@class, 'priority-dropdown')]</msg>
<status status="PASS" starttime="20250923 08:25:42.810" endtime="20250923 08:25:42.811"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${priority_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:42.812" level="INFO">Clicking element 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'PriorityEditTest_20250923_082540')]]//select[contains(@class, 'priority-dropdown')]'.</msg>
<msg timestamp="20250923 08:25:53.061" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-9.png"&gt;&lt;img src="selenium-screenshot-9.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:25:53.062" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'PriorityEditTest_20250923_082540')]]//select[contains(@class, 'priority-dropdown')]' not found.</msg>
<status status="FAIL" starttime="20250923 08:25:42.811" endtime="20250923 08:25:53.062"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${priority_dropdown}</arg>
<arg>HIGH</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="NOT RUN" starttime="20250923 08:25:53.062" endtime="20250923 08:25:53.062"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 08:25:53.062" endtime="20250923 08:25:53.062"/>
</kw>
<kw name="Get Selected List Label" library="SeleniumLibrary">
<var>${updated_priority}</var>
<arg>${priority_dropdown}</arg>
<doc>Returns the label of selected option from selection list ``locator``.</doc>
<status status="NOT RUN" starttime="20250923 08:25:53.063" endtime="20250923 08:25:53.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${updated_priority}</arg>
<arg>HIGH</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250923 08:25:53.063" endtime="20250923 08:25:53.063"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:25:53.064" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:25:53.063" endtime="20250923 08:25:53.067"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:54.068" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:25:53.067" endtime="20250923 08:25:54.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:25:54.068" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:25:54.068" endtime="20250923 08:25:54.069"/>
</kw>
<status status="PASS" starttime="20250923 08:25:53.063" endtime="20250923 08:25:54.069"/>
</kw>
<status status="PASS" starttime="20250923 08:25:53.063" endtime="20250923 08:25:54.069"/>
</kw>
<doc>Test inline editing of priority field via dropdown</doc>
<tag>crud</tag>
<tag>inline_edit</tag>
<tag>priority</tag>
<tag>update</tag>
<status status="FAIL" starttime="20250923 08:25:36.469" endtime="20250923 08:25:54.069">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'PriorityEditTest_20250923_082540')]]//select[contains(@class, 'priority-dropdown')]' not found.</status>
</test>
<test id="s1-t13" name="TC025 - RBAC Admin Can Edit Any Dependency" line="225">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:25:54.073" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:25:54.073" endtime="20250923 08:25:54.078"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:55.080" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:25:54.078" endtime="20250923 08:25:55.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:25:55.080" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:25:55.080" endtime="20250923 08:25:55.080"/>
</kw>
<status status="PASS" starttime="20250923 08:25:54.072" endtime="20250923 08:25:55.080"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:25:55.081" endtime="20250923 08:25:55.089"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:56.090" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:25:55.089" endtime="20250923 08:25:56.091"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:25:56.092" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:25:56.091" endtime="20250923 08:25:56.103"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:25:58.105" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:25:56.103" endtime="20250923 08:25:58.105"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:58.105" endtime="20250923 08:25:58.120"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:58.121" endtime="20250923 08:25:58.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:25:58.130" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:25:58.130" endtime="20250923 08:25:58.130"/>
</kw>
<status status="PASS" starttime="20250923 08:25:55.081" endtime="20250923 08:25:58.130"/>
</kw>
<status status="PASS" starttime="20250923 08:25:55.081" endtime="20250923 08:25:58.130"/>
</kw>
<status status="PASS" starttime="20250923 08:25:54.072" endtime="20250923 08:25:58.130"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>AdminEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:25:58.131" level="INFO">${timestamp} = 20250923_082558</msg>
<status status="PASS" starttime="20250923 08:25:58.131" endtime="20250923 08:25:58.131"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:25:58.131" level="INFO">${unique_name} = AdminEditTest_20250923_082558</msg>
<status status="PASS" starttime="20250923 08:25:58.131" endtime="20250923 08:25:58.131"/>
</kw>
<msg timestamp="20250923 08:25:58.131" level="INFO">${dep_name} = AdminEditTest_20250923_082558</msg>
<status status="PASS" starttime="20250923 08:25:58.131" endtime="20250923 08:25:58.131"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for admin RBAC test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:25:58.131" level="INFO">${description} = Dependency for admin RBAC test</msg>
<status status="PASS" starttime="20250923 08:25:58.131" endtime="20250923 08:25:58.131"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:58.132" endtime="20250923 08:25:58.140"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:58.141" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:25:58.140" endtime="20250923 08:25:58.164"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:58.164" endtime="20250923 08:25:58.174"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:58.174" endtime="20250923 08:25:58.186"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:58.186" endtime="20250923 08:25:58.194"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:58.194" endtime="20250923 08:25:58.202"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:58.203" level="INFO">Typing text 'AdminEditTest_20250923_082558' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:25:58.202" endtime="20250923 08:25:58.240"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:58.240" level="INFO">Typing text 'Dependency for admin RBAC test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:25:58.240" endtime="20250923 08:25:58.280"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:25:58.281" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:25:58.280" endtime="20250923 08:25:58.306"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:25:58.307" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:25:58.306" endtime="20250923 08:25:58.321"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:25:58.321" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:25:58.321" endtime="20250923 08:25:58.338"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:25:58.338" endtime="20250923 08:25:58.338"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:25:58.339" endtime="20250923 08:25:58.346"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:25:58.346" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:25:58.346" endtime="20250923 08:25:58.373"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:25:58.373" endtime="20250923 08:25:58.381"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:00.382" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:25:58.381" endtime="20250923 08:26:00.382"/>
</kw>
<status status="PASS" starttime="20250923 08:25:58.131" endtime="20250923 08:26:00.382"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${edit_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-edit')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:26:00.383" level="INFO">${edit_button} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'AdminEditTest_20250923_082558')]]//button[contains(@class, 'btn-edit')]</msg>
<status status="PASS" starttime="20250923 08:26:00.382" endtime="20250923 08:26:00.383"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:26:10.631" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-10.png"&gt;&lt;img src="selenium-screenshot-10.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:26:10.632" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'AdminEditTest_20250923_082558')]]//button[contains(@class, 'btn-edit')]' not found.</msg>
<status status="FAIL" starttime="20250923 08:26:00.383" endtime="20250923 08:26:10.632"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_name}</var>
<arg>${dep_name}_AdminEdited</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 08:26:10.632" endtime="20250923 08:26:10.632"/>
</kw>
<kw name="Edit Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${new_name}</arg>
<doc>Edits an existing dependency</doc>
<status status="NOT RUN" starttime="20250923 08:26:10.632" endtime="20250923 08:26:10.632"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${new_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 08:26:10.632" endtime="20250923 08:26:10.632"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:26:10.633" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:26:10.632" endtime="20250923 08:26:10.638"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:11.640" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:26:10.638" endtime="20250923 08:26:11.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:26:11.640" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:26:11.640" endtime="20250923 08:26:11.640"/>
</kw>
<status status="PASS" starttime="20250923 08:26:10.632" endtime="20250923 08:26:11.640"/>
</kw>
<status status="PASS" starttime="20250923 08:26:10.632" endtime="20250923 08:26:11.640"/>
</kw>
<doc>Test that admin users can edit any dependency</doc>
<tag>admin</tag>
<tag>crud</tag>
<tag>edit</tag>
<tag>rbac</tag>
<status status="FAIL" starttime="20250923 08:25:54.070" endtime="20250923 08:26:11.640">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'AdminEditTest_20250923_082558')]]//button[contains(@class, 'btn-edit')]' not found.</status>
</test>
<test id="s1-t14" name="TC026 - RBAC Admin Can Delete Any Dependency" line="243">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:26:11.642" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:26:11.641" endtime="20250923 08:26:11.646"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:12.647" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:26:11.646" endtime="20250923 08:26:12.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:26:12.647" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:26:12.647" endtime="20250923 08:26:12.647"/>
</kw>
<status status="PASS" starttime="20250923 08:26:11.641" endtime="20250923 08:26:12.647"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:26:12.648" endtime="20250923 08:26:12.657"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:13.658" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:26:12.657" endtime="20250923 08:26:13.658"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:26:13.660" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:26:13.659" endtime="20250923 08:26:13.667"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:15.668" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:26:13.668" endtime="20250923 08:26:15.669"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:26:15.669" endtime="20250923 08:26:15.683"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:26:15.683" endtime="20250923 08:26:15.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:26:15.693" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:26:15.693" endtime="20250923 08:26:15.693"/>
</kw>
<status status="PASS" starttime="20250923 08:26:12.648" endtime="20250923 08:26:15.694"/>
</kw>
<status status="PASS" starttime="20250923 08:26:12.647" endtime="20250923 08:26:15.694"/>
</kw>
<status status="PASS" starttime="20250923 08:26:11.641" endtime="20250923 08:26:15.694"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>AdminDeleteTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:26:15.695" level="INFO">${timestamp} = 20250923_082615</msg>
<status status="PASS" starttime="20250923 08:26:15.695" endtime="20250923 08:26:15.695"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:26:15.695" level="INFO">${unique_name} = AdminDeleteTest_20250923_082615</msg>
<status status="PASS" starttime="20250923 08:26:15.695" endtime="20250923 08:26:15.695"/>
</kw>
<msg timestamp="20250923 08:26:15.695" level="INFO">${dep_name} = AdminDeleteTest_20250923_082615</msg>
<status status="PASS" starttime="20250923 08:26:15.694" endtime="20250923 08:26:15.695"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for admin delete RBAC test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:26:15.695" level="INFO">${description} = Dependency for admin delete RBAC test</msg>
<status status="PASS" starttime="20250923 08:26:15.695" endtime="20250923 08:26:15.695"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:26:15.696" endtime="20250923 08:26:15.705"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:26:15.705" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:26:15.705" endtime="20250923 08:26:15.730"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:26:15.730" endtime="20250923 08:26:15.741"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:26:15.741" endtime="20250923 08:26:15.752"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:26:15.752" endtime="20250923 08:26:15.762"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:26:15.762" endtime="20250923 08:26:15.771"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:26:15.771" level="INFO">Typing text 'AdminDeleteTest_20250923_082615' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:26:15.771" endtime="20250923 08:26:15.808"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:26:15.809" level="INFO">Typing text 'Dependency for admin delete RBAC test' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:26:15.808" endtime="20250923 08:26:15.845"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:26:15.846" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:26:15.845" endtime="20250923 08:26:15.979"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:26:15.979" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:26:15.979" endtime="20250923 08:26:15.995"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:26:15.995" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:26:15.995" endtime="20250923 08:26:16.011"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:26:16.012" endtime="20250923 08:26:16.012"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:26:16.012" endtime="20250923 08:26:16.019"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:26:16.020" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:26:16.020" endtime="20250923 08:26:16.049"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:26:16.049" endtime="20250923 08:26:16.060"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:18.060" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:26:16.060" endtime="20250923 08:26:18.060"/>
</kw>
<status status="PASS" starttime="20250923 08:26:15.696" endtime="20250923 08:26:18.061"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-delete')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:26:18.061" level="INFO">${delete_button} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'AdminDeleteTest_20250923_082615')]]//button[contains(@class, 'btn-delete')]</msg>
<status status="PASS" starttime="20250923 08:26:18.061" endtime="20250923 08:26:18.061"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:26:28.294" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-11.png"&gt;&lt;img src="selenium-screenshot-11.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:26:28.294" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'AdminDeleteTest_20250923_082615')]]//button[contains(@class, 'btn-delete')]' not found.</msg>
<status status="FAIL" starttime="20250923 08:26:18.061" endtime="20250923 08:26:28.294"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with confirmation dialog handling</doc>
<status status="NOT RUN" starttime="20250923 08:26:28.294" endtime="20250923 08:26:28.294"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 08:26:28.294" endtime="20250923 08:26:28.294"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:26:28.295" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:26:28.295" endtime="20250923 08:26:28.298"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:29.298" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:26:28.298" endtime="20250923 08:26:29.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:26:29.299" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:26:29.299" endtime="20250923 08:26:29.299"/>
</kw>
<status status="PASS" starttime="20250923 08:26:28.295" endtime="20250923 08:26:29.299"/>
</kw>
<status status="PASS" starttime="20250923 08:26:28.294" endtime="20250923 08:26:29.299"/>
</kw>
<doc>Test that admin users can delete any dependency</doc>
<tag>admin</tag>
<tag>crud</tag>
<tag>delete</tag>
<tag>rbac</tag>
<status status="FAIL" starttime="20250923 08:26:11.641" endtime="20250923 08:26:29.299">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'AdminDeleteTest_20250923_082615')]]//button[contains(@class, 'btn-delete')]' not found.</status>
</test>
<test id="s1-t15" name="TC027 - RBAC User Can Only Edit Own Dependencies" line="260">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:26:29.302" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:26:29.301" endtime="20250923 08:26:29.307"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:30.309" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:26:29.307" endtime="20250923 08:26:30.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:26:30.310" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:26:30.309" endtime="20250923 08:26:30.310"/>
</kw>
<status status="PASS" starttime="20250923 08:26:29.301" endtime="20250923 08:26:30.310"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:26:30.311" endtime="20250923 08:26:30.319"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:31.322" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:26:30.319" endtime="20250923 08:26:31.322"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:26:31.323" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:26:31.322" endtime="20250923 08:26:31.334"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:33.336" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:26:31.334" endtime="20250923 08:26:33.336"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:26:33.336" endtime="20250923 08:26:33.350"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:26:33.350" endtime="20250923 08:26:33.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:26:33.362" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:26:33.361" endtime="20250923 08:26:33.362"/>
</kw>
<status status="PASS" starttime="20250923 08:26:30.310" endtime="20250923 08:26:33.362"/>
</kw>
<status status="PASS" starttime="20250923 08:26:30.310" endtime="20250923 08:26:33.362"/>
</kw>
<status status="PASS" starttime="20250923 08:26:29.301" endtime="20250923 08:26:33.362"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:26:33.362" endtime="20250923 08:26:33.372"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:26:33.372" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-logout')]'.</msg>
<status status="PASS" starttime="20250923 08:26:33.372" endtime="20250923 08:26:33.468"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<msg timestamp="20250923 08:26:43.636" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-12.png"&gt;&lt;img src="selenium-screenshot-12.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:26:43.637" level="FAIL">Element 'id:userPanel' still visible after 10 seconds.</msg>
<status status="FAIL" starttime="20250923 08:26:33.469" endtime="20250923 08:26:43.637"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20250923 08:26:43.637" endtime="20250923 08:26:43.637"/>
</kw>
<status status="FAIL" starttime="20250923 08:26:33.362" endtime="20250923 08:26:43.637"/>
</kw>
<kw name="Login To DepFlow" library="depflow_keywords">
<arg>${USER_USERNAME}</arg>
<arg>${USER_PASSWORD}</arg>
<doc>Logs into DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 08:26:43.638" endtime="20250923 08:26:43.638"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 08:26:43.638" endtime="20250923 08:26:43.638"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>UserEditTest</arg>
<doc>Generates unique test data for test runs</doc>
<status status="NOT RUN" starttime="20250923 08:26:43.638" endtime="20250923 08:26:43.638"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency created by regular user</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 08:26:43.638" endtime="20250923 08:26:43.638"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<status status="NOT RUN" starttime="20250923 08:26:43.638" endtime="20250923 08:26:43.638"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${edit_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-edit')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 08:26:43.638" endtime="20250923 08:26:43.638"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${edit_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 08:26:43.638" endtime="20250923 08:26:43.638"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 08:26:43.638" endtime="20250923 08:26:43.638"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<status status="NOT RUN" starttime="20250923 08:26:43.638" endtime="20250923 08:26:43.638"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 08:26:43.638" endtime="20250923 08:26:43.638"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:26:43.639" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:26:43.638" endtime="20250923 08:26:43.641"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:44.642" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:26:43.641" endtime="20250923 08:26:44.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:26:44.642" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:26:44.642" endtime="20250923 08:26:44.643"/>
</kw>
<status status="PASS" starttime="20250923 08:26:43.638" endtime="20250923 08:26:44.643"/>
</kw>
<status status="PASS" starttime="20250923 08:26:43.638" endtime="20250923 08:26:44.643"/>
</kw>
<doc>Test that regular users can only edit dependencies they created</doc>
<tag>crud</tag>
<tag>edit</tag>
<tag>rbac</tag>
<tag>restriction</tag>
<tag>user</tag>
<status status="FAIL" starttime="20250923 08:26:29.300" endtime="20250923 08:26:44.643">Element 'id:userPanel' still visible after 10 seconds.</status>
</test>
<test id="s1-t16" name="TC028 - RBAC User Can Only Delete Own Dependencies" line="283">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:26:44.646" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:26:44.645" endtime="20250923 08:26:44.650"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:45.651" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:26:44.650" endtime="20250923 08:26:45.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:26:45.652" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:26:45.651" endtime="20250923 08:26:45.652"/>
</kw>
<status status="PASS" starttime="20250923 08:26:44.645" endtime="20250923 08:26:45.652"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:26:45.653" endtime="20250923 08:26:45.661"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:46.663" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:26:45.661" endtime="20250923 08:26:46.663"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:26:46.664" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:26:46.663" endtime="20250923 08:26:46.679"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:48.680" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:26:46.679" endtime="20250923 08:26:48.680"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:26:48.680" endtime="20250923 08:26:48.694"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:26:48.694" endtime="20250923 08:26:48.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:26:48.704" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:26:48.704" endtime="20250923 08:26:48.704"/>
</kw>
<status status="PASS" starttime="20250923 08:26:45.652" endtime="20250923 08:26:48.704"/>
</kw>
<status status="PASS" starttime="20250923 08:26:45.652" endtime="20250923 08:26:48.704"/>
</kw>
<status status="PASS" starttime="20250923 08:26:44.645" endtime="20250923 08:26:48.704"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:26:48.704" endtime="20250923 08:26:48.712"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:26:48.712" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-logout')]'.</msg>
<status status="PASS" starttime="20250923 08:26:48.712" endtime="20250923 08:26:48.738"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<msg timestamp="20250923 08:26:58.994" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-13.png"&gt;&lt;img src="selenium-screenshot-13.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:26:58.994" level="FAIL">Element 'id:userPanel' still visible after 10 seconds.</msg>
<status status="FAIL" starttime="20250923 08:26:48.738" endtime="20250923 08:26:58.995"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20250923 08:26:58.995" endtime="20250923 08:26:58.995"/>
</kw>
<status status="FAIL" starttime="20250923 08:26:48.704" endtime="20250923 08:26:58.995"/>
</kw>
<kw name="Login To DepFlow" library="depflow_keywords">
<arg>${USER_USERNAME}</arg>
<arg>${USER_PASSWORD}</arg>
<doc>Logs into DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 08:26:58.995" endtime="20250923 08:26:58.995"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 08:26:58.995" endtime="20250923 08:26:58.995"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>UserDeleteTest</arg>
<doc>Generates unique test data for test runs</doc>
<status status="NOT RUN" starttime="20250923 08:26:58.995" endtime="20250923 08:26:58.995"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Dependency for user delete RBAC test</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 08:26:58.995" endtime="20250923 08:26:58.995"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<status status="NOT RUN" starttime="20250923 08:26:58.995" endtime="20250923 08:26:58.995"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//button[contains(@class, 'btn-delete')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 08:26:58.995" endtime="20250923 08:26:58.995"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 08:26:58.995" endtime="20250923 08:26:58.995"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with confirmation dialog handling</doc>
<status status="NOT RUN" starttime="20250923 08:26:58.995" endtime="20250923 08:26:58.995"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 08:26:58.995" endtime="20250923 08:26:58.995"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<status status="NOT RUN" starttime="20250923 08:26:58.995" endtime="20250923 08:26:58.995"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<status status="NOT RUN" starttime="20250923 08:26:58.995" endtime="20250923 08:26:58.995"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<status status="NOT RUN" starttime="20250923 08:26:58.995" endtime="20250923 08:26:58.995"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:26:58.996" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:26:58.996" endtime="20250923 08:26:58.998"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:26:59.999" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:26:58.998" endtime="20250923 08:26:59.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:27:00.000" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:27:00.000" endtime="20250923 08:27:00.000"/>
</kw>
<status status="PASS" starttime="20250923 08:26:58.996" endtime="20250923 08:27:00.000"/>
</kw>
<status status="PASS" starttime="20250923 08:26:58.995" endtime="20250923 08:27:00.000"/>
</kw>
<doc>Test that regular users can only delete dependencies they created</doc>
<tag>crud</tag>
<tag>delete</tag>
<tag>rbac</tag>
<tag>restriction</tag>
<tag>user</tag>
<status status="FAIL" starttime="20250923 08:26:44.644" endtime="20250923 08:27:00.000">Element 'id:userPanel' still visible after 10 seconds.</status>
</test>
<test id="s1-t17" name="TC029 - Status Badge Color Verification" line="310">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:27:00.005" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:27:00.004" endtime="20250923 08:27:00.009"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:01.012" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:27:00.010" endtime="20250923 08:27:01.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:27:01.013" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:27:01.013" endtime="20250923 08:27:01.013"/>
</kw>
<status status="PASS" starttime="20250923 08:27:00.003" endtime="20250923 08:27:01.013"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:27:01.014" endtime="20250923 08:27:01.023"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:02.023" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:27:01.023" endtime="20250923 08:27:02.023"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:27:02.024" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:27:02.024" endtime="20250923 08:27:02.036"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:04.037" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:27:02.036" endtime="20250923 08:27:04.038"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:04.038" endtime="20250923 08:27:04.052"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:04.052" endtime="20250923 08:27:04.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:27:04.061" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:27:04.061" endtime="20250923 08:27:04.061"/>
</kw>
<status status="PASS" starttime="20250923 08:27:01.014" endtime="20250923 08:27:04.061"/>
</kw>
<status status="PASS" starttime="20250923 08:27:01.013" endtime="20250923 08:27:04.061"/>
</kw>
<status status="PASS" starttime="20250923 08:27:00.002" endtime="20250923 08:27:04.061"/>
</kw>
<for flavor="IN">
<var>${status}</var>
<value>@{STATUSES}</value>
<iter>
<var name="${status}">NOT STARTED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>StatusColor_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:27:04.062" level="INFO">${timestamp} = 20250923_082704</msg>
<status status="PASS" starttime="20250923 08:27:04.062" endtime="20250923 08:27:04.062"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:04.063" level="INFO">${unique_name} = StatusColor_NOT_STARTED_20250923_082704</msg>
<status status="PASS" starttime="20250923 08:27:04.062" endtime="20250923 08:27:04.063"/>
</kw>
<msg timestamp="20250923 08:27:04.063" level="INFO">${dep_name} = StatusColor_NOT_STARTED_20250923_082704</msg>
<status status="PASS" starttime="20250923 08:27:04.062" endtime="20250923 08:27:04.063"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Testing ${status} status color</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:04.063" level="INFO">${description} = Testing NOT STARTED status color</msg>
<status status="PASS" starttime="20250923 08:27:04.063" endtime="20250923 08:27:04.063"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:04.063" endtime="20250923 08:27:04.070"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:04.071" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:27:04.070" endtime="20250923 08:27:04.094"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:04.095" endtime="20250923 08:27:04.317"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:04.317" endtime="20250923 08:27:04.327"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:04.327" endtime="20250923 08:27:04.335"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:04.335" endtime="20250923 08:27:04.343"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:04.343" level="INFO">Typing text 'StatusColor_NOT_STARTED_20250923_082704' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:27:04.343" endtime="20250923 08:27:04.388"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:04.389" level="INFO">Typing text 'Testing NOT STARTED status color' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:27:04.388" endtime="20250923 08:27:04.425"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:27:04.426" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:27:04.425" endtime="20250923 08:27:04.558"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:04.558" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:27:04.558" endtime="20250923 08:27:04.574"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:04.574" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:27:04.574" endtime="20250923 08:27:04.589"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:27:04.589" endtime="20250923 08:27:04.590"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:04.590" endtime="20250923 08:27:04.598"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:04.598" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:27:04.598" endtime="20250923 08:27:04.628"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:27:04.628" endtime="20250923 08:27:04.641"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:06.642" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:27:04.641" endtime="20250923 08:27:06.642"/>
</kw>
<status status="PASS" starttime="20250923 08:27:04.063" endtime="20250923 08:27:06.642"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status_badge}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//span[contains(@class, 'status-badge')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:06.643" level="INFO">${status_badge} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'StatusColor_NOT_STARTED_20250923_082704')]]//span[contains(@class, 'status-badge')]</msg>
<status status="PASS" starttime="20250923 08:27:06.642" endtime="20250923 08:27:06.643"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${status_badge}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:27:16.893" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-14.png"&gt;&lt;img src="selenium-screenshot-14.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:27:16.893" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'StatusColor_NOT_STARTED_20250923_082704')]]//span[contains(@class, 'status-badge')]' not found.</msg>
<status status="FAIL" starttime="20250923 08:27:06.643" endtime="20250923 08:27:16.893"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with confirmation dialog handling</doc>
<status status="NOT RUN" starttime="20250923 08:27:16.893" endtime="20250923 08:27:16.893"/>
</kw>
<status status="FAIL" starttime="20250923 08:27:04.062" endtime="20250923 08:27:16.893"/>
</iter>
<status status="FAIL" starttime="20250923 08:27:04.061" endtime="20250923 08:27:16.893"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:27:16.894" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:27:16.894" endtime="20250923 08:27:16.897"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:17.898" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:27:16.898" endtime="20250923 08:27:17.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:27:17.899" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:27:17.899" endtime="20250923 08:27:17.899"/>
</kw>
<status status="PASS" starttime="20250923 08:27:16.894" endtime="20250923 08:27:17.900"/>
</kw>
<status status="PASS" starttime="20250923 08:27:16.893" endtime="20250923 08:27:17.900"/>
</kw>
<doc>Test that status badges display with correct colors</doc>
<tag>colors</tag>
<tag>crud</tag>
<tag>status</tag>
<tag>ui</tag>
<status status="FAIL" starttime="20250923 08:27:00.001" endtime="20250923 08:27:17.900">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'StatusColor_NOT_STARTED_20250923_082704')]]//span[contains(@class, 'status-badge')]' not found.</status>
</test>
<test id="s1-t18" name="TC030 - Priority Badge Color Verification" line="327">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:27:17.903" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:27:17.902" endtime="20250923 08:27:17.907"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:18.908" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:27:17.907" endtime="20250923 08:27:18.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:27:18.909" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:27:18.909" endtime="20250923 08:27:18.909"/>
</kw>
<status status="PASS" starttime="20250923 08:27:17.902" endtime="20250923 08:27:18.909"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:27:18.909" endtime="20250923 08:27:18.914"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:19.916" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:27:18.914" endtime="20250923 08:27:19.916"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:27:19.919" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:27:19.917" endtime="20250923 08:27:19.930"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:21.931" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:27:19.930" endtime="20250923 08:27:21.932"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:21.932" endtime="20250923 08:27:21.946"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:21.947" endtime="20250923 08:27:21.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:27:21.959" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:27:21.958" endtime="20250923 08:27:21.959"/>
</kw>
<status status="PASS" starttime="20250923 08:27:18.909" endtime="20250923 08:27:21.959"/>
</kw>
<status status="PASS" starttime="20250923 08:27:18.909" endtime="20250923 08:27:21.959"/>
</kw>
<status status="PASS" starttime="20250923 08:27:17.901" endtime="20250923 08:27:21.959"/>
</kw>
<for flavor="IN">
<var>${priority}</var>
<value>@{PRIORITIES}</value>
<iter>
<var name="${priority}">HIGH</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>PriorityColor_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:27:21.960" level="INFO">${timestamp} = 20250923_082721</msg>
<status status="PASS" starttime="20250923 08:27:21.959" endtime="20250923 08:27:21.960"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:21.960" level="INFO">${unique_name} = PriorityColor_HIGH_20250923_082721</msg>
<status status="PASS" starttime="20250923 08:27:21.960" endtime="20250923 08:27:21.960"/>
</kw>
<msg timestamp="20250923 08:27:21.960" level="INFO">${dep_name} = PriorityColor_HIGH_20250923_082721</msg>
<status status="PASS" starttime="20250923 08:27:21.959" endtime="20250923 08:27:21.960"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Testing ${priority} priority color</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:21.960" level="INFO">${description} = Testing HIGH priority color</msg>
<status status="PASS" starttime="20250923 08:27:21.960" endtime="20250923 08:27:21.960"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:21.961" endtime="20250923 08:27:21.970"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:21.970" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:27:21.970" endtime="20250923 08:27:21.994"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:21.994" endtime="20250923 08:27:22.227"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:22.228" endtime="20250923 08:27:22.237"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:22.237" endtime="20250923 08:27:22.246"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:22.246" endtime="20250923 08:27:22.254"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:22.255" level="INFO">Typing text 'PriorityColor_HIGH_20250923_082721' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:27:22.254" endtime="20250923 08:27:22.292"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:22.292" level="INFO">Typing text 'Testing HIGH priority color' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:27:22.292" endtime="20250923 08:27:22.328"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:27:22.328" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:27:22.328" endtime="20250923 08:27:22.352"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:22.353" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:27:22.352" endtime="20250923 08:27:22.367"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:22.367" level="INFO">Selecting options from selection list 'id:addPriority' by value HIGH.</msg>
<status status="PASS" starttime="20250923 08:27:22.367" endtime="20250923 08:27:22.393"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:27:22.393" endtime="20250923 08:27:22.394"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:22.394" endtime="20250923 08:27:22.401"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:22.402" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:27:22.402" endtime="20250923 08:27:22.427"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:27:22.427" endtime="20250923 08:27:22.437"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:24.438" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:27:22.437" endtime="20250923 08:27:24.438"/>
</kw>
<status status="PASS" starttime="20250923 08:27:21.960" endtime="20250923 08:27:24.438"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${priority_badge}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dep_name}')]]//span[contains(@class, 'priority-badge')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:24.439" level="INFO">${priority_badge} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'PriorityColor_HIGH_20250923_082721')]]//span[contains(@class, 'priority-badge')]</msg>
<status status="PASS" starttime="20250923 08:27:24.438" endtime="20250923 08:27:24.439"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${priority_badge}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 08:27:34.655" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-15.png"&gt;&lt;img src="selenium-screenshot-15.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:27:34.655" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'PriorityColor_HIGH_20250923_082721')]]//span[contains(@class, 'priority-badge')]' not found.</msg>
<status status="FAIL" starttime="20250923 08:27:24.439" endtime="20250923 08:27:34.655"/>
</kw>
<kw name="Delete Dependency With Confirmation" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name with confirmation dialog handling</doc>
<status status="NOT RUN" starttime="20250923 08:27:34.655" endtime="20250923 08:27:34.655"/>
</kw>
<status status="FAIL" starttime="20250923 08:27:21.959" endtime="20250923 08:27:34.655"/>
</iter>
<status status="FAIL" starttime="20250923 08:27:21.959" endtime="20250923 08:27:34.655"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:27:34.656" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:27:34.656" endtime="20250923 08:27:34.659"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:35.660" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:27:34.660" endtime="20250923 08:27:35.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:27:35.663" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:27:35.663" endtime="20250923 08:27:35.663"/>
</kw>
<status status="PASS" starttime="20250923 08:27:34.656" endtime="20250923 08:27:35.663"/>
</kw>
<status status="PASS" starttime="20250923 08:27:34.656" endtime="20250923 08:27:35.663"/>
</kw>
<doc>Test that priority badges display with correct colors</doc>
<tag>colors</tag>
<tag>crud</tag>
<tag>priority</tag>
<tag>ui</tag>
<status status="FAIL" starttime="20250923 08:27:17.900" endtime="20250923 08:27:35.664">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'PriorityColor_HIGH_20250923_082721')]]//span[contains(@class, 'priority-badge')]' not found.</status>
</test>
<test id="s1-t19" name="TC022 - Add Dependency With All Teams" line="344">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:27:35.666" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:27:35.666" endtime="20250923 08:27:35.671"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:36.674" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:27:35.671" endtime="20250923 08:27:36.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:27:36.675" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:27:36.674" endtime="20250923 08:27:36.675"/>
</kw>
<status status="PASS" starttime="20250923 08:27:35.665" endtime="20250923 08:27:36.675"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:27:36.676" endtime="20250923 08:27:36.684"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:37.686" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:27:36.684" endtime="20250923 08:27:37.686"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:27:37.687" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:27:37.686" endtime="20250923 08:27:37.697"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:39.698" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:27:37.697" endtime="20250923 08:27:39.698"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:39.698" endtime="20250923 08:27:39.713"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:39.713" endtime="20250923 08:27:39.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:27:39.724" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:27:39.724" endtime="20250923 08:27:39.724"/>
</kw>
<status status="PASS" starttime="20250923 08:27:36.675" endtime="20250923 08:27:39.724"/>
</kw>
<status status="PASS" starttime="20250923 08:27:36.675" endtime="20250923 08:27:39.724"/>
</kw>
<status status="PASS" starttime="20250923 08:27:35.665" endtime="20250923 08:27:39.724"/>
</kw>
<for flavor="IN">
<var>${team}</var>
<value>@{TEAMS}</value>
<iter>
<var name="${team}">Crowdgen</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:27:39.725" level="INFO">${timestamp} = 20250923_082739</msg>
<status status="PASS" starttime="20250923 08:27:39.725" endtime="20250923 08:27:39.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:39.726" level="INFO">${unique_name} = Team_Crowdgen_20250923_082739</msg>
<status status="PASS" starttime="20250923 08:27:39.725" endtime="20250923 08:27:39.726"/>
</kw>
<msg timestamp="20250923 08:27:39.726" level="INFO">${unique_name} = Team_Crowdgen_20250923_082739</msg>
<status status="PASS" starttime="20250923 08:27:39.724" endtime="20250923 08:27:39.726"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:39.726" level="INFO">${description} = Test dependency for Crowdgen team</msg>
<status status="PASS" starttime="20250923 08:27:39.726" endtime="20250923 08:27:39.726"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:39.727" endtime="20250923 08:27:39.736"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:39.736" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:27:39.736" endtime="20250923 08:27:39.761"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:39.761" endtime="20250923 08:27:39.985"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:39.986" endtime="20250923 08:27:39.994"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:39.994" endtime="20250923 08:27:40.002"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:40.002" endtime="20250923 08:27:40.009"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:40.009" level="INFO">Typing text 'Team_Crowdgen_20250923_082739' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:27:40.009" endtime="20250923 08:27:40.046"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:40.046" level="INFO">Typing text 'Test dependency for Crowdgen team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:27:40.046" endtime="20250923 08:27:40.187"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:27:40.187" level="INFO">Selecting options from selection list 'id:addTeam' by label Crowdgen.</msg>
<status status="PASS" starttime="20250923 08:27:40.187" endtime="20250923 08:27:40.214"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:40.215" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:27:40.215" endtime="20250923 08:27:40.230"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:40.231" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:27:40.230" endtime="20250923 08:27:40.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:27:40.246" endtime="20250923 08:27:40.247"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:40.247" endtime="20250923 08:27:40.254"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:40.255" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:27:40.254" endtime="20250923 08:27:40.281"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:27:40.281" endtime="20250923 08:27:40.291"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:42.293" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:27:40.291" endtime="20250923 08:27:42.293"/>
</kw>
<status status="PASS" starttime="20250923 08:27:39.726" endtime="20250923 08:27:42.293"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:27:42.294" endtime="20250923 08:27:42.306"/>
</kw>
<status status="PASS" starttime="20250923 08:27:42.294" endtime="20250923 08:27:42.306"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:43.306" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:27:42.306" endtime="20250923 08:27:43.306"/>
</kw>
<status status="PASS" starttime="20250923 08:27:39.724" endtime="20250923 08:27:43.307"/>
</iter>
<iter>
<var name="${team}">Annotation Tools</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:27:43.309" level="INFO">${timestamp} = 20250923_082743</msg>
<status status="PASS" starttime="20250923 08:27:43.309" endtime="20250923 08:27:43.309"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:43.309" level="INFO">${unique_name} = Team_Annotation_Tools_20250923_082743</msg>
<status status="PASS" starttime="20250923 08:27:43.309" endtime="20250923 08:27:43.309"/>
</kw>
<msg timestamp="20250923 08:27:43.309" level="INFO">${unique_name} = Team_Annotation_Tools_20250923_082743</msg>
<status status="PASS" starttime="20250923 08:27:43.307" endtime="20250923 08:27:43.309"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:43.310" level="INFO">${description} = Test dependency for Annotation Tools team</msg>
<status status="PASS" starttime="20250923 08:27:43.310" endtime="20250923 08:27:43.310"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:43.312" endtime="20250923 08:27:43.323"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:43.324" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:27:43.324" endtime="20250923 08:27:43.353"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:43.353" endtime="20250923 08:27:43.370"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:43.371" endtime="20250923 08:27:43.381"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:43.381" endtime="20250923 08:27:43.389"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:43.390" endtime="20250923 08:27:43.397"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:43.397" level="INFO">Typing text 'Team_Annotation_Tools_20250923_082743' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:27:43.397" endtime="20250923 08:27:43.438"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:43.438" level="INFO">Typing text 'Test dependency for Annotation Tools team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:27:43.438" endtime="20250923 08:27:43.473"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:27:43.473" level="INFO">Selecting options from selection list 'id:addTeam' by label Annotation Tools.</msg>
<status status="PASS" starttime="20250923 08:27:43.473" endtime="20250923 08:27:43.504"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:43.504" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:27:43.504" endtime="20250923 08:27:43.522"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:43.523" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:27:43.522" endtime="20250923 08:27:43.539"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:27:43.539" endtime="20250923 08:27:43.540"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:43.540" endtime="20250923 08:27:43.548"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:43.548" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:27:43.548" endtime="20250923 08:27:43.578"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:27:43.578" endtime="20250923 08:27:43.587"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:45.592" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:27:43.587" endtime="20250923 08:27:45.592"/>
</kw>
<status status="PASS" starttime="20250923 08:27:43.310" endtime="20250923 08:27:45.592"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:27:45.593" endtime="20250923 08:27:45.606"/>
</kw>
<status status="PASS" starttime="20250923 08:27:45.593" endtime="20250923 08:27:45.606"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:46.607" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:27:45.606" endtime="20250923 08:27:46.607"/>
</kw>
<status status="PASS" starttime="20250923 08:27:43.307" endtime="20250923 08:27:46.607"/>
</iter>
<iter>
<var name="${team}">ADAP Platform</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:27:46.609" level="INFO">${timestamp} = 20250923_082746</msg>
<status status="PASS" starttime="20250923 08:27:46.609" endtime="20250923 08:27:46.609"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:46.610" level="INFO">${unique_name} = Team_ADAP_Platform_20250923_082746</msg>
<status status="PASS" starttime="20250923 08:27:46.610" endtime="20250923 08:27:46.610"/>
</kw>
<msg timestamp="20250923 08:27:46.610" level="INFO">${unique_name} = Team_ADAP_Platform_20250923_082746</msg>
<status status="PASS" starttime="20250923 08:27:46.608" endtime="20250923 08:27:46.610"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:46.611" level="INFO">${description} = Test dependency for ADAP Platform team</msg>
<status status="PASS" starttime="20250923 08:27:46.610" endtime="20250923 08:27:46.611"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:46.612" endtime="20250923 08:27:46.626"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:46.626" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:27:46.626" endtime="20250923 08:27:46.653"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:46.653" endtime="20250923 08:27:46.675"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:46.675" endtime="20250923 08:27:46.688"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:46.688" endtime="20250923 08:27:46.703"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:46.703" endtime="20250923 08:27:46.713"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:46.714" level="INFO">Typing text 'Team_ADAP_Platform_20250923_082746' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:27:46.713" endtime="20250923 08:27:46.758"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:46.758" level="INFO">Typing text 'Test dependency for ADAP Platform team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:27:46.758" endtime="20250923 08:27:46.799"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:27:46.800" level="INFO">Selecting options from selection list 'id:addTeam' by label ADAP Platform.</msg>
<status status="PASS" starttime="20250923 08:27:46.799" endtime="20250923 08:27:46.933"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:46.933" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:27:46.933" endtime="20250923 08:27:46.951"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:46.952" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:27:46.951" endtime="20250923 08:27:46.967"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:27:46.967" endtime="20250923 08:27:46.969"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:46.969" endtime="20250923 08:27:46.977"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:46.978" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:27:46.977" endtime="20250923 08:27:47.002"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:27:47.002" endtime="20250923 08:27:47.015"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:49.018" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:27:47.015" endtime="20250923 08:27:49.018"/>
</kw>
<status status="PASS" starttime="20250923 08:27:46.611" endtime="20250923 08:27:49.018"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:27:49.019" endtime="20250923 08:27:49.029"/>
</kw>
<status status="PASS" starttime="20250923 08:27:49.018" endtime="20250923 08:27:49.029"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:50.033" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:27:49.029" endtime="20250923 08:27:50.033"/>
</kw>
<status status="PASS" starttime="20250923 08:27:46.607" endtime="20250923 08:27:50.033"/>
</iter>
<iter>
<var name="${team}">Product Management</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:27:50.035" level="INFO">${timestamp} = 20250923_082750</msg>
<status status="PASS" starttime="20250923 08:27:50.035" endtime="20250923 08:27:50.035"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:50.035" level="INFO">${unique_name} = Team_Product_Management_20250923_082750</msg>
<status status="PASS" starttime="20250923 08:27:50.035" endtime="20250923 08:27:50.035"/>
</kw>
<msg timestamp="20250923 08:27:50.036" level="INFO">${unique_name} = Team_Product_Management_20250923_082750</msg>
<status status="PASS" starttime="20250923 08:27:50.033" endtime="20250923 08:27:50.036"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:50.036" level="INFO">${description} = Test dependency for Product Management team</msg>
<status status="PASS" starttime="20250923 08:27:50.036" endtime="20250923 08:27:50.036"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:50.037" endtime="20250923 08:27:50.049"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:50.049" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:27:50.049" endtime="20250923 08:27:50.077"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:50.078" endtime="20250923 08:27:50.107"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:50.108" endtime="20250923 08:27:50.119"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:50.119" endtime="20250923 08:27:50.134"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:50.135" endtime="20250923 08:27:50.152"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:50.153" level="INFO">Typing text 'Team_Product_Management_20250923_082750' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:27:50.153" endtime="20250923 08:27:50.196"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:50.197" level="INFO">Typing text 'Test dependency for Product Management team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:27:50.196" endtime="20250923 08:27:50.236"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:27:50.237" level="INFO">Selecting options from selection list 'id:addTeam' by label Product Management.</msg>
<status status="PASS" starttime="20250923 08:27:50.236" endtime="20250923 08:27:50.271"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:50.271" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:27:50.271" endtime="20250923 08:27:50.288"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:50.289" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:27:50.289" endtime="20250923 08:27:50.305"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:27:50.305" endtime="20250923 08:27:50.306"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:50.306" endtime="20250923 08:27:50.314"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:50.314" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:27:50.314" endtime="20250923 08:27:50.342"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:27:50.342" endtime="20250923 08:27:50.350"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:52.354" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:27:50.350" endtime="20250923 08:27:52.354"/>
</kw>
<status status="PASS" starttime="20250923 08:27:50.036" endtime="20250923 08:27:52.354"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:27:52.354" endtime="20250923 08:27:52.360"/>
</kw>
<status status="PASS" starttime="20250923 08:27:52.354" endtime="20250923 08:27:52.360"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:53.363" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:27:52.360" endtime="20250923 08:27:53.363"/>
</kw>
<status status="PASS" starttime="20250923 08:27:50.033" endtime="20250923 08:27:53.363"/>
</iter>
<iter>
<var name="${team}">Quality Flow</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:27:53.365" level="INFO">${timestamp} = 20250923_082753</msg>
<status status="PASS" starttime="20250923 08:27:53.365" endtime="20250923 08:27:53.365"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:53.366" level="INFO">${unique_name} = Team_Quality_Flow_20250923_082753</msg>
<status status="PASS" starttime="20250923 08:27:53.365" endtime="20250923 08:27:53.366"/>
</kw>
<msg timestamp="20250923 08:27:53.366" level="INFO">${unique_name} = Team_Quality_Flow_20250923_082753</msg>
<status status="PASS" starttime="20250923 08:27:53.363" endtime="20250923 08:27:53.366"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:53.366" level="INFO">${description} = Test dependency for Quality Flow team</msg>
<status status="PASS" starttime="20250923 08:27:53.366" endtime="20250923 08:27:53.366"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:53.368" endtime="20250923 08:27:53.380"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:53.381" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:27:53.381" endtime="20250923 08:27:53.410"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:53.410" endtime="20250923 08:27:53.434"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:53.435" endtime="20250923 08:27:53.446"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:53.447" endtime="20250923 08:27:53.460"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:53.460" endtime="20250923 08:27:53.472"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:53.474" level="INFO">Typing text 'Team_Quality_Flow_20250923_082753' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:27:53.473" endtime="20250923 08:27:53.521"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:53.521" level="INFO">Typing text 'Test dependency for Quality Flow team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:27:53.521" endtime="20250923 08:27:53.558"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:27:53.558" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:27:53.558" endtime="20250923 08:27:53.698"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:53.699" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:27:53.698" endtime="20250923 08:27:53.715"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:53.716" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:27:53.715" endtime="20250923 08:27:53.732"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:27:53.733" endtime="20250923 08:27:53.733"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:53.733" endtime="20250923 08:27:53.741"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:53.741" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:27:53.741" endtime="20250923 08:27:53.768"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:27:53.768" endtime="20250923 08:27:53.779"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:55.782" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:27:53.779" endtime="20250923 08:27:55.782"/>
</kw>
<status status="PASS" starttime="20250923 08:27:53.366" endtime="20250923 08:27:55.782"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:27:55.783" endtime="20250923 08:27:55.796"/>
</kw>
<status status="PASS" starttime="20250923 08:27:55.783" endtime="20250923 08:27:55.796"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:56.798" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:27:55.797" endtime="20250923 08:27:56.798"/>
</kw>
<status status="PASS" starttime="20250923 08:27:53.363" endtime="20250923 08:27:56.798"/>
</iter>
<iter>
<var name="${team}">Data Collection</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Team_${team.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:27:56.801" level="INFO">${timestamp} = 20250923_082756</msg>
<status status="PASS" starttime="20250923 08:27:56.800" endtime="20250923 08:27:56.801"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:56.801" level="INFO">${unique_name} = Team_Data_Collection_20250923_082756</msg>
<status status="PASS" starttime="20250923 08:27:56.801" endtime="20250923 08:27:56.801"/>
</kw>
<msg timestamp="20250923 08:27:56.801" level="INFO">${unique_name} = Team_Data_Collection_20250923_082756</msg>
<status status="PASS" starttime="20250923 08:27:56.798" endtime="20250923 08:27:56.801"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency for ${team} team</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:27:56.802" level="INFO">${description} = Test dependency for Data Collection team</msg>
<status status="PASS" starttime="20250923 08:27:56.801" endtime="20250923 08:27:56.802"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${team}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:56.803" endtime="20250923 08:27:56.816"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:56.817" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:27:56.816" endtime="20250923 08:27:56.845"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:56.845" endtime="20250923 08:27:56.857"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:56.857" endtime="20250923 08:27:56.870"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:56.870" endtime="20250923 08:27:56.878"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:56.879" endtime="20250923 08:27:56.887"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:56.887" level="INFO">Typing text 'Team_Data_Collection_20250923_082756' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:27:56.887" endtime="20250923 08:27:56.924"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:56.925" level="INFO">Typing text 'Test dependency for Data Collection team' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:27:56.925" endtime="20250923 08:27:56.965"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:27:56.965" level="INFO">Selecting options from selection list 'id:addTeam' by label Data Collection.</msg>
<status status="PASS" starttime="20250923 08:27:56.965" endtime="20250923 08:27:56.995"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:56.996" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:27:56.996" endtime="20250923 08:27:57.013"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:27:57.013" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:27:57.013" endtime="20250923 08:27:57.031"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:27:57.031" endtime="20250923 08:27:57.032"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:27:57.032" endtime="20250923 08:27:57.039"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:27:57.040" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:27:57.040" endtime="20250923 08:27:57.068"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:27:57.068" endtime="20250923 08:27:57.078"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:27:59.083" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:27:57.078" endtime="20250923 08:27:59.083"/>
</kw>
<status status="PASS" starttime="20250923 08:27:56.802" endtime="20250923 08:27:59.083"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:27:59.084" endtime="20250923 08:27:59.095"/>
</kw>
<status status="PASS" starttime="20250923 08:27:59.083" endtime="20250923 08:27:59.095"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:00.097" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:27:59.095" endtime="20250923 08:28:00.097"/>
</kw>
<status status="PASS" starttime="20250923 08:27:56.798" endtime="20250923 08:28:00.097"/>
</iter>
<status status="PASS" starttime="20250923 08:27:39.724" endtime="20250923 08:28:00.097"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:28:00.099" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:28:00.098" endtime="20250923 08:28:00.106"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:01.110" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:00.106" endtime="20250923 08:28:01.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:28:01.111" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:28:01.111" endtime="20250923 08:28:01.111"/>
</kw>
<status status="PASS" starttime="20250923 08:28:00.098" endtime="20250923 08:28:01.111"/>
</kw>
<status status="PASS" starttime="20250923 08:28:00.098" endtime="20250923 08:28:01.111"/>
</kw>
<doc>Test creating dependencies for all available teams</doc>
<tag>comprehensive</tag>
<tag>crud</tag>
<tag>teams</tag>
<status status="PASS" starttime="20250923 08:27:35.665" endtime="20250923 08:28:01.111"/>
</test>
<test id="s1-t20" name="TC023 - Add Dependency With All Status Options" line="357">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:28:01.115" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:28:01.114" endtime="20250923 08:28:01.120"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:02.123" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:01.120" endtime="20250923 08:28:02.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:28:02.124" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:28:02.123" endtime="20250923 08:28:02.124"/>
</kw>
<status status="PASS" starttime="20250923 08:28:01.114" endtime="20250923 08:28:02.124"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:28:02.124" endtime="20250923 08:28:02.131"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:03.133" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:02.131" endtime="20250923 08:28:03.134"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:28:03.134" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:28:03.134" endtime="20250923 08:28:03.145"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:05.149" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:28:03.145" endtime="20250923 08:28:05.149"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:05.150" endtime="20250923 08:28:05.164"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:05.164" endtime="20250923 08:28:05.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:28:05.173" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:28:05.173" endtime="20250923 08:28:05.173"/>
</kw>
<status status="PASS" starttime="20250923 08:28:02.124" endtime="20250923 08:28:05.173"/>
</kw>
<status status="PASS" starttime="20250923 08:28:02.124" endtime="20250923 08:28:05.173"/>
</kw>
<status status="PASS" starttime="20250923 08:28:01.114" endtime="20250923 08:28:05.173"/>
</kw>
<for flavor="IN">
<var>${status}</var>
<value>@{STATUSES}</value>
<iter>
<var name="${status}">NOT STARTED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Status_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:28:05.175" level="INFO">${timestamp} = 20250923_082805</msg>
<status status="PASS" starttime="20250923 08:28:05.175" endtime="20250923 08:28:05.175"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:05.175" level="INFO">${unique_name} = Status_NOT_STARTED_20250923_082805</msg>
<status status="PASS" starttime="20250923 08:28:05.175" endtime="20250923 08:28:05.175"/>
</kw>
<msg timestamp="20250923 08:28:05.175" level="INFO">${unique_name} = Status_NOT_STARTED_20250923_082805</msg>
<status status="PASS" starttime="20250923 08:28:05.174" endtime="20250923 08:28:05.175"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${status} status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:05.175" level="INFO">${description} = Test dependency with NOT STARTED status</msg>
<status status="PASS" starttime="20250923 08:28:05.175" endtime="20250923 08:28:05.175"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:05.176" endtime="20250923 08:28:05.184"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:05.185" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:28:05.185" endtime="20250923 08:28:05.210"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:05.210" endtime="20250923 08:28:05.224"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:05.224" endtime="20250923 08:28:05.238"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:05.238" endtime="20250923 08:28:05.251"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:05.251" endtime="20250923 08:28:05.264"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:05.265" level="INFO">Typing text 'Status_NOT_STARTED_20250923_082805' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:28:05.264" endtime="20250923 08:28:05.321"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:05.322" level="INFO">Typing text 'Test dependency with NOT STARTED status' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:28:05.322" endtime="20250923 08:28:05.405"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:28:05.406" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:28:05.405" endtime="20250923 08:28:05.444"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:05.445" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:28:05.444" endtime="20250923 08:28:05.470"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:05.471" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:28:05.471" endtime="20250923 08:28:05.499"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:28:05.499" endtime="20250923 08:28:05.500"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:05.500" endtime="20250923 08:28:05.513"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:05.513" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:28:05.513" endtime="20250923 08:28:05.547"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:28:05.547" endtime="20250923 08:28:05.558"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:07.561" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:28:05.558" endtime="20250923 08:28:07.562"/>
</kw>
<status status="PASS" starttime="20250923 08:28:05.175" endtime="20250923 08:28:07.562"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:28:07.563" endtime="20250923 08:28:07.576"/>
</kw>
<status status="PASS" starttime="20250923 08:28:07.563" endtime="20250923 08:28:07.576"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:08.581" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:07.577" endtime="20250923 08:28:08.581"/>
</kw>
<status status="PASS" starttime="20250923 08:28:05.174" endtime="20250923 08:28:08.581"/>
</iter>
<iter>
<var name="${status}">IN PROGRESS</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Status_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:28:08.583" level="INFO">${timestamp} = 20250923_082808</msg>
<status status="PASS" starttime="20250923 08:28:08.583" endtime="20250923 08:28:08.583"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:08.584" level="INFO">${unique_name} = Status_IN_PROGRESS_20250923_082808</msg>
<status status="PASS" starttime="20250923 08:28:08.583" endtime="20250923 08:28:08.584"/>
</kw>
<msg timestamp="20250923 08:28:08.584" level="INFO">${unique_name} = Status_IN_PROGRESS_20250923_082808</msg>
<status status="PASS" starttime="20250923 08:28:08.581" endtime="20250923 08:28:08.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${status} status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:08.584" level="INFO">${description} = Test dependency with IN PROGRESS status</msg>
<status status="PASS" starttime="20250923 08:28:08.584" endtime="20250923 08:28:08.584"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:08.586" endtime="20250923 08:28:08.599"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:08.599" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:28:08.599" endtime="20250923 08:28:08.626"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:08.626" endtime="20250923 08:28:08.657"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:08.657" endtime="20250923 08:28:08.672"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:08.673" endtime="20250923 08:28:08.685"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:08.686" endtime="20250923 08:28:08.695"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:08.696" level="INFO">Typing text 'Status_IN_PROGRESS_20250923_082808' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:28:08.695" endtime="20250923 08:28:08.737"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:08.738" level="INFO">Typing text 'Test dependency with IN PROGRESS status' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:28:08.737" endtime="20250923 08:28:08.776"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:28:08.776" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:28:08.776" endtime="20250923 08:28:08.808"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:08.809" level="INFO">Selecting options from selection list 'id:addStatus' by value IN PROGRESS.</msg>
<status status="PASS" starttime="20250923 08:28:08.809" endtime="20250923 08:28:08.837"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:08.838" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:28:08.837" endtime="20250923 08:28:08.854"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:28:08.854" endtime="20250923 08:28:08.855"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:08.855" endtime="20250923 08:28:08.862"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:08.862" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:28:08.862" endtime="20250923 08:28:08.885"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:28:08.885" endtime="20250923 08:28:08.894"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:10.896" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:28:08.894" endtime="20250923 08:28:10.896"/>
</kw>
<status status="PASS" starttime="20250923 08:28:08.584" endtime="20250923 08:28:10.896"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:28:10.897" endtime="20250923 08:28:10.908"/>
</kw>
<status status="PASS" starttime="20250923 08:28:10.896" endtime="20250923 08:28:10.908"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:11.911" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:10.908" endtime="20250923 08:28:11.911"/>
</kw>
<status status="PASS" starttime="20250923 08:28:08.581" endtime="20250923 08:28:11.911"/>
</iter>
<iter>
<var name="${status}">BLOCKED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Status_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:28:11.914" level="INFO">${timestamp} = 20250923_082811</msg>
<status status="PASS" starttime="20250923 08:28:11.914" endtime="20250923 08:28:11.914"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:11.914" level="INFO">${unique_name} = Status_BLOCKED_20250923_082811</msg>
<status status="PASS" starttime="20250923 08:28:11.914" endtime="20250923 08:28:11.914"/>
</kw>
<msg timestamp="20250923 08:28:11.914" level="INFO">${unique_name} = Status_BLOCKED_20250923_082811</msg>
<status status="PASS" starttime="20250923 08:28:11.912" endtime="20250923 08:28:11.914"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${status} status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:11.915" level="INFO">${description} = Test dependency with BLOCKED status</msg>
<status status="PASS" starttime="20250923 08:28:11.914" endtime="20250923 08:28:11.915"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:11.916" endtime="20250923 08:28:11.930"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:11.931" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:28:11.930" endtime="20250923 08:28:11.963"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:11.963" endtime="20250923 08:28:11.974"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:11.974" endtime="20250923 08:28:11.983"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:11.983" endtime="20250923 08:28:11.991"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:11.992" endtime="20250923 08:28:11.999"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:11.999" level="INFO">Typing text 'Status_BLOCKED_20250923_082811' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:28:11.999" endtime="20250923 08:28:12.037"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:12.038" level="INFO">Typing text 'Test dependency with BLOCKED status' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:28:12.038" endtime="20250923 08:28:12.076"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:28:12.076" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:28:12.076" endtime="20250923 08:28:12.104"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:12.105" level="INFO">Selecting options from selection list 'id:addStatus' by value BLOCKED.</msg>
<status status="PASS" starttime="20250923 08:28:12.105" endtime="20250923 08:28:12.130"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:12.131" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:28:12.130" endtime="20250923 08:28:12.146"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:28:12.146" endtime="20250923 08:28:12.147"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:12.147" endtime="20250923 08:28:12.155"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:12.155" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:28:12.155" endtime="20250923 08:28:12.186"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:28:12.187" endtime="20250923 08:28:12.195"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:14.196" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:28:12.195" endtime="20250923 08:28:14.196"/>
</kw>
<status status="PASS" starttime="20250923 08:28:11.915" endtime="20250923 08:28:14.196"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:28:14.198" endtime="20250923 08:28:14.209"/>
</kw>
<status status="PASS" starttime="20250923 08:28:14.197" endtime="20250923 08:28:14.209"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:15.210" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:14.209" endtime="20250923 08:28:15.210"/>
</kw>
<status status="PASS" starttime="20250923 08:28:11.912" endtime="20250923 08:28:15.210"/>
</iter>
<iter>
<var name="${status}">COMPLETED</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Status_${status.replace(' ', '_')}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:28:15.213" level="INFO">${timestamp} = 20250923_082815</msg>
<status status="PASS" starttime="20250923 08:28:15.212" endtime="20250923 08:28:15.213"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:15.213" level="INFO">${unique_name} = Status_COMPLETED_20250923_082815</msg>
<status status="PASS" starttime="20250923 08:28:15.213" endtime="20250923 08:28:15.213"/>
</kw>
<msg timestamp="20250923 08:28:15.213" level="INFO">${unique_name} = Status_COMPLETED_20250923_082815</msg>
<status status="PASS" starttime="20250923 08:28:15.211" endtime="20250923 08:28:15.213"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${status} status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:15.214" level="INFO">${description} = Test dependency with COMPLETED status</msg>
<status status="PASS" starttime="20250923 08:28:15.213" endtime="20250923 08:28:15.214"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>${status}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:15.215" endtime="20250923 08:28:15.227"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:15.228" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:28:15.228" endtime="20250923 08:28:15.255"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:15.255" endtime="20250923 08:28:15.265"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:15.265" endtime="20250923 08:28:15.276"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:15.276" endtime="20250923 08:28:15.286"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:15.287" endtime="20250923 08:28:15.295"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:15.296" level="INFO">Typing text 'Status_COMPLETED_20250923_082815' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:28:15.296" endtime="20250923 08:28:15.338"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:15.338" level="INFO">Typing text 'Test dependency with COMPLETED status' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:28:15.338" endtime="20250923 08:28:15.379"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:28:15.380" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:28:15.379" endtime="20250923 08:28:15.406"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:15.406" level="INFO">Selecting options from selection list 'id:addStatus' by value COMPLETED.</msg>
<status status="PASS" starttime="20250923 08:28:15.406" endtime="20250923 08:28:15.434"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:15.434" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:28:15.434" endtime="20250923 08:28:15.451"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:28:15.451" endtime="20250923 08:28:15.452"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:15.452" endtime="20250923 08:28:15.460"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:15.461" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:28:15.461" endtime="20250923 08:28:15.488"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:28:15.489" endtime="20250923 08:28:15.496"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:17.496" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:28:15.496" endtime="20250923 08:28:17.496"/>
</kw>
<status status="PASS" starttime="20250923 08:28:15.214" endtime="20250923 08:28:17.496"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:28:17.497" endtime="20250923 08:28:17.507"/>
</kw>
<status status="PASS" starttime="20250923 08:28:17.497" endtime="20250923 08:28:17.507"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:18.510" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:17.508" endtime="20250923 08:28:18.510"/>
</kw>
<status status="PASS" starttime="20250923 08:28:15.210" endtime="20250923 08:28:18.510"/>
</iter>
<status status="PASS" starttime="20250923 08:28:05.173" endtime="20250923 08:28:18.510"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:28:18.512" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:28:18.511" endtime="20250923 08:28:18.518"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:19.524" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:18.519" endtime="20250923 08:28:19.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:28:19.524" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:28:19.524" endtime="20250923 08:28:19.524"/>
</kw>
<status status="PASS" starttime="20250923 08:28:18.511" endtime="20250923 08:28:19.524"/>
</kw>
<status status="PASS" starttime="20250923 08:28:18.511" endtime="20250923 08:28:19.525"/>
</kw>
<doc>Test creating dependencies with all available statuses</doc>
<tag>comprehensive</tag>
<tag>crud</tag>
<tag>status</tag>
<status status="PASS" starttime="20250923 08:28:01.112" endtime="20250923 08:28:19.525"/>
</test>
<test id="s1-t21" name="TC024 - Add Dependency With All Priority Levels" line="370">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:28:19.528" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:28:19.527" endtime="20250923 08:28:19.533"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:20.534" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:19.533" endtime="20250923 08:28:20.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:28:20.534" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:28:20.534" endtime="20250923 08:28:20.534"/>
</kw>
<status status="PASS" starttime="20250923 08:28:19.527" endtime="20250923 08:28:20.534"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:28:20.535" endtime="20250923 08:28:20.544"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:21.547" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:20.544" endtime="20250923 08:28:21.547"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:28:21.548" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:28:21.547" endtime="20250923 08:28:21.557"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:23.561" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:28:21.560" endtime="20250923 08:28:23.561"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:23.561" endtime="20250923 08:28:23.572"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:23.573" endtime="20250923 08:28:23.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:28:23.582" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:28:23.582" endtime="20250923 08:28:23.582"/>
</kw>
<status status="PASS" starttime="20250923 08:28:20.534" endtime="20250923 08:28:23.582"/>
</kw>
<status status="PASS" starttime="20250923 08:28:20.534" endtime="20250923 08:28:23.582"/>
</kw>
<status status="PASS" starttime="20250923 08:28:19.526" endtime="20250923 08:28:23.582"/>
</kw>
<for flavor="IN">
<var>${priority}</var>
<value>@{PRIORITIES}</value>
<iter>
<var name="${priority}">HIGH</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Priority_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:28:23.583" level="INFO">${timestamp} = 20250923_082823</msg>
<status status="PASS" starttime="20250923 08:28:23.582" endtime="20250923 08:28:23.583"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:23.583" level="INFO">${unique_name} = Priority_HIGH_20250923_082823</msg>
<status status="PASS" starttime="20250923 08:28:23.583" endtime="20250923 08:28:23.583"/>
</kw>
<msg timestamp="20250923 08:28:23.583" level="INFO">${unique_name} = Priority_HIGH_20250923_082823</msg>
<status status="PASS" starttime="20250923 08:28:23.582" endtime="20250923 08:28:23.583"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${priority} priority</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:23.583" level="INFO">${description} = Test dependency with HIGH priority</msg>
<status status="PASS" starttime="20250923 08:28:23.583" endtime="20250923 08:28:23.583"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:23.584" endtime="20250923 08:28:23.593"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:23.594" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:28:23.593" endtime="20250923 08:28:23.617"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:23.617" endtime="20250923 08:28:23.647"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:23.647" endtime="20250923 08:28:23.660"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:23.660" endtime="20250923 08:28:23.670"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:23.670" endtime="20250923 08:28:23.679"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:23.679" level="INFO">Typing text 'Priority_HIGH_20250923_082823' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:28:23.679" endtime="20250923 08:28:23.720"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:23.721" level="INFO">Typing text 'Test dependency with HIGH priority' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:28:23.720" endtime="20250923 08:28:23.759"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:28:23.759" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:28:23.759" endtime="20250923 08:28:23.788"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:23.788" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:28:23.788" endtime="20250923 08:28:23.806"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:23.806" level="INFO">Selecting options from selection list 'id:addPriority' by value HIGH.</msg>
<status status="PASS" starttime="20250923 08:28:23.806" endtime="20250923 08:28:23.835"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:28:23.836" endtime="20250923 08:28:23.837"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:23.837" endtime="20250923 08:28:23.845"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:23.845" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:28:23.845" endtime="20250923 08:28:23.872"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:28:23.872" endtime="20250923 08:28:23.882"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:25.883" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:28:23.882" endtime="20250923 08:28:25.884"/>
</kw>
<status status="PASS" starttime="20250923 08:28:23.583" endtime="20250923 08:28:25.885"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:28:25.887" endtime="20250923 08:28:25.898"/>
</kw>
<status status="PASS" starttime="20250923 08:28:25.885" endtime="20250923 08:28:25.898"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:26.902" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:25.898" endtime="20250923 08:28:26.902"/>
</kw>
<status status="PASS" starttime="20250923 08:28:23.582" endtime="20250923 08:28:26.902"/>
</iter>
<iter>
<var name="${priority}">MEDIUM</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Priority_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:28:26.903" level="INFO">${timestamp} = 20250923_082826</msg>
<status status="PASS" starttime="20250923 08:28:26.903" endtime="20250923 08:28:26.903"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:26.903" level="INFO">${unique_name} = Priority_MEDIUM_20250923_082826</msg>
<status status="PASS" starttime="20250923 08:28:26.903" endtime="20250923 08:28:26.903"/>
</kw>
<msg timestamp="20250923 08:28:26.904" level="INFO">${unique_name} = Priority_MEDIUM_20250923_082826</msg>
<status status="PASS" starttime="20250923 08:28:26.902" endtime="20250923 08:28:26.904"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${priority} priority</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:26.904" level="INFO">${description} = Test dependency with MEDIUM priority</msg>
<status status="PASS" starttime="20250923 08:28:26.904" endtime="20250923 08:28:26.904"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:26.906" endtime="20250923 08:28:26.920"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:26.920" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:28:26.920" endtime="20250923 08:28:26.956"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:26.956" endtime="20250923 08:28:26.972"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:26.972" endtime="20250923 08:28:26.986"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:26.986" endtime="20250923 08:28:26.999"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:26.999" endtime="20250923 08:28:27.022"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:27.022" level="INFO">Typing text 'Priority_MEDIUM_20250923_082826' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:28:27.022" endtime="20250923 08:28:27.064"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:27.065" level="INFO">Typing text 'Test dependency with MEDIUM priority' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:28:27.064" endtime="20250923 08:28:27.105"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:28:27.105" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:28:27.105" endtime="20250923 08:28:27.239"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:27.240" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:28:27.239" endtime="20250923 08:28:27.256"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:27.256" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:28:27.256" endtime="20250923 08:28:27.273"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:28:27.273" endtime="20250923 08:28:27.274"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:27.274" endtime="20250923 08:28:27.281"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:27.282" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:28:27.281" endtime="20250923 08:28:27.308"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:28:27.308" endtime="20250923 08:28:27.317"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:29.319" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:28:27.317" endtime="20250923 08:28:29.319"/>
</kw>
<status status="PASS" starttime="20250923 08:28:26.904" endtime="20250923 08:28:29.319"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:28:29.320" endtime="20250923 08:28:29.331"/>
</kw>
<status status="PASS" starttime="20250923 08:28:29.319" endtime="20250923 08:28:29.332"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:30.332" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:29.332" endtime="20250923 08:28:30.332"/>
</kw>
<status status="PASS" starttime="20250923 08:28:26.902" endtime="20250923 08:28:30.332"/>
</iter>
<iter>
<var name="${priority}">LOW</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${unique_name}</var>
<arg>Priority_${priority}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:28:30.333" level="INFO">${timestamp} = 20250923_082830</msg>
<status status="PASS" starttime="20250923 08:28:30.333" endtime="20250923 08:28:30.333"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:30.334" level="INFO">${unique_name} = Priority_LOW_20250923_082830</msg>
<status status="PASS" starttime="20250923 08:28:30.333" endtime="20250923 08:28:30.334"/>
</kw>
<msg timestamp="20250923 08:28:30.334" level="INFO">${unique_name} = Priority_LOW_20250923_082830</msg>
<status status="PASS" starttime="20250923 08:28:30.333" endtime="20250923 08:28:30.334"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${description}</var>
<arg>Test dependency with ${priority} priority</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:30.334" level="INFO">${description} = Test dependency with LOW priority</msg>
<status status="PASS" starttime="20250923 08:28:30.334" endtime="20250923 08:28:30.334"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${unique_name}</arg>
<arg>${description}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<arg>NOT STARTED</arg>
<arg>${priority}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:30.336" endtime="20250923 08:28:30.347"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:30.347" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:28:30.347" endtime="20250923 08:28:30.369"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:30.370" endtime="20250923 08:28:30.390"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:30.390" endtime="20250923 08:28:30.400"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:30.400" endtime="20250923 08:28:30.411"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:30.411" endtime="20250923 08:28:30.418"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:30.420" level="INFO">Typing text 'Priority_LOW_20250923_082830' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:28:30.419" endtime="20250923 08:28:30.456"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:30.456" level="INFO">Typing text 'Test dependency with LOW priority' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:28:30.456" endtime="20250923 08:28:30.493"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:28:30.493" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:28:30.493" endtime="20250923 08:28:30.522"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:30.522" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:28:30.522" endtime="20250923 08:28:30.540"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:30.541" level="INFO">Selecting options from selection list 'id:addPriority' by value LOW.</msg>
<status status="PASS" starttime="20250923 08:28:30.540" endtime="20250923 08:28:30.567"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:28:30.567" endtime="20250923 08:28:30.567"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:30.567" endtime="20250923 08:28:30.578"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:30.578" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:28:30.578" endtime="20250923 08:28:30.603"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:28:30.603" endtime="20250923 08:28:30.613"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:32.616" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:28:30.613" endtime="20250923 08:28:32.616"/>
</kw>
<status status="PASS" starttime="20250923 08:28:30.334" endtime="20250923 08:28:32.616"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${unique_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:28:32.617" endtime="20250923 08:28:32.624"/>
</kw>
<status status="PASS" starttime="20250923 08:28:32.616" endtime="20250923 08:28:32.624"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:33.627" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:32.625" endtime="20250923 08:28:33.627"/>
</kw>
<status status="PASS" starttime="20250923 08:28:30.332" endtime="20250923 08:28:33.627"/>
</iter>
<status status="PASS" starttime="20250923 08:28:23.582" endtime="20250923 08:28:33.627"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:28:33.629" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:28:33.628" endtime="20250923 08:28:33.636"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:34.639" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:33.637" endtime="20250923 08:28:34.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:28:34.639" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:28:34.639" endtime="20250923 08:28:34.639"/>
</kw>
<status status="PASS" starttime="20250923 08:28:33.628" endtime="20250923 08:28:34.639"/>
</kw>
<status status="PASS" starttime="20250923 08:28:33.627" endtime="20250923 08:28:34.639"/>
</kw>
<doc>Test creating dependencies with all priority levels</doc>
<tag>comprehensive</tag>
<tag>crud</tag>
<tag>priority</tag>
<status status="PASS" starttime="20250923 08:28:19.525" endtime="20250923 08:28:34.639"/>
</test>
<test id="s1-t22" name="TC025 - Verify Counter Updates After CRUD Operations" line="383">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:28:34.641" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:28:34.641" endtime="20250923 08:28:34.646"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:35.647" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:34.646" endtime="20250923 08:28:35.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:28:35.648" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:28:35.648" endtime="20250923 08:28:35.648"/>
</kw>
<status status="PASS" starttime="20250923 08:28:34.641" endtime="20250923 08:28:35.648"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:28:35.649" endtime="20250923 08:28:35.657"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:36.658" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:35.657" endtime="20250923 08:28:36.658"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:28:36.659" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:28:36.659" endtime="20250923 08:28:36.669"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:38.670" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:28:36.669" endtime="20250923 08:28:38.671"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:38.672" endtime="20250923 08:28:38.687"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:38.687" endtime="20250923 08:28:38.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:28:38.698" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:28:38.697" endtime="20250923 08:28:38.698"/>
</kw>
<status status="PASS" starttime="20250923 08:28:35.649" endtime="20250923 08:28:38.698"/>
</kw>
<status status="PASS" starttime="20250923 08:28:35.648" endtime="20250923 08:28:38.698"/>
</kw>
<status status="PASS" starttime="20250923 08:28:34.640" endtime="20250923 08:28:38.698"/>
</kw>
<kw name="Get Counter Value" library="depflow_keywords">
<var>${initial_count}</var>
<arg>${TOTAL_COUNT}</arg>
<doc>Gets the numeric value from a counter element</doc>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${counter_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:38.714" level="INFO">${text} = 5</msg>
<status status="PASS" starttime="20250923 08:28:38.698" endtime="20250923 08:28:38.714"/>
</kw>
<msg timestamp="20250923 08:28:38.714" level="INFO">${initial_count} = 5</msg>
<status status="PASS" starttime="20250923 08:28:38.698" endtime="20250923 08:28:38.714"/>
</kw>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>CounterTest</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:28:38.714" level="INFO">${timestamp} = 20250923_082838</msg>
<status status="PASS" starttime="20250923 08:28:38.714" endtime="20250923 08:28:38.714"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:38.715" level="INFO">${unique_name} = CounterTest_20250923_082838</msg>
<status status="PASS" starttime="20250923 08:28:38.714" endtime="20250923 08:28:38.715"/>
</kw>
<msg timestamp="20250923 08:28:38.715" level="INFO">${dep_name} = CounterTest_20250923_082838</msg>
<status status="PASS" starttime="20250923 08:28:38.714" endtime="20250923 08:28:38.715"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>Test for counter updates</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:38.715" endtime="20250923 08:28:38.724"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:38.724" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:28:38.724" endtime="20250923 08:28:38.748"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:38.748" endtime="20250923 08:28:38.763"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:38.763" endtime="20250923 08:28:38.772"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:38.773" endtime="20250923 08:28:38.783"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:38.783" endtime="20250923 08:28:38.794"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:38.795" level="INFO">Typing text 'CounterTest_20250923_082838' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:28:38.794" endtime="20250923 08:28:38.835"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:38.838" level="INFO">Typing text 'Test for counter updates' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:28:38.837" endtime="20250923 08:28:38.874"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:28:38.875" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:28:38.874" endtime="20250923 08:28:38.901"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:38.901" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:28:38.901" endtime="20250923 08:28:38.919"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:38.920" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:28:38.919" endtime="20250923 08:28:38.937"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:28:38.937" endtime="20250923 08:28:38.938"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:38.938" endtime="20250923 08:28:38.945"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:38.946" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:28:38.946" endtime="20250923 08:28:38.976"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:28:38.976" endtime="20250923 08:28:38.985"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:40.988" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:28:38.985" endtime="20250923 08:28:40.989"/>
</kw>
<status status="PASS" starttime="20250923 08:28:38.715" endtime="20250923 08:28:40.990"/>
</kw>
<kw name="Get Counter Value" library="depflow_keywords">
<var>${after_add_count}</var>
<arg>${TOTAL_COUNT}</arg>
<doc>Gets the numeric value from a counter element</doc>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${counter_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:41.008" level="INFO">${text} = 6</msg>
<status status="PASS" starttime="20250923 08:28:40.992" endtime="20250923 08:28:41.008"/>
</kw>
<msg timestamp="20250923 08:28:41.009" level="INFO">${after_add_count} = 6</msg>
<status status="PASS" starttime="20250923 08:28:40.990" endtime="20250923 08:28:41.009"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_count}</var>
<arg>${initial_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250923 08:28:41.009" level="INFO">${expected_count} = 6</msg>
<status status="PASS" starttime="20250923 08:28:41.009" endtime="20250923 08:28:41.009"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${after_add_count}</arg>
<arg>${expected_count}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250923 08:28:41.009" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20250923 08:28:41.009" endtime="20250923 08:28:41.009"/>
</kw>
<kw name="Delete Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name (legacy method)</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dependency_name}')]]//button[contains(@class, 'btn-delete')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:41.010" level="INFO">${delete_button} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'CounterTest_20250923_082838')]]//button[contains(@class, 'btn-delete')]</msg>
<status status="PASS" starttime="20250923 08:28:41.010" endtime="20250923 08:28:41.010"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:41.010" level="INFO">Clicking element 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'CounterTest_20250923_082838')]]//button[contains(@class, 'btn-delete')]'.</msg>
<msg timestamp="20250923 08:28:51.301" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-16.png"&gt;&lt;img src="selenium-screenshot-16.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:28:51.302" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'CounterTest_20250923_082838')]]//button[contains(@class, 'btn-delete')]' not found.</msg>
<status status="FAIL" starttime="20250923 08:28:41.010" endtime="20250923 08:28:51.302"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<status status="NOT RUN" starttime="20250923 08:28:51.302" endtime="20250923 08:28:51.302"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 08:28:51.302" endtime="20250923 08:28:51.302"/>
</kw>
<status status="FAIL" starttime="20250923 08:28:41.010" endtime="20250923 08:28:51.302"/>
</kw>
<kw name="Get Counter Value" library="depflow_keywords">
<var>${after_delete_count}</var>
<arg>${TOTAL_COUNT}</arg>
<doc>Gets the numeric value from a counter element</doc>
<status status="NOT RUN" starttime="20250923 08:28:51.303" endtime="20250923 08:28:51.303"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${after_delete_count}</arg>
<arg>${initial_count}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="NOT RUN" starttime="20250923 08:28:51.303" endtime="20250923 08:28:51.303"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:28:51.304" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:28:51.303" endtime="20250923 08:28:51.311"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:52.314" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:51.311" endtime="20250923 08:28:52.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:28:52.314" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:28:52.314" endtime="20250923 08:28:52.314"/>
</kw>
<status status="PASS" starttime="20250923 08:28:51.303" endtime="20250923 08:28:52.314"/>
</kw>
<status status="PASS" starttime="20250923 08:28:51.303" endtime="20250923 08:28:52.315"/>
</kw>
<doc>Test that counters update correctly after CRUD operations</doc>
<tag>counters</tag>
<tag>crud</tag>
<tag>integration</tag>
<status status="FAIL" starttime="20250923 08:28:34.640" endtime="20250923 08:28:52.315">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'CounterTest_20250923_082838')]]//button[contains(@class, 'btn-delete')]' not found.</status>
</test>
<test id="s1-t23" name="TC026 - Add Dependency With Special Characters" line="406">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:28:52.317" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:28:52.316" endtime="20250923 08:28:52.322"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:53.323" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:52.322" endtime="20250923 08:28:53.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:28:53.325" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:28:53.324" endtime="20250923 08:28:53.325"/>
</kw>
<status status="PASS" starttime="20250923 08:28:52.316" endtime="20250923 08:28:53.325"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:28:53.326" endtime="20250923 08:28:53.338"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:54.341" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:53.338" endtime="20250923 08:28:54.341"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:28:54.342" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:28:54.341" endtime="20250923 08:28:54.367"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:56.369" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:28:54.368" endtime="20250923 08:28:56.370"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:56.370" endtime="20250923 08:28:56.386"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:56.386" endtime="20250923 08:28:56.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:28:56.398" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:28:56.397" endtime="20250923 08:28:56.398"/>
</kw>
<status status="PASS" starttime="20250923 08:28:53.326" endtime="20250923 08:28:56.398"/>
</kw>
<status status="PASS" starttime="20250923 08:28:53.325" endtime="20250923 08:28:56.398"/>
</kw>
<status status="PASS" starttime="20250923 08:28:52.316" endtime="20250923 08:28:56.398"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${special_name}</var>
<arg>Test-Dep_With@Special#Chars!</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:56.398" level="INFO">${special_name} = Test-Dep_With@Special#Chars!</msg>
<status status="PASS" starttime="20250923 08:28:56.398" endtime="20250923 08:28:56.398"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${special_desc}</var>
<arg>Description with special chars: @#$%^&amp;*()_+-={}[]|\\:";'&lt;&gt;?,./</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:28:56.398" level="INFO">${special_desc} = Description with special chars: @#$%^&amp;*()_+-={}[]|\:";'&lt;&gt;?,./</msg>
<status status="PASS" starttime="20250923 08:28:56.398" endtime="20250923 08:28:56.398"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${special_name}</arg>
<arg>${special_desc}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:56.399" endtime="20250923 08:28:56.408"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:56.409" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:28:56.408" endtime="20250923 08:28:56.450"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:56.450" endtime="20250923 08:28:56.479"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:56.480" endtime="20250923 08:28:56.490"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:56.490" endtime="20250923 08:28:56.499"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:56.499" endtime="20250923 08:28:56.508"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:56.508" level="INFO">Typing text 'Test-Dep_With@Special#Chars!' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:28:56.508" endtime="20250923 08:28:56.556"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:56.556" level="INFO">Typing text 'Description with special chars: @#$%^&amp;*()_+-={}[]|\:";'&lt;&gt;?,./' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:28:56.556" endtime="20250923 08:28:56.602"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:28:56.605" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:28:56.602" endtime="20250923 08:28:56.741"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:56.741" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:28:56.741" endtime="20250923 08:28:56.765"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:28:56.765" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:28:56.765" endtime="20250923 08:28:56.781"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:28:56.781" endtime="20250923 08:28:56.781"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:28:56.781" endtime="20250923 08:28:56.789"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:28:56.789" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:28:56.789" endtime="20250923 08:28:56.816"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:28:56.817" endtime="20250923 08:28:56.825"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:58.832" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:28:56.825" endtime="20250923 08:28:58.832"/>
</kw>
<status status="PASS" starttime="20250923 08:28:56.398" endtime="20250923 08:28:58.832"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${special_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>xpath://div[@class='dependency-name' and contains(text(), '${dependency_name}')]</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:28:58.834" endtime="20250923 08:28:58.848"/>
</kw>
<status status="PASS" starttime="20250923 08:28:58.833" endtime="20250923 08:28:58.848"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:28:58.849" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:28:58.849" endtime="20250923 08:28:58.853"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:28:59.857" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:58.853" endtime="20250923 08:28:59.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:28:59.858" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:28:59.857" endtime="20250923 08:28:59.858"/>
</kw>
<status status="PASS" starttime="20250923 08:28:58.849" endtime="20250923 08:28:59.858"/>
</kw>
<status status="PASS" starttime="20250923 08:28:58.848" endtime="20250923 08:28:59.858"/>
</kw>
<doc>Test creating dependency with special characters in name and description</doc>
<tag>crud</tag>
<tag>edge_case</tag>
<tag>special_characters</tag>
<status status="PASS" starttime="20250923 08:28:52.315" endtime="20250923 08:28:59.858"/>
</test>
<test id="s1-t24" name="TC027 - Add Dependency With Long Text" line="416">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:28:59.873" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:28:59.868" endtime="20250923 08:28:59.877"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:29:00.883" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:28:59.877" endtime="20250923 08:29:00.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:29:00.888" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:29:00.887" endtime="20250923 08:29:00.888"/>
</kw>
<status status="PASS" starttime="20250923 08:28:59.861" endtime="20250923 08:29:00.889"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:29:00.891" endtime="20250923 08:29:00.900"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:29:01.901" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:29:00.900" endtime="20250923 08:29:01.901"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:29:01.902" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:29:01.902" endtime="20250923 08:29:01.913"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:29:03.913" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:29:01.913" endtime="20250923 08:29:03.914"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:03.914" endtime="20250923 08:29:03.935"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:03.935" endtime="20250923 08:29:03.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:29:03.946" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:29:03.946" endtime="20250923 08:29:03.946"/>
</kw>
<status status="PASS" starttime="20250923 08:29:00.890" endtime="20250923 08:29:03.946"/>
</kw>
<status status="PASS" starttime="20250923 08:29:00.889" endtime="20250923 08:29:03.946"/>
</kw>
<status status="PASS" starttime="20250923 08:28:59.859" endtime="20250923 08:29:03.946"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${long_name}</var>
<arg>${'Very Long Dependency Name That Exceeds Normal Length To Test Field Boundaries' * 2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:29:03.948" level="FAIL">Resolving variable '${'Very Long Dependency Name That Exceeds Normal Length To Test Field Boundaries' * 2}' failed: Variable '${'Very Long Dependency Name That Exceeds Normal Length To Test Field Boundaries}' not found.</msg>
<status status="FAIL" starttime="20250923 08:29:03.946" endtime="20250923 08:29:03.948"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${long_desc}</var>
<arg>${'This is a very long description that tests the maximum length boundaries of the description field in the dependency management system. ' * 10}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250923 08:29:03.948" endtime="20250923 08:29:03.948"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${long_name}</arg>
<arg>${long_desc}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<status status="NOT RUN" starttime="20250923 08:29:03.948" endtime="20250923 08:29:03.948"/>
</kw>
<kw name="Verify Dependency Exists" library="depflow_keywords">
<arg>${long_name}</arg>
<doc>Verifies that a dependency exists in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 08:29:03.948" endtime="20250923 08:29:03.948"/>
</kw>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:29:03.949" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:29:03.949" endtime="20250923 08:29:03.954"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:29:04.955" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:29:03.954" endtime="20250923 08:29:04.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:29:04.956" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:29:04.956" endtime="20250923 08:29:04.956"/>
</kw>
<status status="PASS" starttime="20250923 08:29:03.948" endtime="20250923 08:29:04.956"/>
</kw>
<status status="PASS" starttime="20250923 08:29:03.948" endtime="20250923 08:29:04.956"/>
</kw>
<doc>Test creating dependency with maximum length text fields</doc>
<tag>boundary</tag>
<tag>crud</tag>
<tag>edge_case</tag>
<status status="FAIL" starttime="20250923 08:28:59.859" endtime="20250923 08:29:04.956">Resolving variable '${'Very Long Dependency Name That Exceeds Normal Length To Test Field Boundaries' * 2}' failed: Variable '${'Very Long Dependency Name That Exceeds Normal Length To Test Field Boundaries}' not found.</status>
</test>
<test id="s1-t25" name="TC028 - Bulk Delete Dependencies" line="426">
<kw name="Test Mode Test Setup" library="depflow_keywords" type="SETUP">
<doc>Individual test setup using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:29:04.959" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:29:04.958" endtime="20250923 08:29:04.964"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:29:05.970" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:29:04.964" endtime="20250923 08:29:05.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:29:05.979" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:29:05.975" endtime="20250923 08:29:05.990"/>
</kw>
<status status="PASS" starttime="20250923 08:29:04.958" endtime="20250923 08:29:06.019"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 08:29:06.022" endtime="20250923 08:29:06.049"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:29:07.050" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:29:06.049" endtime="20250923 08:29:07.050"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:29:07.051" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:29:07.050" endtime="20250923 08:29:07.064"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:29:09.067" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:29:07.064" endtime="20250923 08:29:09.067"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:09.067" endtime="20250923 08:29:09.082"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:09.083" endtime="20250923 08:29:09.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:29:09.094" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 08:29:09.094" endtime="20250923 08:29:09.094"/>
</kw>
<status status="PASS" starttime="20250923 08:29:06.022" endtime="20250923 08:29:09.094"/>
</kw>
<status status="PASS" starttime="20250923 08:29:06.021" endtime="20250923 08:29:09.094"/>
</kw>
<status status="PASS" starttime="20250923 08:29:04.958" endtime="20250923 08:29:09.094"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{dep_names}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250923 08:29:09.094" level="INFO">@{dep_names} = [ ]</msg>
<status status="PASS" starttime="20250923 08:29:09.094" endtime="20250923 08:29:09.094"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>3</value>
<iter>
<var name="${i}">0</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>BulkDelete_${i}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:29:09.096" level="INFO">${timestamp} = 20250923_082909</msg>
<status status="PASS" starttime="20250923 08:29:09.095" endtime="20250923 08:29:09.096"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:29:09.097" level="INFO">${unique_name} = BulkDelete_0_20250923_082909</msg>
<status status="PASS" starttime="20250923 08:29:09.096" endtime="20250923 08:29:09.097"/>
</kw>
<msg timestamp="20250923 08:29:09.097" level="INFO">${dep_name} = BulkDelete_0_20250923_082909</msg>
<status status="PASS" starttime="20250923 08:29:09.095" endtime="20250923 08:29:09.097"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${dep_names}</arg>
<arg>${dep_name}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250923 08:29:09.097" endtime="20250923 08:29:09.097"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>Bulk delete test dependency ${i}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:09.098" endtime="20250923 08:29:09.106"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:29:09.106" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:29:09.106" endtime="20250923 08:29:09.156"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:09.156" endtime="20250923 08:29:09.171"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:09.171" endtime="20250923 08:29:09.180"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:09.180" endtime="20250923 08:29:09.189"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:09.189" endtime="20250923 08:29:09.205"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:29:09.206" level="INFO">Typing text 'BulkDelete_0_20250923_082909' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:29:09.205" endtime="20250923 08:29:09.278"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:29:09.280" level="INFO">Typing text 'Bulk delete test dependency 0' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:29:09.279" endtime="20250923 08:29:09.385"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:29:09.386" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:29:09.385" endtime="20250923 08:29:09.448"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:29:09.449" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:29:09.448" endtime="20250923 08:29:09.467"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:29:09.467" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:29:09.467" endtime="20250923 08:29:09.489"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:29:09.491" endtime="20250923 08:29:09.492"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:09.493" endtime="20250923 08:29:09.504"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:29:09.505" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:29:09.504" endtime="20250923 08:29:09.546"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:29:09.546" endtime="20250923 08:29:09.556"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:29:11.559" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:29:09.556" endtime="20250923 08:29:11.559"/>
</kw>
<status status="PASS" starttime="20250923 08:29:09.097" endtime="20250923 08:29:11.560"/>
</kw>
<status status="PASS" starttime="20250923 08:29:09.094" endtime="20250923 08:29:11.560"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>BulkDelete_${i}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:29:11.561" level="INFO">${timestamp} = 20250923_082911</msg>
<status status="PASS" starttime="20250923 08:29:11.561" endtime="20250923 08:29:11.561"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:29:11.562" level="INFO">${unique_name} = BulkDelete_1_20250923_082911</msg>
<status status="PASS" starttime="20250923 08:29:11.561" endtime="20250923 08:29:11.562"/>
</kw>
<msg timestamp="20250923 08:29:11.562" level="INFO">${dep_name} = BulkDelete_1_20250923_082911</msg>
<status status="PASS" starttime="20250923 08:29:11.560" endtime="20250923 08:29:11.562"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${dep_names}</arg>
<arg>${dep_name}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250923 08:29:11.562" endtime="20250923 08:29:11.562"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>Bulk delete test dependency ${i}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:11.564" endtime="20250923 08:29:11.577"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:29:11.577" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:29:11.577" endtime="20250923 08:29:11.606"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:11.606" endtime="20250923 08:29:11.620"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:11.621" endtime="20250923 08:29:11.630"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:11.630" endtime="20250923 08:29:11.638"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:11.639" endtime="20250923 08:29:11.647"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:29:11.647" level="INFO">Typing text 'BulkDelete_1_20250923_082911' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:29:11.647" endtime="20250923 08:29:11.683"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:29:11.683" level="INFO">Typing text 'Bulk delete test dependency 1' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:29:11.683" endtime="20250923 08:29:11.717"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:29:11.717" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:29:11.717" endtime="20250923 08:29:11.749"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:29:11.749" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:29:11.749" endtime="20250923 08:29:11.766"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:29:11.767" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:29:11.767" endtime="20250923 08:29:11.784"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:29:11.784" endtime="20250923 08:29:11.785"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:11.785" endtime="20250923 08:29:11.795"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:29:11.795" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:29:11.795" endtime="20250923 08:29:11.823"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:29:11.823" endtime="20250923 08:29:11.832"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:29:13.834" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:29:11.832" endtime="20250923 08:29:13.834"/>
</kw>
<status status="PASS" starttime="20250923 08:29:11.562" endtime="20250923 08:29:13.834"/>
</kw>
<status status="PASS" starttime="20250923 08:29:11.560" endtime="20250923 08:29:13.834"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Generate Test Data" library="depflow_keywords">
<var>${dep_name}</var>
<arg>BulkDelete_${i}</arg>
<doc>Generates unique test data for test runs</doc>
<kw name="Get Current Date" library="DateTime">
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250923 08:29:13.835" level="INFO">${timestamp} = 20250923_082913</msg>
<status status="PASS" starttime="20250923 08:29:13.835" endtime="20250923 08:29:13.835"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${unique_name}</var>
<arg>${prefix}_${timestamp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:29:13.835" level="INFO">${unique_name} = BulkDelete_2_20250923_082913</msg>
<status status="PASS" starttime="20250923 08:29:13.835" endtime="20250923 08:29:13.835"/>
</kw>
<msg timestamp="20250923 08:29:13.835" level="INFO">${dep_name} = BulkDelete_2_20250923_082913</msg>
<status status="PASS" starttime="20250923 08:29:13.835" endtime="20250923 08:29:13.835"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${dep_names}</arg>
<arg>${dep_name}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250923 08:29:13.835" endtime="20250923 08:29:13.836"/>
</kw>
<kw name="Add New Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<arg>Bulk delete test dependency ${i}</arg>
<arg>${TEST_DEP_TEAM}</arg>
<doc>Adds a new dependency with provided details (updated for current app version)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:13.837" endtime="20250923 08:29:13.846"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_DEPENDENCY_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:29:13.846" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'showAddDependencyModal')]'.</msg>
<status status="PASS" starttime="20250923 08:29:13.846" endtime="20250923 08:29:13.877"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:13.877" endtime="20250923 08:29:13.889"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:13.889" endtime="20250923 08:29:13.899"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:13.899" endtime="20250923 08:29:13.907"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:13.907" endtime="20250923 08:29:13.918"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_NAME_FIELD}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:29:13.919" level="INFO">Typing text 'BulkDelete_2_20250923_082913' into text field 'id:addName'.</msg>
<status status="PASS" starttime="20250923 08:29:13.918" endtime="20250923 08:29:13.959"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DEP_DESCRIPTION_FIELD}</arg>
<arg>${description}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 08:29:13.960" level="INFO">Typing text 'Bulk delete test dependency 2' into text field 'id:addDescription'.</msg>
<status status="PASS" starttime="20250923 08:29:13.959" endtime="20250923 08:29:14.100"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${DEP_TEAM_SELECT}</arg>
<arg>${team}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20250923 08:29:14.101" level="INFO">Selecting options from selection list 'id:addTeam' by label Quality Flow.</msg>
<status status="PASS" starttime="20250923 08:29:14.101" endtime="20250923 08:29:14.130"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_STATUS_SELECT}</arg>
<arg>${status}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:29:14.130" level="INFO">Selecting options from selection list 'id:addStatus' by value NOT STARTED.</msg>
<status status="PASS" starttime="20250923 08:29:14.130" endtime="20250923 08:29:14.147"/>
</kw>
<kw name="Select From List By Value" library="SeleniumLibrary">
<arg>${DEP_PRIORITY_SELECT}</arg>
<arg>${priority}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<msg timestamp="20250923 08:29:14.148" level="INFO">Selecting options from selection list 'id:addPriority' by value MEDIUM.</msg>
<status status="PASS" starttime="20250923 08:29:14.147" endtime="20250923 08:29:14.164"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${jira}' != '${EMPTY}'</arg>
<arg>Input Text</arg>
<arg>${DEP_JIRA_FIELD}</arg>
<arg>${jira}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 08:29:14.164" endtime="20250923 08:29:14.165"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 08:29:14.165" endtime="20250923 08:29:14.174"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:29:14.174" level="INFO">Clicking element 'xpath://button[@type='submit' and contains(@class, 'btn-add')]'.</msg>
<status status="PASS" starttime="20250923 08:29:14.174" endtime="20250923 08:29:14.202"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ADD_EDIT_MODAL}</arg>
<arg>timeout=15s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 08:29:14.202" endtime="20250923 08:29:14.213"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:29:16.214" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 08:29:14.214" endtime="20250923 08:29:16.214"/>
</kw>
<status status="PASS" starttime="20250923 08:29:13.836" endtime="20250923 08:29:16.215"/>
</kw>
<status status="PASS" starttime="20250923 08:29:13.834" endtime="20250923 08:29:16.215"/>
</iter>
<status status="PASS" starttime="20250923 08:29:09.094" endtime="20250923 08:29:16.215"/>
</for>
<for flavor="IN">
<var>${dep_name}</var>
<value>@{dep_names}</value>
<iter>
<var name="${dep_name}">BulkDelete_0_20250923_082909</var>
<kw name="Delete Dependency" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Deletes a dependency by name (legacy method)</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${delete_button}</var>
<arg>xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), '${dependency_name}')]]//button[contains(@class, 'btn-delete')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 08:29:16.215" level="INFO">${delete_button} = xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'BulkDelete_0_20250923_082909')]]//button[contains(@class, 'btn-delete')]</msg>
<status status="PASS" starttime="20250923 08:29:16.215" endtime="20250923 08:29:16.215"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${delete_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 08:29:16.216" level="INFO">Clicking element 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'BulkDelete_0_20250923_082909')]]//button[contains(@class, 'btn-delete')]'.</msg>
<msg timestamp="20250923 08:29:26.473" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-17.png"&gt;&lt;img src="selenium-screenshot-17.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 08:29:26.473" level="FAIL">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'BulkDelete_0_20250923_082909')]]//button[contains(@class, 'btn-delete')]' not found.</msg>
<status status="FAIL" starttime="20250923 08:29:16.215" endtime="20250923 08:29:26.474"/>
</kw>
<kw name="Handle Alert" library="SeleniumLibrary">
<arg>ACCEPT</arg>
<doc>Handles the current alert and returns its message.</doc>
<status status="NOT RUN" starttime="20250923 08:29:26.474" endtime="20250923 08:29:26.474"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 08:29:26.474" endtime="20250923 08:29:26.474"/>
</kw>
<status status="FAIL" starttime="20250923 08:29:16.215" endtime="20250923 08:29:26.474"/>
</kw>
<kw name="Verify Dependency Does Not Exist" library="depflow_keywords">
<arg>${dep_name}</arg>
<doc>Verifies that a dependency does not exist in the dependencies container</doc>
<status status="NOT RUN" starttime="20250923 08:29:26.474" endtime="20250923 08:29:26.474"/>
</kw>
<status status="FAIL" starttime="20250923 08:29:16.215" endtime="20250923 08:29:26.474"/>
</iter>
<status status="FAIL" starttime="20250923 08:29:16.215" endtime="20250923 08:29:26.474"/>
</for>
<kw name="Test Mode Test Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Individual test teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:29:26.475" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:29:26.475" endtime="20250923 08:29:26.479"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:29:27.483" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:29:26.479" endtime="20250923 08:29:27.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:29:27.484" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:29:27.484" endtime="20250923 08:29:27.484"/>
</kw>
<status status="PASS" starttime="20250923 08:29:26.474" endtime="20250923 08:29:27.484"/>
</kw>
<status status="PASS" starttime="20250923 08:29:26.474" endtime="20250923 08:29:27.484"/>
</kw>
<doc>Test deleting multiple dependencies in sequence</doc>
<tag>bulk</tag>
<tag>crud</tag>
<tag>delete</tag>
<status status="FAIL" starttime="20250923 08:29:04.957" endtime="20250923 08:29:27.484">Element with locator 'xpath://tr[td[contains(@class, 'dependency-name') and contains(text(), 'BulkDelete_0_20250923_082909')]]//button[contains(@class, 'btn-delete')]' not found.</status>
</test>
<kw name="Test Mode Suite Teardown" library="depflow_keywords" type="TEARDOWN">
<doc>Teardown using test mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 08:29:27.488" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 08:29:27.488" endtime="20250923 08:29:27.493"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 08:29:28.496" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 08:29:27.493" endtime="20250923 08:29:28.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 08:29:28.496" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 08:29:28.496" endtime="20250923 08:29:28.496"/>
</kw>
<status status="PASS" starttime="20250923 08:29:27.487" endtime="20250923 08:29:28.496"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 08:29:28.497" endtime="20250923 08:29:28.961"/>
</kw>
<status status="PASS" starttime="20250923 08:29:28.496" endtime="20250923 08:29:28.962"/>
</kw>
<status status="PASS" starttime="20250923 08:29:27.487" endtime="20250923 08:29:28.962"/>
</kw>
<doc>Dependency CRUD Operations Test Suite for DepFlow Application</doc>
<status status="FAIL" starttime="20250923 08:22:42.547" endtime="20250923 08:29:28.962"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="18" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="2" skip="0">admin</stat>
<stat pass="0" fail="1" skip="0">boundary</stat>
<stat pass="0" fail="1" skip="0">bulk</stat>
<stat pass="1" fail="1" skip="0">cancel</stat>
<stat pass="0" fail="2" skip="0">colors</stat>
<stat pass="3" fail="0" skip="0">comprehensive</stat>
<stat pass="0" fail="2" skip="0">confirmation</stat>
<stat pass="0" fail="1" skip="0">counters</stat>
<stat pass="0" fail="2" skip="0">create</stat>
<stat pass="5" fail="18" skip="0">crud</stat>
<stat pass="1" fail="0" skip="0">dashboard</stat>
<stat pass="0" fail="5" skip="0">delete</stat>
<stat pass="1" fail="1" skip="0">edge_case</stat>
<stat pass="0" fail="3" skip="0">edit</stat>
<stat pass="0" fail="2" skip="0">inline_edit</stat>
<stat pass="0" fail="1" skip="0">integration</stat>
<stat pass="0" fail="1" skip="0">minimal</stat>
<stat pass="1" fail="0" skip="0">modal</stat>
<stat pass="0" fail="2" skip="0">negative</stat>
<stat pass="1" fail="2" skip="0">priority</stat>
<stat pass="0" fail="4" skip="0">rbac</stat>
<stat pass="0" fail="2" skip="0">restriction</stat>
<stat pass="2" fail="1" skip="0">smoke</stat>
<stat pass="1" fail="0" skip="0">special_characters</stat>
<stat pass="1" fail="2" skip="0">status</stat>
<stat pass="1" fail="0" skip="0">teams</stat>
<stat pass="3" fail="2" skip="0">ui</stat>
<stat pass="0" fail="3" skip="0">update</stat>
<stat pass="0" fail="2" skip="0">user</stat>
<stat pass="0" fail="2" skip="0">validation</stat>
</tag>
<suite>
<stat pass="7" fail="18" skip="0" id="s1" name="02 Dependency Crud Tests">02 Dependency Crud Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
