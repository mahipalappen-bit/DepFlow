<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.6 on darwin)" generated="20250923 07:29:16.480" rpa="false" schemaversion="4">
<suite id="s1" name="01 Authentication Tests" source="/Users/mmoola/Cursor/Dependency Management App/tests/test_suites/01_authentication_tests.robot">
<kw name="Setup Test Environment" library="depflow_keywords" type="SETUP">
<doc>Sets up test environment with fresh browser</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:29:17.397" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:29:17.396" endtime="20250923 07:29:21.753"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:29:21.754" endtime="20250923 07:29:22.131"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:29:22.131" endtime="20250923 07:29:22.133"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:29:22.133" endtime="20250923 07:29:22.171"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:25.172" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:29:22.171" endtime="20250923 07:29:25.172"/>
</kw>
<status status="PASS" starttime="20250923 07:29:17.396" endtime="20250923 07:29:25.172"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250923 07:29:25.349" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20250923 07:29:25.173" endtime="20250923 07:29:25.349"/>
</kw>
<status status="PASS" starttime="20250923 07:29:17.396" endtime="20250923 07:29:25.349"/>
</kw>
<test id="s1-t1" name="TC001 - Verify Landing Page Loads Successfully" line="33">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:29:25.351" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:29:25.351" endtime="20250923 07:29:26.653"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:29:26.654" endtime="20250923 07:29:27.037"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:29:27.037" endtime="20250923 07:29:27.039"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:29:27.039" endtime="20250923 07:29:27.048"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:30.050" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:29:27.048" endtime="20250923 07:29:30.050"/>
</kw>
<status status="PASS" starttime="20250923 07:29:25.350" endtime="20250923 07:29:30.050"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:29:30.057" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:29:30.051" endtime="20250923 07:29:30.067"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:31.068" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:29:30.067" endtime="20250923 07:29:31.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:29:31.068" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:29:31.068" endtime="20250923 07:29:31.068"/>
</kw>
<status status="PASS" starttime="20250923 07:29:30.051" endtime="20250923 07:29:31.068"/>
</kw>
<status status="PASS" starttime="20250923 07:29:25.350" endtime="20250923 07:29:31.068"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>DepFlow - Enterprise Dependency Management Platform</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20250923 07:29:31.072" level="INFO">Page title is 'DepFlow - Enterprise Dependency Management Platform'.</msg>
<status status="PASS" starttime="20250923 07:29:31.069" endtime="20250923 07:29:31.072"/>
</kw>
<kw name="Verify DepFlow Logo Present" library="depflow_keywords">
<doc>Verifies DepFlow logo is present on page</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:29:31.077" level="INFO">Current page contains element 'xpath://div[contains(@class, 'depflow-logo')]'.</msg>
<status status="PASS" starttime="20250923 07:29:31.072" endtime="20250923 07:29:31.077"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 07:29:31.124" level="INFO">Element 'xpath://div[contains(@class, 'depflow-logo')]' is displayed.</msg>
<status status="PASS" starttime="20250923 07:29:31.077" endtime="20250923 07:29:31.124"/>
</kw>
<status status="PASS" starttime="20250923 07:29:31.072" endtime="20250923 07:29:31.124"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:29:31.130" level="INFO">Current page contains element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:29:31.125" endtime="20250923 07:29:31.130"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${GET_STARTED_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:29:31.137" level="INFO">Current page contains element 'xpath://button[contains(@onclick, 'scrollToDemo')]'.</msg>
<status status="PASS" starttime="20250923 07:29:31.130" endtime="20250923 07:29:31.137"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Streamlined Software Lifecycle Management</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:29:31.143" level="INFO">Current page contains text 'Streamlined Software Lifecycle Management'.</msg>
<status status="PASS" starttime="20250923 07:29:31.137" endtime="20250923 07:29:31.143"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:29:31.144" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:29:31.144" endtime="20250923 07:29:31.146"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:32.147" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:29:31.146" endtime="20250923 07:29:32.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:29:32.147" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:29:32.147" endtime="20250923 07:29:32.147"/>
</kw>
<status status="PASS" starttime="20250923 07:29:31.144" endtime="20250923 07:29:32.147"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:29:32.148" endtime="20250923 07:29:32.454"/>
</kw>
<status status="PASS" starttime="20250923 07:29:32.147" endtime="20250923 07:29:32.454"/>
</kw>
<status status="PASS" starttime="20250923 07:29:31.144" endtime="20250923 07:29:32.454"/>
</kw>
<doc>Verify that the DepFlow landing page loads with all expected elements</doc>
<tag>landing</tag>
<tag>smoke</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 07:29:25.349" endtime="20250923 07:29:32.454"/>
</test>
<test id="s1-t2" name="TC002 - Verify Login Modal Opens" line="43">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:29:32.456" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:29:32.455" endtime="20250923 07:29:33.828"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:29:33.828" endtime="20250923 07:29:34.195"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:29:34.195" endtime="20250923 07:29:34.196"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:29:34.196" endtime="20250923 07:29:34.205"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:37.206" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:29:34.205" endtime="20250923 07:29:37.206"/>
</kw>
<status status="PASS" starttime="20250923 07:29:32.455" endtime="20250923 07:29:37.206"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:29:37.207" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:29:37.207" endtime="20250923 07:29:37.233"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:38.236" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:29:37.233" endtime="20250923 07:29:38.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:29:38.237" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:29:38.236" endtime="20250923 07:29:38.237"/>
</kw>
<status status="PASS" starttime="20250923 07:29:37.206" endtime="20250923 07:29:38.237"/>
</kw>
<status status="PASS" starttime="20250923 07:29:32.455" endtime="20250923 07:29:38.237"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:29:38.238" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:29:38.237" endtime="20250923 07:29:38.294"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:29:38.294" endtime="20250923 07:29:38.309"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USERNAME_FIELD}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:29:38.315" level="INFO">Current page contains element 'id:email'.</msg>
<status status="PASS" starttime="20250923 07:29:38.309" endtime="20250923 07:29:38.315"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:29:38.321" level="INFO">Current page contains element 'id:password'.</msg>
<status status="PASS" starttime="20250923 07:29:38.315" endtime="20250923 07:29:38.321"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LOGIN_SUBMIT_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:29:38.326" level="INFO">Current page contains element 'xpath://button[contains(@class, 'btn-login')]'.</msg>
<status status="PASS" starttime="20250923 07:29:38.321" endtime="20250923 07:29:38.326"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${ADMIN_CREDENTIALS_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:29:38.332" level="INFO">Current page contains element 'xpath://button[contains(@onclick, 'fillAdminCredentials')]'.</msg>
<status status="PASS" starttime="20250923 07:29:38.326" endtime="20250923 07:29:38.332"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:29:38.333" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:29:38.333" endtime="20250923 07:29:38.336"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:39.338" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:29:38.337" endtime="20250923 07:29:39.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:29:39.339" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:29:39.338" endtime="20250923 07:29:39.339"/>
</kw>
<status status="PASS" starttime="20250923 07:29:38.333" endtime="20250923 07:29:39.339"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:29:39.339" endtime="20250923 07:29:39.492"/>
</kw>
<status status="PASS" starttime="20250923 07:29:39.339" endtime="20250923 07:29:39.492"/>
</kw>
<status status="PASS" starttime="20250923 07:29:38.332" endtime="20250923 07:29:39.492"/>
</kw>
<doc>Verify that clicking Login button opens the login modal</doc>
<tag>modal</tag>
<tag>smoke</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 07:29:32.455" endtime="20250923 07:29:39.492"/>
</test>
<test id="s1-t3" name="TC003 - Successful Admin Login" line="54">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:29:39.494" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:29:39.493" endtime="20250923 07:29:40.959"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:29:40.959" endtime="20250923 07:29:41.326"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:29:41.327" endtime="20250923 07:29:41.328"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:29:41.328" endtime="20250923 07:29:41.335"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:44.337" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:29:41.335" endtime="20250923 07:29:44.337"/>
</kw>
<status status="PASS" starttime="20250923 07:29:39.493" endtime="20250923 07:29:44.337"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:29:44.339" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:29:44.338" endtime="20250923 07:29:44.348"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:45.351" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:29:44.348" endtime="20250923 07:29:45.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:29:45.351" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:29:45.351" endtime="20250923 07:29:45.351"/>
</kw>
<status status="PASS" starttime="20250923 07:29:44.338" endtime="20250923 07:29:45.351"/>
</kw>
<status status="PASS" starttime="20250923 07:29:39.493" endtime="20250923 07:29:45.351"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${modal_visible}</var>
<arg>Element Should Be Visible</arg>
<arg>${LOGIN_MODAL}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 07:29:45.532" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:29:45.532" level="FAIL">The element 'id:loginModal' should be visible, but it is not.</msg>
<status status="FAIL" starttime="20250923 07:29:45.352" endtime="20250923 07:29:45.570"/>
</kw>
<msg timestamp="20250923 07:29:45.570" level="INFO">${modal_visible} = False</msg>
<status status="PASS" starttime="20250923 07:29:45.352" endtime="20250923 07:29:45.570"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${modal_visible}</arg>
<arg>Execute Javascript</arg>
<arg>closeLoginModal()</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 07:29:45.570" endtime="20250923 07:29:45.570"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:46.571" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:29:45.570" endtime="20250923 07:29:46.571"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:29:46.573" endtime="20250923 07:29:46.581"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:47.582" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:29:46.581" endtime="20250923 07:29:47.582"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:29:47.583" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:29:47.583" endtime="20250923 07:29:47.590"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:49.591" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:29:47.590" endtime="20250923 07:29:49.591"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:29:49.591" endtime="20250923 07:29:49.610"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:29:49.610" endtime="20250923 07:29:49.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:29:49.623" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:29:49.623" endtime="20250923 07:29:49.623"/>
</kw>
<status status="PASS" starttime="20250923 07:29:46.572" endtime="20250923 07:29:49.623"/>
</kw>
<status status="PASS" starttime="20250923 07:29:46.572" endtime="20250923 07:29:49.623"/>
</kw>
<status status="PASS" starttime="20250923 07:29:46.572" endtime="20250923 07:29:49.623"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>DepFlow - Enterprise Dependency Management Platform</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20250923 07:29:49.626" level="INFO">Page title is 'DepFlow - Enterprise Dependency Management Platform'.</msg>
<status status="PASS" starttime="20250923 07:29:49.624" endtime="20250923 07:29:49.626"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:29:49.630" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:29:49.626" endtime="20250923 07:29:49.630"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:29:49.633" level="INFO">Current page contains element 'id:dashboardPage'.</msg>
<status status="PASS" starttime="20250923 07:29:49.630" endtime="20250923 07:29:49.633"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Admin User</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:29:49.640" level="INFO">Current page contains text 'Admin User'.</msg>
<status status="PASS" starttime="20250923 07:29:49.633" endtime="20250923 07:29:49.640"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>admin@demo.com</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:29:49.646" level="INFO">Current page contains text 'admin@demo.com'.</msg>
<status status="PASS" starttime="20250923 07:29:49.640" endtime="20250923 07:29:49.646"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:29:49.646" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:29:49.646" endtime="20250923 07:29:49.649"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:50.651" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:29:49.650" endtime="20250923 07:29:50.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:29:50.651" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:29:50.651" endtime="20250923 07:29:50.651"/>
</kw>
<status status="PASS" starttime="20250923 07:29:49.646" endtime="20250923 07:29:50.651"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:29:50.652" endtime="20250923 07:29:50.883"/>
</kw>
<status status="PASS" starttime="20250923 07:29:50.652" endtime="20250923 07:29:50.883"/>
</kw>
<status status="PASS" starttime="20250923 07:29:49.646" endtime="20250923 07:29:50.883"/>
</kw>
<doc>Test successful login with admin credentials using quick fill</doc>
<tag>admin</tag>
<tag>authentication</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20250923 07:29:39.493" endtime="20250923 07:29:50.883"/>
</test>
<test id="s1-t4" name="TC004 - Successful Manual Login" line="73">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:29:50.884" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:29:50.884" endtime="20250923 07:29:52.176"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:29:52.176" endtime="20250923 07:29:52.540"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:29:52.541" endtime="20250923 07:29:52.542"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:29:52.542" endtime="20250923 07:29:52.550"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:55.553" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:29:52.550" endtime="20250923 07:29:55.553"/>
</kw>
<status status="PASS" starttime="20250923 07:29:50.884" endtime="20250923 07:29:55.553"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:29:55.556" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:29:55.554" endtime="20250923 07:29:55.564"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:56.566" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:29:55.565" endtime="20250923 07:29:56.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:29:56.566" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:29:56.566" endtime="20250923 07:29:56.567"/>
</kw>
<status status="PASS" starttime="20250923 07:29:55.554" endtime="20250923 07:29:56.567"/>
</kw>
<status status="PASS" starttime="20250923 07:29:50.884" endtime="20250923 07:29:56.567"/>
</kw>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:29:56.567" endtime="20250923 07:29:56.575"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:57.577" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:29:56.575" endtime="20250923 07:29:57.577"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:29:57.578" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:29:57.577" endtime="20250923 07:29:57.591"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:29:59.594" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:29:57.592" endtime="20250923 07:29:59.594"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:29:59.594" endtime="20250923 07:29:59.616"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:29:59.616" endtime="20250923 07:29:59.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:29:59.628" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:29:59.628" endtime="20250923 07:29:59.628"/>
</kw>
<status status="PASS" starttime="20250923 07:29:56.567" endtime="20250923 07:29:59.628"/>
</kw>
<status status="PASS" starttime="20250923 07:29:56.567" endtime="20250923 07:29:59.628"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:29:59.632" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:29:59.628" endtime="20250923 07:29:59.632"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Admin User</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:29:59.639" level="INFO">Current page contains text 'Admin User'.</msg>
<status status="PASS" starttime="20250923 07:29:59.632" endtime="20250923 07:29:59.639"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 07:29:59.648" level="INFO">Element 'xpath://button[contains(@class, 'btn-logout')]' is displayed.</msg>
<status status="PASS" starttime="20250923 07:29:59.639" endtime="20250923 07:29:59.648"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:29:59.649" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:29:59.648" endtime="20250923 07:29:59.652"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:00.653" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:29:59.652" endtime="20250923 07:30:00.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:30:00.653" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:30:00.653" endtime="20250923 07:30:00.653"/>
</kw>
<status status="PASS" starttime="20250923 07:29:59.648" endtime="20250923 07:30:00.653"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:30:00.654" endtime="20250923 07:30:00.946"/>
</kw>
<status status="PASS" starttime="20250923 07:30:00.653" endtime="20250923 07:30:00.946"/>
</kw>
<status status="PASS" starttime="20250923 07:29:59.648" endtime="20250923 07:30:00.946"/>
</kw>
<doc>Test successful login using Test Mode (avoids modal interference)</doc>
<tag>authentication</tag>
<tag>manual</tag>
<tag>test_mode</tag>
<status status="PASS" starttime="20250923 07:29:50.883" endtime="20250923 07:30:00.946"/>
</test>
<test id="s1-t5" name="TC005 - Invalid Login Credentials" line="83">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:30:00.947" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:30:00.947" endtime="20250923 07:30:02.307"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:30:02.308" endtime="20250923 07:30:02.678"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:30:02.679" endtime="20250923 07:30:02.680"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:30:02.680" endtime="20250923 07:30:02.687"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:05.689" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:30:02.687" endtime="20250923 07:30:05.689"/>
</kw>
<status status="PASS" starttime="20250923 07:30:00.947" endtime="20250923 07:30:05.690"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:30:05.692" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:30:05.691" endtime="20250923 07:30:05.700"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:06.701" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:30:05.700" endtime="20250923 07:30:06.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:30:06.702" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:30:06.701" endtime="20250923 07:30:06.702"/>
</kw>
<status status="PASS" starttime="20250923 07:30:05.690" endtime="20250923 07:30:06.702"/>
</kw>
<status status="PASS" starttime="20250923 07:30:00.947" endtime="20250923 07:30:06.702"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:30:06.703" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:30:06.702" endtime="20250923 07:30:06.747"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:30:06.747" endtime="20250923 07:30:06.761"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USERNAME_FIELD}</arg>
<arg>invalid@user.com</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 07:30:06.761" level="INFO">Typing text 'invalid@user.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20250923 07:30:06.761" endtime="20250923 07:30:06.895"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<arg>wrongpassword</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 07:30:06.895" level="INFO">Typing text 'wrongpassword' into text field 'id:password'.</msg>
<status status="PASS" starttime="20250923 07:30:06.895" endtime="20250923 07:30:06.952"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_SUBMIT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:30:06.952" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-login')]'.</msg>
<msg timestamp="20250923 07:30:08.146" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:30:08.146" level="FAIL">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000102963418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x000000010295b3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000102485050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x00000001024d1f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x00000001024d04d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x00000001024ce2ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001024cd6e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
7   chromedriver                        0x00000001024c2220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
8   chromedriver                        0x00000001024c1cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
9   chromedriver                        0x000000010250d604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
10  chromedriver                        0x00000001024c00d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x0000000102927b08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x000000010292ad20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x0000000102908e58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x000000010292b5cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x00000001028fa59c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x000000010294a9f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x000000010294ab70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x000000010295b000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 07:30:06.952" endtime="20250923 07:30:08.181"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:30:08.181" endtime="20250923 07:30:08.182"/>
</kw>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<status status="NOT RUN" starttime="20250923 07:30:08.182" endtime="20250923 07:30:08.182"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:30:08.182" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:30:08.182" endtime="20250923 07:30:08.190"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:09.192" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:30:08.190" endtime="20250923 07:30:09.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:30:09.193" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:30:09.192" endtime="20250923 07:30:09.193"/>
</kw>
<status status="PASS" starttime="20250923 07:30:08.182" endtime="20250923 07:30:09.193"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:30:09.193" endtime="20250923 07:30:09.521"/>
</kw>
<status status="PASS" starttime="20250923 07:30:09.193" endtime="20250923 07:30:09.521"/>
</kw>
<status status="PASS" starttime="20250923 07:30:08.182" endtime="20250923 07:30:09.521"/>
</kw>
<doc>Test login failure with invalid credentials</doc>
<tag>authentication</tag>
<tag>negative</tag>
<status status="FAIL" starttime="20250923 07:30:00.946" endtime="20250923 07:30:09.522">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000102963418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x000000010295b3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000102485050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x00000001024d1f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x00000001024d04d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x00000001024ce2ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001024cd6e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
    [ Message content over the limit has been removed. ]
... _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x0000000102927b08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x000000010292ad20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x0000000102908e58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x000000010292b5cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x00000001028fa59c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x000000010294a9f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x000000010294ab70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x000000010295b000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8</status>
</test>
<test id="s1-t6" name="TC006 - Empty Credentials Login" line="97">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:30:09.523" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:30:09.523" endtime="20250923 07:30:10.916"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:30:10.917" endtime="20250923 07:30:11.280"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:30:11.281" endtime="20250923 07:30:11.282"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:30:11.283" endtime="20250923 07:30:11.293"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:14.294" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:30:11.293" endtime="20250923 07:30:14.295"/>
</kw>
<status status="PASS" starttime="20250923 07:30:09.522" endtime="20250923 07:30:14.295"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:30:14.297" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:30:14.296" endtime="20250923 07:30:14.306"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:15.309" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:30:14.306" endtime="20250923 07:30:15.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:30:15.309" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:30:15.309" endtime="20250923 07:30:15.309"/>
</kw>
<status status="PASS" starttime="20250923 07:30:14.295" endtime="20250923 07:30:15.309"/>
</kw>
<status status="PASS" starttime="20250923 07:30:09.522" endtime="20250923 07:30:15.309"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:30:15.310" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:30:15.310" endtime="20250923 07:30:15.356"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:30:15.356" endtime="20250923 07:30:15.372"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${USERNAME_FIELD}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 07:30:15.372" endtime="20250923 07:30:15.391"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20250923 07:30:15.391" endtime="20250923 07:30:15.405"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_SUBMIT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:30:15.406" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-login')]'.</msg>
<msg timestamp="20250923 07:30:16.606" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-4.png"&gt;&lt;img src="selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:30:16.606" level="FAIL">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000104e87418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000104e7f3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x00000001049a9050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x00000001049f5f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x00000001049f44d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x00000001049f22ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001049f16e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
7   chromedriver                        0x00000001049e6220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
8   chromedriver                        0x00000001049e5cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
9   chromedriver                        0x0000000104a31604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
10  chromedriver                        0x00000001049e40d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x0000000104e4bb08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x0000000104e4ed20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x0000000104e2ce58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x0000000104e4f5cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x0000000104e1e59c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x0000000104e6e9f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x0000000104e6eb70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x0000000104e7f000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 07:30:15.405" endtime="20250923 07:30:16.606"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:30:16.606" endtime="20250923 07:30:16.606"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:30:16.607" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:30:16.607" endtime="20250923 07:30:16.610"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:17.611" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:30:16.610" endtime="20250923 07:30:17.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:30:17.611" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:30:17.611" endtime="20250923 07:30:17.611"/>
</kw>
<status status="PASS" starttime="20250923 07:30:16.607" endtime="20250923 07:30:17.611"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:30:17.612" endtime="20250923 07:30:17.775"/>
</kw>
<status status="PASS" starttime="20250923 07:30:17.611" endtime="20250923 07:30:17.775"/>
</kw>
<status status="PASS" starttime="20250923 07:30:16.606" endtime="20250923 07:30:17.775"/>
</kw>
<doc>Test login with empty username and password fields</doc>
<tag>authentication</tag>
<tag>negative</tag>
<tag>validation</tag>
<status status="FAIL" starttime="20250923 07:30:09.522" endtime="20250923 07:30:17.775">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000104e87418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000104e7f3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x00000001049a9050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x00000001049f5f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x00000001049f44d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x00000001049f22ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001049f16e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
    [ Message content over the limit has been removed. ]
... _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x0000000104e4bb08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x0000000104e4ed20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x0000000104e2ce58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x0000000104e4f5cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x0000000104e1e59c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x0000000104e6e9f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x0000000104e6eb70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x0000000104e7f000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8</status>
</test>
<test id="s1-t7" name="TC007 - Successful Logout" line="110">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:30:17.777" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:30:17.777" endtime="20250923 07:30:19.124"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:30:19.124" endtime="20250923 07:30:19.497"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:30:19.499" endtime="20250923 07:30:19.502"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:30:19.502" endtime="20250923 07:30:19.510"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:22.511" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:30:19.510" endtime="20250923 07:30:22.511"/>
</kw>
<status status="PASS" starttime="20250923 07:30:17.776" endtime="20250923 07:30:22.511"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:30:22.513" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:30:22.512" endtime="20250923 07:30:22.522"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:23.523" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:30:22.522" endtime="20250923 07:30:23.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:30:23.524" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:30:23.524" endtime="20250923 07:30:23.524"/>
</kw>
<status status="PASS" starttime="20250923 07:30:22.512" endtime="20250923 07:30:23.524"/>
</kw>
<status status="PASS" starttime="20250923 07:30:17.776" endtime="20250923 07:30:23.524"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${modal_visible}</var>
<arg>Element Should Be Visible</arg>
<arg>${LOGIN_MODAL}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 07:30:23.699" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-5.png"&gt;&lt;img src="selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:30:23.699" level="FAIL">The element 'id:loginModal' should be visible, but it is not.</msg>
<status status="FAIL" starttime="20250923 07:30:23.525" endtime="20250923 07:30:23.699"/>
</kw>
<msg timestamp="20250923 07:30:23.699" level="INFO">${modal_visible} = False</msg>
<status status="PASS" starttime="20250923 07:30:23.524" endtime="20250923 07:30:23.699"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${modal_visible}</arg>
<arg>Execute Javascript</arg>
<arg>closeLoginModal()</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250923 07:30:23.699" endtime="20250923 07:30:23.699"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:24.700" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:30:23.699" endtime="20250923 07:30:24.700"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:30:24.701" endtime="20250923 07:30:24.709"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:25.710" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:30:24.710" endtime="20250923 07:30:25.710"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:30:25.712" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:30:25.711" endtime="20250923 07:30:25.731"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:27.734" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:30:25.731" endtime="20250923 07:30:27.734"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:30:27.734" endtime="20250923 07:30:27.752"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:30:27.752" endtime="20250923 07:30:27.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:30:27.766" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:30:27.765" endtime="20250923 07:30:27.766"/>
</kw>
<status status="PASS" starttime="20250923 07:30:24.701" endtime="20250923 07:30:27.766"/>
</kw>
<status status="PASS" starttime="20250923 07:30:24.701" endtime="20250923 07:30:27.766"/>
</kw>
<status status="PASS" starttime="20250923 07:30:24.700" endtime="20250923 07:30:27.766"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:30:27.766" endtime="20250923 07:30:27.776"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:30:27.776" endtime="20250923 07:30:27.783"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:30:27.784" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-logout')]'.</msg>
<status status="PASS" starttime="20250923 07:30:27.784" endtime="20250923 07:30:27.864"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<msg timestamp="20250923 07:30:38.144" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-6.png"&gt;&lt;img src="selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:30:38.144" level="FAIL">Element 'id:userPanel' still visible after 10 seconds.</msg>
<status status="FAIL" starttime="20250923 07:30:27.864" endtime="20250923 07:30:38.159"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20250923 07:30:38.160" endtime="20250923 07:30:38.160"/>
</kw>
<status status="FAIL" starttime="20250923 07:30:27.776" endtime="20250923 07:30:38.160"/>
</kw>
<kw name="Verify DepFlow Logo Present" library="depflow_keywords">
<doc>Verifies DepFlow logo is present on page</doc>
<status status="NOT RUN" starttime="20250923 07:30:38.160" endtime="20250923 07:30:38.160"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" starttime="20250923 07:30:38.161" endtime="20250923 07:30:38.161"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<status status="NOT RUN" starttime="20250923 07:30:38.161" endtime="20250923 07:30:38.161"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:30:38.162" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:30:38.162" endtime="20250923 07:30:38.167"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:39.169" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:30:38.167" endtime="20250923 07:30:39.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:30:39.169" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:30:39.169" endtime="20250923 07:30:39.169"/>
</kw>
<status status="PASS" starttime="20250923 07:30:38.161" endtime="20250923 07:30:39.169"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:30:39.170" endtime="20250923 07:30:39.505"/>
</kw>
<status status="PASS" starttime="20250923 07:30:39.169" endtime="20250923 07:30:39.505"/>
</kw>
<status status="PASS" starttime="20250923 07:30:38.161" endtime="20250923 07:30:39.505"/>
</kw>
<doc>Test successful logout functionality</doc>
<tag>authentication</tag>
<tag>logout</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20250923 07:30:17.776" endtime="20250923 07:30:39.505">Element 'id:userPanel' still visible after 10 seconds.</status>
</test>
<test id="s1-t8" name="TC008 - Admin Credentials Auto-Fill" line="128">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:30:39.507" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:30:39.506" endtime="20250923 07:30:40.927"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:30:40.928" endtime="20250923 07:30:41.295"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:30:41.296" endtime="20250923 07:30:41.296"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:30:41.297" endtime="20250923 07:30:41.303"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:44.304" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:30:41.303" endtime="20250923 07:30:44.304"/>
</kw>
<status status="PASS" starttime="20250923 07:30:39.506" endtime="20250923 07:30:44.304"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:30:44.306" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:30:44.305" endtime="20250923 07:30:44.314"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:45.316" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:30:44.314" endtime="20250923 07:30:45.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:30:45.317" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:30:45.317" endtime="20250923 07:30:45.317"/>
</kw>
<status status="PASS" starttime="20250923 07:30:44.305" endtime="20250923 07:30:45.317"/>
</kw>
<status status="PASS" starttime="20250923 07:30:39.506" endtime="20250923 07:30:45.317"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:30:45.318" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:30:45.318" endtime="20250923 07:30:45.363"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:30:45.364" endtime="20250923 07:30:45.378"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ADMIN_CREDENTIALS_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:30:45.378" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'fillAdminCredentials')]'.</msg>
<status status="PASS" starttime="20250923 07:30:45.378" endtime="20250923 07:30:45.405"/>
</kw>
<kw name="Get Value" library="SeleniumLibrary">
<var>${username_value}</var>
<arg>${USERNAME_FIELD}</arg>
<doc>Returns the value attribute of the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:30:45.417" level="INFO">${username_value} = admin@demo.com</msg>
<status status="PASS" starttime="20250923 07:30:45.405" endtime="20250923 07:30:45.417"/>
</kw>
<kw name="Get Value" library="SeleniumLibrary">
<var>${password_value}</var>
<arg>${PASSWORD_FIELD}</arg>
<doc>Returns the value attribute of the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:30:45.425" level="INFO">${password_value} = admin123456</msg>
<status status="PASS" starttime="20250923 07:30:45.417" endtime="20250923 07:30:45.425"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${username_value}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250923 07:30:45.426" level="INFO">Length is 14</msg>
<status status="PASS" starttime="20250923 07:30:45.425" endtime="20250923 07:30:45.426"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${password_value}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250923 07:30:45.426" level="INFO">Length is 11</msg>
<status status="PASS" starttime="20250923 07:30:45.426" endtime="20250923 07:30:45.426"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:30:45.426" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:30:45.426" endtime="20250923 07:30:45.428"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:46.430" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:30:45.428" endtime="20250923 07:30:46.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:30:46.431" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:30:46.431" endtime="20250923 07:30:46.431"/>
</kw>
<status status="PASS" starttime="20250923 07:30:45.426" endtime="20250923 07:30:46.431"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:30:46.432" endtime="20250923 07:30:46.566"/>
</kw>
<status status="PASS" starttime="20250923 07:30:46.432" endtime="20250923 07:30:46.566"/>
</kw>
<status status="PASS" starttime="20250923 07:30:45.426" endtime="20250923 07:30:46.566"/>
</kw>
<doc>Test the admin credentials auto-fill functionality</doc>
<tag>authentication</tag>
<tag>convenience</tag>
<status status="PASS" starttime="20250923 07:30:39.506" endtime="20250923 07:30:46.566"/>
</test>
<test id="s1-t9" name="TC009 - Login Modal Close Functionality" line="142">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:30:46.568" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:30:46.567" endtime="20250923 07:30:48.070"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:30:48.071" endtime="20250923 07:30:48.438"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:30:48.439" endtime="20250923 07:30:48.440"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:30:48.440" endtime="20250923 07:30:48.447"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:51.448" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:30:48.447" endtime="20250923 07:30:51.448"/>
</kw>
<status status="PASS" starttime="20250923 07:30:46.567" endtime="20250923 07:30:51.448"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:30:51.450" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:30:51.449" endtime="20250923 07:30:51.458"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:52.459" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:30:51.458" endtime="20250923 07:30:52.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:30:52.461" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:30:52.460" endtime="20250923 07:30:52.461"/>
</kw>
<status status="PASS" starttime="20250923 07:30:51.449" endtime="20250923 07:30:52.461"/>
</kw>
<status status="PASS" starttime="20250923 07:30:46.567" endtime="20250923 07:30:52.461"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:30:52.462" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:30:52.461" endtime="20250923 07:30:52.504"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:30:52.504" endtime="20250923 07:30:52.519"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20250923 07:30:52.520" level="INFO">Sending key(s) ('ESCAPE',) to id:loginModal element.</msg>
<msg timestamp="20250923 07:30:52.800" level="INFO">Pressing special key ESCAPE to element.</msg>
<msg timestamp="20250923 07:30:52.800" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20250923 07:30:52.520" endtime="20250923 07:30:52.806"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20250923 07:30:52.806" endtime="20250923 07:30:52.817"/>
</kw>
<kw name="Verify DepFlow Logo Present" library="depflow_keywords">
<doc>Verifies DepFlow logo is present on page</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:30:52.822" level="INFO">Current page contains element 'xpath://div[contains(@class, 'depflow-logo')]'.</msg>
<status status="PASS" starttime="20250923 07:30:52.817" endtime="20250923 07:30:52.822"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20250923 07:30:52.829" level="INFO">Element 'xpath://div[contains(@class, 'depflow-logo')]' is displayed.</msg>
<status status="PASS" starttime="20250923 07:30:52.822" endtime="20250923 07:30:52.829"/>
</kw>
<status status="PASS" starttime="20250923 07:30:52.817" endtime="20250923 07:30:52.830"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:30:52.830" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:30:52.830" endtime="20250923 07:30:52.833"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:53.833" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:30:52.833" endtime="20250923 07:30:53.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:30:53.833" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:30:53.833" endtime="20250923 07:30:53.834"/>
</kw>
<status status="PASS" starttime="20250923 07:30:52.830" endtime="20250923 07:30:53.834"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:30:53.834" endtime="20250923 07:30:53.980"/>
</kw>
<status status="PASS" starttime="20250923 07:30:53.834" endtime="20250923 07:30:53.980"/>
</kw>
<status status="PASS" starttime="20250923 07:30:52.830" endtime="20250923 07:30:53.980"/>
</kw>
<doc>Test closing the login modal without logging in</doc>
<tag>modal</tag>
<tag>ui</tag>
<tag>usability</tag>
<status status="PASS" starttime="20250923 07:30:46.567" endtime="20250923 07:30:53.980"/>
</test>
<test id="s1-t10" name="TC010 - Session Persistence Check" line="156">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:30:53.981" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:30:53.981" endtime="20250923 07:30:55.462"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:30:55.462" endtime="20250923 07:30:55.820"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:30:55.821" endtime="20250923 07:30:55.823"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:30:55.823" endtime="20250923 07:30:55.831"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:58.832" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:30:55.831" endtime="20250923 07:30:58.832"/>
</kw>
<status status="PASS" starttime="20250923 07:30:53.981" endtime="20250923 07:30:58.832"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:30:58.834" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:30:58.833" endtime="20250923 07:30:58.842"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:30:59.844" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:30:58.843" endtime="20250923 07:30:59.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:30:59.845" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:30:59.845" endtime="20250923 07:30:59.845"/>
</kw>
<status status="PASS" starttime="20250923 07:30:58.832" endtime="20250923 07:30:59.845"/>
</kw>
<status status="PASS" starttime="20250923 07:30:53.981" endtime="20250923 07:30:59.845"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:30:59.846" endtime="20250923 07:30:59.856"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:00.858" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:30:59.856" endtime="20250923 07:31:00.858"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:31:00.859" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:31:00.858" endtime="20250923 07:31:00.872"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:02.874" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:31:00.872" endtime="20250923 07:31:02.875"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:31:02.875" endtime="20250923 07:31:02.895"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:31:02.895" endtime="20250923 07:31:02.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:31:02.907" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:31:02.907" endtime="20250923 07:31:02.907"/>
</kw>
<status status="PASS" starttime="20250923 07:30:59.846" endtime="20250923 07:31:02.907"/>
</kw>
<status status="PASS" starttime="20250923 07:30:59.846" endtime="20250923 07:31:02.907"/>
</kw>
<status status="PASS" starttime="20250923 07:30:59.845" endtime="20250923 07:31:02.907"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:31:02.907" endtime="20250923 07:31:02.915"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:31:02.919" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:31:02.916" endtime="20250923 07:31:02.919"/>
</kw>
<status status="PASS" starttime="20250923 07:31:02.907" endtime="20250923 07:31:02.919"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:31:02.922" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:31:02.919" endtime="20250923 07:31:02.922"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>admin@demo.com</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:31:02.928" level="INFO">Current page contains text 'admin@demo.com'.</msg>
<status status="PASS" starttime="20250923 07:31:02.922" endtime="20250923 07:31:02.928"/>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20250923 07:31:02.928" endtime="20250923 07:31:02.947"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:31:02.948" endtime="20250923 07:31:02.955"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:31:02.960" level="INFO">Current page contains element 'id:dashboardPage'.</msg>
<status status="PASS" starttime="20250923 07:31:02.955" endtime="20250923 07:31:02.960"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>admin@demo.com</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:31:02.965" level="INFO">Current page contains text 'admin@demo.com'.</msg>
<status status="PASS" starttime="20250923 07:31:02.960" endtime="20250923 07:31:02.965"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${user_data}</var>
<arg>return localStorage.getItem('depflow_user')</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:31:02.965" level="INFO">Executing JavaScript:
return localStorage.getItem('depflow_user')
Without any arguments.</msg>
<msg timestamp="20250923 07:31:02.967" level="INFO">${user_data} = {"email":"admin@demo.com","name":"Admin User","role":"admin"}</msg>
<status status="PASS" starttime="20250923 07:31:02.965" endtime="20250923 07:31:02.967"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${user_data}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250923 07:31:02.968" level="INFO">Length is 61</msg>
<status status="PASS" starttime="20250923 07:31:02.967" endtime="20250923 07:31:02.968"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${user_data}</arg>
<arg>admin@demo.com</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250923 07:31:02.968" endtime="20250923 07:31:02.968"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:31:02.968" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:31:02.968" endtime="20250923 07:31:02.971"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:03.972" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:31:02.971" endtime="20250923 07:31:03.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:31:03.973" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:31:03.972" endtime="20250923 07:31:03.973"/>
</kw>
<status status="PASS" starttime="20250923 07:31:02.968" endtime="20250923 07:31:03.973"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:31:03.974" endtime="20250923 07:31:04.164"/>
</kw>
<status status="PASS" starttime="20250923 07:31:03.973" endtime="20250923 07:31:04.164"/>
</kw>
<status status="PASS" starttime="20250923 07:31:02.968" endtime="20250923 07:31:04.164"/>
</kw>
<doc>Test that user session persists across page operations and browser refresh</doc>
<tag>authentication</tag>
<tag>persistence</tag>
<tag>session</tag>
<status status="PASS" starttime="20250923 07:30:53.981" endtime="20250923 07:31:04.164"/>
</test>
<test id="s1-t11" name="TC011 - User Role Display Verification" line="178">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:31:04.166" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:31:04.166" endtime="20250923 07:31:05.601"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:31:05.602" endtime="20250923 07:31:05.964"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:31:05.964" endtime="20250923 07:31:05.965"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:31:05.965" endtime="20250923 07:31:05.974"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:08.975" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:31:05.974" endtime="20250923 07:31:08.976"/>
</kw>
<status status="PASS" starttime="20250923 07:31:04.166" endtime="20250923 07:31:08.976"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:31:08.977" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:31:08.976" endtime="20250923 07:31:08.985"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:09.987" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:31:08.985" endtime="20250923 07:31:09.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:31:09.988" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:31:09.987" endtime="20250923 07:31:09.988"/>
</kw>
<status status="PASS" starttime="20250923 07:31:08.976" endtime="20250923 07:31:09.988"/>
</kw>
<status status="PASS" starttime="20250923 07:31:04.165" endtime="20250923 07:31:09.988"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:31:09.989" endtime="20250923 07:31:09.998"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:11.000" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:31:09.998" endtime="20250923 07:31:11.000"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:31:11.001" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:31:11.000" endtime="20250923 07:31:11.015"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:13.018" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:31:11.016" endtime="20250923 07:31:13.018"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:31:13.018" endtime="20250923 07:31:13.041"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:31:13.041" endtime="20250923 07:31:13.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:31:13.053" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:31:13.053" endtime="20250923 07:31:13.053"/>
</kw>
<status status="PASS" starttime="20250923 07:31:09.989" endtime="20250923 07:31:13.053"/>
</kw>
<status status="PASS" starttime="20250923 07:31:09.989" endtime="20250923 07:31:13.053"/>
</kw>
<status status="PASS" starttime="20250923 07:31:09.988" endtime="20250923 07:31:13.054"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:31:13.054" endtime="20250923 07:31:13.061"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Admin</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:31:13.068" level="INFO">Current page contains text 'Admin'.</msg>
<status status="PASS" starttime="20250923 07:31:13.061" endtime="20250923 07:31:13.068"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>Admin User</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:31:13.073" level="INFO">Current page contains text 'Admin User'.</msg>
<status status="PASS" starttime="20250923 07:31:13.068" endtime="20250923 07:31:13.074"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:31:13.074" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:31:13.074" endtime="20250923 07:31:13.077"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:14.079" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:31:13.077" endtime="20250923 07:31:14.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:31:14.080" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:31:14.079" endtime="20250923 07:31:14.080"/>
</kw>
<status status="PASS" starttime="20250923 07:31:13.074" endtime="20250923 07:31:14.080"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:31:14.081" endtime="20250923 07:31:14.221"/>
</kw>
<status status="PASS" starttime="20250923 07:31:14.080" endtime="20250923 07:31:14.222"/>
</kw>
<status status="PASS" starttime="20250923 07:31:13.074" endtime="20250923 07:31:14.222"/>
</kw>
<doc>Verify that user role is correctly displayed after login</doc>
<tag>authentication</tag>
<tag>role</tag>
<tag>ui</tag>
<status status="PASS" starttime="20250923 07:31:04.164" endtime="20250923 07:31:14.222"/>
</test>
<test id="s1-t12" name="TC012 - Multiple Login Attempts" line="187">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:31:14.225" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:31:14.224" endtime="20250923 07:31:15.644"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:31:15.644" endtime="20250923 07:31:16.009"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:31:16.009" endtime="20250923 07:31:16.012"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:31:16.012" endtime="20250923 07:31:16.019"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:19.020" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:31:16.019" endtime="20250923 07:31:19.020"/>
</kw>
<status status="PASS" starttime="20250923 07:31:14.224" endtime="20250923 07:31:19.020"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:31:19.022" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:31:19.021" endtime="20250923 07:31:19.029"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:20.031" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:31:19.029" endtime="20250923 07:31:20.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:31:20.031" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:31:20.031" endtime="20250923 07:31:20.031"/>
</kw>
<status status="PASS" starttime="20250923 07:31:19.021" endtime="20250923 07:31:20.032"/>
</kw>
<status status="PASS" starttime="20250923 07:31:14.224" endtime="20250923 07:31:20.032"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>3</value>
<iter>
<var name="${i}">0</var>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:31:20.033" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:31:20.033" endtime="20250923 07:31:20.075"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:31:20.076" endtime="20250923 07:31:20.092"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USERNAME_FIELD}</arg>
<arg>invalid${i}@demo.com</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 07:31:20.092" level="INFO">Typing text 'invalid0@demo.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20250923 07:31:20.092" endtime="20250923 07:31:20.193"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${PASSWORD_FIELD}</arg>
<arg>wrongpass${i}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250923 07:31:20.193" level="INFO">Typing text 'wrongpass0' into text field 'id:password'.</msg>
<status status="PASS" starttime="20250923 07:31:20.193" endtime="20250923 07:31:20.231"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_SUBMIT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:31:20.231" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-login')]'.</msg>
<msg timestamp="20250923 07:31:21.424" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-7.png"&gt;&lt;img src="selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:31:21.424" level="FAIL">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000104537418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x000000010452f3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000104059050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x00000001040a5f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x00000001040a44d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x00000001040a22ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001040a16e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
7   chromedriver                        0x0000000104096220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
8   chromedriver                        0x0000000104095cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
9   chromedriver                        0x00000001040e1604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
10  chromedriver                        0x00000001040940d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x00000001044fbb08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x00000001044fed20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x00000001044dce58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x00000001044ff5cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x00000001044ce59c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x000000010451e9f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x000000010451eb70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x000000010452f000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 07:31:20.231" endtime="20250923 07:31:21.424"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:31:21.424" endtime="20250923 07:31:21.425"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:31:21.425" endtime="20250923 07:31:21.425"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="NOT RUN" starttime="20250923 07:31:21.425" endtime="20250923 07:31:21.425"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20250923 07:31:21.425" endtime="20250923 07:31:21.425"/>
</kw>
<status status="FAIL" starttime="20250923 07:31:20.032" endtime="20250923 07:31:21.425"/>
</iter>
<status status="FAIL" starttime="20250923 07:31:20.032" endtime="20250923 07:31:21.425"/>
</for>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:31:21.425" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:31:21.425" endtime="20250923 07:31:21.431"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:22.433" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:31:21.431" endtime="20250923 07:31:22.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:31:22.434" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:31:22.434" endtime="20250923 07:31:22.434"/>
</kw>
<status status="PASS" starttime="20250923 07:31:21.425" endtime="20250923 07:31:22.434"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:31:22.434" endtime="20250923 07:31:22.578"/>
</kw>
<status status="PASS" starttime="20250923 07:31:22.434" endtime="20250923 07:31:22.578"/>
</kw>
<status status="PASS" starttime="20250923 07:31:21.425" endtime="20250923 07:31:22.578"/>
</kw>
<doc>Test multiple failed login attempts handling</doc>
<tag>authentication</tag>
<tag>negative</tag>
<tag>security</tag>
<status status="FAIL" starttime="20250923 07:31:14.222" endtime="20250923 07:31:22.578">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000104537418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x000000010452f3b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000104059050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x00000001040a5f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x00000001040a44d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x00000001040a22ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x00000001040a16e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
    [ Message content over the limit has been removed. ]
... _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x00000001044fbb08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x00000001044fed20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x00000001044dce58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x00000001044ff5cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x00000001044ce59c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x000000010451e9f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x000000010451eb70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x000000010452f000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8</status>
</test>
<test id="s1-t13" name="TC013 - User Role Login Test" line="207">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:31:22.580" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:31:22.579" endtime="20250923 07:31:24.047"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:31:24.048" endtime="20250923 07:31:24.406"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:31:24.406" endtime="20250923 07:31:24.407"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:31:24.408" endtime="20250923 07:31:24.415"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:27.416" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:31:24.415" endtime="20250923 07:31:27.416"/>
</kw>
<status status="PASS" starttime="20250923 07:31:22.579" endtime="20250923 07:31:27.416"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:31:27.418" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:31:27.417" endtime="20250923 07:31:27.427"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:28.429" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:31:27.427" endtime="20250923 07:31:28.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:31:28.430" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:31:28.430" endtime="20250923 07:31:28.430"/>
</kw>
<status status="PASS" starttime="20250923 07:31:27.417" endtime="20250923 07:31:28.431"/>
</kw>
<status status="PASS" starttime="20250923 07:31:22.579" endtime="20250923 07:31:28.431"/>
</kw>
<kw name="Test Mode User Login" library="depflow_keywords">
<doc>Quick user login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>user</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:31:28.432" endtime="20250923 07:31:28.442"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:29.443" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:31:28.442" endtime="20250923 07:31:29.443"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:31:29.444" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('user');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:31:29.443" endtime="20250923 07:31:29.457"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:31.459" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:31:29.458" endtime="20250923 07:31:31.459"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:31:31.460" endtime="20250923 07:31:31.482"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:31:31.483" endtime="20250923 07:31:31.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:31:31.495" level="INFO">Test Mode Login Completed for user</msg>
<status status="PASS" starttime="20250923 07:31:31.494" endtime="20250923 07:31:31.495"/>
</kw>
<status status="PASS" starttime="20250923 07:31:28.431" endtime="20250923 07:31:31.495"/>
</kw>
<status status="PASS" starttime="20250923 07:31:28.431" endtime="20250923 07:31:31.495"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>DepFlow - Enterprise Dependency Management Platform</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20250923 07:31:31.498" level="INFO">Page title is 'DepFlow - Enterprise Dependency Management Platform'.</msg>
<status status="PASS" starttime="20250923 07:31:31.495" endtime="20250923 07:31:31.498"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:31:31.501" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:31:31.498" endtime="20250923 07:31:31.501"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:31:31.504" level="INFO">Current page contains element 'id:dashboardPage'.</msg>
<status status="PASS" starttime="20250923 07:31:31.501" endtime="20250923 07:31:31.505"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>user@demo.com</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:31:31.512" level="INFO">Current page contains text 'user@demo.com'.</msg>
<status status="PASS" starttime="20250923 07:31:31.505" endtime="20250923 07:31:31.512"/>
</kw>
<kw name="Page Should Not Contain" library="SeleniumLibrary">
<arg>Admin User</arg>
<doc>Verifies the current page does not contain ``text``.</doc>
<msg timestamp="20250923 07:31:51.615" level="INFO">Current page does not contain text 'Admin User'.</msg>
<status status="PASS" starttime="20250923 07:31:31.512" endtime="20250923 07:31:51.615"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:31:51.617" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:31:51.616" endtime="20250923 07:31:51.620"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:52.623" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:31:51.621" endtime="20250923 07:31:52.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:31:52.624" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:31:52.624" endtime="20250923 07:31:52.624"/>
</kw>
<status status="PASS" starttime="20250923 07:31:51.616" endtime="20250923 07:31:52.624"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:31:52.624" endtime="20250923 07:31:52.811"/>
</kw>
<status status="PASS" starttime="20250923 07:31:52.624" endtime="20250923 07:31:52.811"/>
</kw>
<status status="PASS" starttime="20250923 07:31:51.616" endtime="20250923 07:31:52.811"/>
</kw>
<doc>Test successful login with regular user credentials using Test Mode</doc>
<tag>authentication</tag>
<tag>role</tag>
<tag>test_mode</tag>
<tag>user</tag>
<status status="PASS" starttime="20250923 07:31:22.578" endtime="20250923 07:31:52.811"/>
</test>
<test id="s1-t14" name="TC014 - JWT Token Storage Verification" line="221">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:31:52.812" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:31:52.812" endtime="20250923 07:31:54.288"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:31:54.289" endtime="20250923 07:31:54.652"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:31:54.653" endtime="20250923 07:31:54.654"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:31:54.654" endtime="20250923 07:31:54.661"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:57.662" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:31:54.661" endtime="20250923 07:31:57.662"/>
</kw>
<status status="PASS" starttime="20250923 07:31:52.812" endtime="20250923 07:31:57.662"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:31:57.664" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:31:57.663" endtime="20250923 07:31:57.672"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:58.673" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:31:57.672" endtime="20250923 07:31:58.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:31:58.674" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:31:58.674" endtime="20250923 07:31:58.674"/>
</kw>
<status status="PASS" starttime="20250923 07:31:57.663" endtime="20250923 07:31:58.675"/>
</kw>
<status status="PASS" starttime="20250923 07:31:52.812" endtime="20250923 07:31:58.675"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:31:58.677" endtime="20250923 07:31:58.685"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:31:59.685" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:31:58.685" endtime="20250923 07:31:59.685"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:31:59.686" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:31:59.686" endtime="20250923 07:31:59.700"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:01.701" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:31:59.700" endtime="20250923 07:32:01.701"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:32:01.701" endtime="20250923 07:32:01.721"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:32:01.721" endtime="20250923 07:32:01.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:32:01.733" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:32:01.733" endtime="20250923 07:32:01.733"/>
</kw>
<status status="PASS" starttime="20250923 07:31:58.676" endtime="20250923 07:32:01.733"/>
</kw>
<status status="PASS" starttime="20250923 07:31:58.676" endtime="20250923 07:32:01.733"/>
</kw>
<status status="PASS" starttime="20250923 07:31:58.675" endtime="20250923 07:32:01.733"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:32:01.733" endtime="20250923 07:32:01.740"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:32:01.744" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:32:01.741" endtime="20250923 07:32:01.744"/>
</kw>
<status status="PASS" starttime="20250923 07:32:01.733" endtime="20250923 07:32:01.744"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${token}</var>
<arg>return localStorage.getItem('token')</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:01.744" level="INFO">Executing JavaScript:
return localStorage.getItem('token')
Without any arguments.</msg>
<msg timestamp="20250923 07:32:01.746" level="INFO">${token} = test-jwt-token-1758592919689</msg>
<status status="PASS" starttime="20250923 07:32:01.744" endtime="20250923 07:32:01.746"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${token}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250923 07:32:01.746" level="INFO">Length is 28</msg>
<status status="PASS" starttime="20250923 07:32:01.746" endtime="20250923 07:32:01.746"/>
</kw>
<kw name="Split String" library="String">
<var>${token_parts}</var>
<arg>${token}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20250923 07:32:01.746" level="INFO">${token_parts} = ['test-jwt-token-1758592919689']</msg>
<status status="PASS" starttime="20250923 07:32:01.746" endtime="20250923 07:32:01.746"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${parts_count}</var>
<arg>${token_parts}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20250923 07:32:01.747" level="INFO">Length is 1</msg>
<msg timestamp="20250923 07:32:01.747" level="INFO">${parts_count} = 1</msg>
<status status="PASS" starttime="20250923 07:32:01.746" endtime="20250923 07:32:01.747"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${parts_count}</arg>
<arg>3</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250923 07:32:01.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250923 07:32:01.747" level="FAIL">1.0 != 3.0</msg>
<status status="FAIL" starttime="20250923 07:32:01.747" endtime="20250923 07:32:01.747"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:01.748" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:01.747" endtime="20250923 07:32:01.751"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:02.752" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:32:01.751" endtime="20250923 07:32:02.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:32:02.752" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:32:02.752" endtime="20250923 07:32:02.752"/>
</kw>
<status status="PASS" starttime="20250923 07:32:01.747" endtime="20250923 07:32:02.752"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:32:02.753" endtime="20250923 07:32:02.886"/>
</kw>
<status status="PASS" starttime="20250923 07:32:02.753" endtime="20250923 07:32:02.886"/>
</kw>
<status status="PASS" starttime="20250923 07:32:01.747" endtime="20250923 07:32:02.886"/>
</kw>
<doc>Test that JWT token is properly stored after login</doc>
<tag>authentication</tag>
<tag>jwt</tag>
<tag>storage</tag>
<tag>token</tag>
<status status="FAIL" starttime="20250923 07:31:52.811" endtime="20250923 07:32:02.886">1.0 != 3.0</status>
</test>
<test id="s1-t15" name="TC015 - Login With Copy-Paste Credentials" line="237">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:32:02.887" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:32:02.887" endtime="20250923 07:32:04.365"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:32:04.365" endtime="20250923 07:32:04.727"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:32:04.728" endtime="20250923 07:32:04.730"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:32:04.730" endtime="20250923 07:32:04.738"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:07.739" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:32:04.738" endtime="20250923 07:32:07.740"/>
</kw>
<status status="PASS" starttime="20250923 07:32:02.887" endtime="20250923 07:32:07.740"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:07.742" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:07.741" endtime="20250923 07:32:07.750"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:08.752" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:32:07.750" endtime="20250923 07:32:08.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:32:08.752" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:32:08.752" endtime="20250923 07:32:08.752"/>
</kw>
<status status="PASS" starttime="20250923 07:32:07.740" endtime="20250923 07:32:08.752"/>
</kw>
<status status="PASS" starttime="20250923 07:32:02.887" endtime="20250923 07:32:08.752"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:32:08.753" level="INFO">Clicking element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:32:08.753" endtime="20250923 07:32:08.797"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_MODAL}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:32:08.797" endtime="20250923 07:32:09.028"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.getElementById('email').value = '${ADMIN_USERNAME}';</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:09.028" level="INFO">Executing JavaScript:
document.getElementById('email').value = 'admin@demo.com';
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:09.028" endtime="20250923 07:32:09.032"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>document.getElementById('password').value = '${ADMIN_PASSWORD}';</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:09.032" level="INFO">Executing JavaScript:
document.getElementById('password').value = 'admin123456';
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:09.032" endtime="20250923 07:32:09.036"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGIN_SUBMIT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:32:09.036" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-login')]'.</msg>
<msg timestamp="20250923 07:32:10.239" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-8.png"&gt;&lt;img src="selenium-screenshot-8.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:32:10.239" level="FAIL">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000100feb418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000100fe33b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000100b0d050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x0000000100b59f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x0000000100b584d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x0000000100b562ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x0000000100b556e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
7   chromedriver                        0x0000000100b4a220 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 323756
8   chromedriver                        0x0000000100b49cac _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 322360
9   chromedriver                        0x0000000100b95604 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 631952
10  chromedriver                        0x0000000100b480d0 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x0000000100fafb08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x0000000100fb2d20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x0000000100f90e58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x0000000100fb35cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x0000000100f8259c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x0000000100fd29f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x0000000100fd2b70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x0000000100fe3000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8
</msg>
<status status="FAIL" starttime="20250923 07:32:09.036" endtime="20250923 07:32:10.240"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" starttime="20250923 07:32:10.240" endtime="20250923 07:32:10.240"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>admin@demo.com</arg>
<doc>Verifies that current page contains ``text``.</doc>
<status status="NOT RUN" starttime="20250923 07:32:10.240" endtime="20250923 07:32:10.240"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:10.241" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:10.241" endtime="20250923 07:32:10.245"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:11.247" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:32:10.245" endtime="20250923 07:32:11.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:32:11.248" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:32:11.247" endtime="20250923 07:32:11.248"/>
</kw>
<status status="PASS" starttime="20250923 07:32:10.241" endtime="20250923 07:32:11.248"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:32:11.248" endtime="20250923 07:32:11.380"/>
</kw>
<status status="PASS" starttime="20250923 07:32:11.248" endtime="20250923 07:32:11.380"/>
</kw>
<status status="PASS" starttime="20250923 07:32:10.240" endtime="20250923 07:32:11.380"/>
</kw>
<doc>Test login functionality with copy-paste credentials</doc>
<tag>authentication</tag>
<tag>usability</tag>
<status status="FAIL" starttime="20250923 07:32:02.886" endtime="20250923 07:32:11.380">ElementClickInterceptedException: Message: element click intercepted: Element &lt;button class="btn-login" onclick="open...Modal()"&gt;Login&lt;/button&gt; is not clickable at point (1297, 39). Other element would receive the click: &lt;div id="loginModal" class="modal show" style="display: flex;"&gt;...&lt;/div&gt;
  (Session info: chrome=140.0.7339.186)
Stacktrace:
0   chromedriver                        0x0000000100feb418 cxxbridge1$str$ptr + 2882044
1   chromedriver                        0x0000000100fe33b4 cxxbridge1$str$ptr + 2849176
2   chromedriver                        0x0000000100b0d050 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 73436
3   chromedriver                        0x0000000100b59f6c _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 388600
4   chromedriver                        0x0000000100b584d8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 381796
5   chromedriver                        0x0000000100b562ec _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 373112
6   chromedriver                        0x0000000100b556e8 _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 370036
    [ Message content over the limit has been removed. ]
... _RNvCslE4myv9Sbr3_7___rustc35___rust_no_alloc_shim_is_unstable_v2 + 315228
11  chromedriver                        0x0000000100fafb08 cxxbridge1$str$ptr + 2638060
12  chromedriver                        0x0000000100fb2d20 cxxbridge1$str$ptr + 2650884
13  chromedriver                        0x0000000100f90e58 cxxbridge1$str$ptr + 2511932
14  chromedriver                        0x0000000100fb35cc cxxbridge1$str$ptr + 2653104
15  chromedriver                        0x0000000100f8259c cxxbridge1$str$ptr + 2452352
16  chromedriver                        0x0000000100fd29f0 cxxbridge1$str$ptr + 2781140
17  chromedriver                        0x0000000100fd2b70 cxxbridge1$str$ptr + 2781524
18  chromedriver                        0x0000000100fe3000 cxxbridge1$str$ptr + 2848228
19  libsystem_pthread.dylib             0x0000000186067c0c _pthread_start + 136
20  libsystem_pthread.dylib             0x0000000186062b80 thread_start + 8</status>
</test>
<test id="s1-t16" name="TC016 - Logout Clears Session Storage" line="252">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:32:11.382" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:32:11.382" endtime="20250923 07:32:12.835"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:32:12.835" endtime="20250923 07:32:13.201"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:32:13.203" endtime="20250923 07:32:13.205"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:32:13.205" endtime="20250923 07:32:13.214"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:16.218" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:32:13.215" endtime="20250923 07:32:16.218"/>
</kw>
<status status="PASS" starttime="20250923 07:32:11.381" endtime="20250923 07:32:16.218"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:16.220" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:16.219" endtime="20250923 07:32:16.228"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:17.230" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:32:16.228" endtime="20250923 07:32:17.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:32:17.231" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:32:17.231" endtime="20250923 07:32:17.231"/>
</kw>
<status status="PASS" starttime="20250923 07:32:16.218" endtime="20250923 07:32:17.231"/>
</kw>
<status status="PASS" starttime="20250923 07:32:11.381" endtime="20250923 07:32:17.231"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:32:17.232" endtime="20250923 07:32:17.240"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:18.242" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:32:17.240" endtime="20250923 07:32:18.242"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:18.243" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:18.243" endtime="20250923 07:32:18.258"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:20.259" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:32:18.258" endtime="20250923 07:32:20.259"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:32:20.259" endtime="20250923 07:32:20.281"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:32:20.281" endtime="20250923 07:32:20.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:32:20.293" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:32:20.293" endtime="20250923 07:32:20.293"/>
</kw>
<status status="PASS" starttime="20250923 07:32:17.232" endtime="20250923 07:32:20.293"/>
</kw>
<status status="PASS" starttime="20250923 07:32:17.232" endtime="20250923 07:32:20.293"/>
</kw>
<status status="PASS" starttime="20250923 07:32:17.232" endtime="20250923 07:32:20.293"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:32:20.294" endtime="20250923 07:32:20.301"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:32:20.304" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:32:20.301" endtime="20250923 07:32:20.304"/>
</kw>
<status status="PASS" starttime="20250923 07:32:20.293" endtime="20250923 07:32:20.304"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${user_data_before}</var>
<arg>return localStorage.getItem('depflow_user')</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:20.304" level="INFO">Executing JavaScript:
return localStorage.getItem('depflow_user')
Without any arguments.</msg>
<msg timestamp="20250923 07:32:20.307" level="INFO">${user_data_before} = {"email":"admin@demo.com","name":"Admin User","role":"admin"}</msg>
<status status="PASS" starttime="20250923 07:32:20.304" endtime="20250923 07:32:20.307"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${token_before}</var>
<arg>return localStorage.getItem('token')</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:20.307" level="INFO">Executing JavaScript:
return localStorage.getItem('token')
Without any arguments.</msg>
<msg timestamp="20250923 07:32:20.309" level="INFO">${token_before} = test-jwt-token-1758592938247</msg>
<status status="PASS" starttime="20250923 07:32:20.307" endtime="20250923 07:32:20.309"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${user_data_before}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250923 07:32:20.310" level="INFO">Length is 61</msg>
<status status="PASS" starttime="20250923 07:32:20.310" endtime="20250923 07:32:20.310"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${token_before}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250923 07:32:20.310" level="INFO">Length is 28</msg>
<status status="PASS" starttime="20250923 07:32:20.310" endtime="20250923 07:32:20.310"/>
</kw>
<kw name="Logout From DepFlow" library="depflow_keywords">
<doc>Logs out from DepFlow application</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:32:20.310" endtime="20250923 07:32:20.319"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LOGOUT_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250923 07:32:20.319" level="INFO">Clicking element 'xpath://button[contains(@class, 'btn-logout')]'.</msg>
<status status="PASS" starttime="20250923 07:32:20.319" endtime="20250923 07:32:20.369"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<msg timestamp="20250923 07:32:30.635" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-9.png"&gt;&lt;img src="selenium-screenshot-9.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20250923 07:32:30.635" level="FAIL">Element 'id:userPanel' still visible after 10 seconds.</msg>
<status status="FAIL" starttime="20250923 07:32:20.370" endtime="20250923 07:32:30.636"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20250923 07:32:30.636" endtime="20250923 07:32:30.636"/>
</kw>
<status status="FAIL" starttime="20250923 07:32:20.310" endtime="20250923 07:32:30.636"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${user_data_after}</var>
<arg>return localStorage.getItem('depflow_user')</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<status status="NOT RUN" starttime="20250923 07:32:30.637" endtime="20250923 07:32:30.637"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<var>${token_after}</var>
<arg>return localStorage.getItem('token')</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<status status="NOT RUN" starttime="20250923 07:32:30.637" endtime="20250923 07:32:30.637"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${user_data_after}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250923 07:32:30.637" endtime="20250923 07:32:30.637"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${token_after}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20250923 07:32:30.637" endtime="20250923 07:32:30.637"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:30.639" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:30.639" endtime="20250923 07:32:30.645"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:31.646" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:32:30.645" endtime="20250923 07:32:31.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:32:31.647" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:32:31.647" endtime="20250923 07:32:31.647"/>
</kw>
<status status="PASS" starttime="20250923 07:32:30.638" endtime="20250923 07:32:31.647"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:32:31.647" endtime="20250923 07:32:31.791"/>
</kw>
<status status="PASS" starttime="20250923 07:32:31.647" endtime="20250923 07:32:31.791"/>
</kw>
<status status="PASS" starttime="20250923 07:32:30.638" endtime="20250923 07:32:31.791"/>
</kw>
<doc>Test that logout properly clears session data</doc>
<tag>authentication</tag>
<tag>logout</tag>
<tag>security</tag>
<tag>storage</tag>
<status status="FAIL" starttime="20250923 07:32:11.381" endtime="20250923 07:32:31.791">Element 'id:userPanel' still visible after 10 seconds.</status>
</test>
<test id="s1-t17" name="TC017 - Backend Authentication API Test" line="274">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:32:31.792" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:32:31.792" endtime="20250923 07:32:33.120"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:32:33.121" endtime="20250923 07:32:33.491"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:32:33.491" endtime="20250923 07:32:33.492"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:32:33.492" endtime="20250923 07:32:33.498"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:36.499" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:32:33.498" endtime="20250923 07:32:36.500"/>
</kw>
<status status="PASS" starttime="20250923 07:32:31.792" endtime="20250923 07:32:36.500"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:36.502" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:36.501" endtime="20250923 07:32:36.510"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:37.513" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:32:36.510" endtime="20250923 07:32:37.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:32:37.515" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:32:37.514" endtime="20250923 07:32:37.515"/>
</kw>
<status status="PASS" starttime="20250923 07:32:36.501" endtime="20250923 07:32:37.515"/>
</kw>
<status status="PASS" starttime="20250923 07:32:31.791" endtime="20250923 07:32:37.515"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>auth_test</arg>
<arg>${BACKEND_URL}</arg>
<arg>timeout=30</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250923 07:32:37.516" level="INFO">Creating Session using : alias=auth_test, url=http://localhost:8000, headers={},                     cookies={}, auth=None, timeout=30, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20250923 07:32:37.515" endtime="20250923 07:32:37.516"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>email=${ADMIN_USERNAME}</arg>
<arg>password=${ADMIN_PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250923 07:32:37.518" level="INFO">${payload} = {'email': 'admin@demo.com', 'password': 'admin123456'}</msg>
<status status="PASS" starttime="20250923 07:32:37.517" endtime="20250923 07:32:37.518"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>auth_test</arg>
<arg>/api/v1/auth/login</arg>
<arg>json=${payload}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250923 07:32:37.641" level="INFO">POST Request : url=http://localhost:8000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '54', 'Content-Type': 'application/json'} 
 body=b'{"email": "admin@demo.com", "password": "admin123456"}' 
 </msg>
<msg timestamp="20250923 07:32:37.641" level="INFO">POST Response : url=http://localhost:8000/api/v1/auth/login 
 status=200, reason=OK 
 headers={'Content-Security-Policy': "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests", 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Resource-Policy': 'same-origin', 'Origin-Agent-Cluster': '?1', 'Referrer-Policy': 'no-referrer', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Content-Type-Options': 'nosniff', 'X-DNS-Prefetch-Control': 'off', 'X-Download-Options': 'noopen', 'X-Frame-Options': 'SAMEORIGIN', 'X-Permitted-Cross-Domain-Policies': 'none', 'X-XSS-Protection': '0', 'Access-Control-Allow-Origin': 'http://localhost:3000', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'X-RateLimit-Limit': '1000', 'X-RateLimit-Remaining': '999', 'Date': 'Tue, 23 Sep 2025 02:02:37 GMT', 'X-RateLimit-Reset': '1758593858', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '770', 'ETag': 'W/"302-/q1ze+qTaH4evOoOUiOKSyDVkFk"', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":true,"data":{"user":{"id":"1758557784428cla5an3d0","email":"admin@demo.com","firstName":"Admin","lastName":"User","role":"admin","teamIds":[],"isActive":true,"emailVerified":true,"createdAt":"2025-09-22T16:16:24.497Z","updatedAt":"2025-09-22T16:16:24.497Z"},"tokens":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxNzU4NTU3Nzg0NDI4Y2xhNWFuM2QwIiwiZW1haWwiOiJhZG1pbkBkZW1vLmNvbSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc1ODU5Mjk1NywiZXhwIjoxNzU4Njc5MzU3fQ.0SljdjoXfxi3xuEAquzb6thF20zJVUoAJrpnZ7OcM7A","refreshToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxNzU4NTU3Nzg0NDI4Y2xhNWFuM2QwIiwiZW1haWwiOiJhZG1pbkBkZW1vLmNvbSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc1ODU5Mjk1NywiZXhwIjoxNzU4Njc5MzU3fQ.0SljdjoXfxi3xuEAquzb6thF20zJVUoAJrpnZ7OcM7A"}}} 
 </msg>
<msg timestamp="20250923 07:32:37.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250923 07:32:37.518" endtime="20250923 07:32:37.642"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250923 07:32:37.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250923 07:32:37.642" endtime="20250923 07:32:37.642"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:32:37.643" level="INFO">${json_response} = {'success': True, 'data': {'user': {'id': '1758557784428cla5an3d0', 'email': 'admin@demo.com', 'firstName': 'Admin', 'lastName': 'User', 'role': 'admin', 'teamIds': [], 'isActive': True, 'emailVerifie...</msg>
<status status="PASS" starttime="20250923 07:32:37.642" endtime="20250923 07:32:37.643"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>token</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20250923 07:32:37.643" level="FAIL">Dictionary does not contain key 'token'.</msg>
<status status="FAIL" starttime="20250923 07:32:37.643" endtime="20250923 07:32:37.643"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>user</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" starttime="20250923 07:32:37.643" endtime="20250923 07:32:37.643"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${user}</var>
<arg>${json_response}</arg>
<arg>user</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" starttime="20250923 07:32:37.643" endtime="20250923 07:32:37.643"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${user}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" starttime="20250923 07:32:37.643" endtime="20250923 07:32:37.643"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${user}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" starttime="20250923 07:32:37.643" endtime="20250923 07:32:37.643"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${user}</arg>
<arg>role</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" starttime="20250923 07:32:37.643" endtime="20250923 07:32:37.643"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:37.644" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:37.644" endtime="20250923 07:32:37.646"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:38.648" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:32:37.646" endtime="20250923 07:32:38.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:32:38.649" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:32:38.649" endtime="20250923 07:32:38.649"/>
</kw>
<status status="PASS" starttime="20250923 07:32:37.644" endtime="20250923 07:32:38.649"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:32:38.649" endtime="20250923 07:32:38.786"/>
</kw>
<status status="PASS" starttime="20250923 07:32:38.649" endtime="20250923 07:32:38.786"/>
</kw>
<status status="PASS" starttime="20250923 07:32:37.644" endtime="20250923 07:32:38.786"/>
</kw>
<doc>Test backend authentication endpoint directly</doc>
<tag>api</tag>
<tag>authentication</tag>
<tag>backend</tag>
<status status="FAIL" starttime="20250923 07:32:31.791" endtime="20250923 07:32:38.786">Dictionary does not contain key 'token'.</status>
</test>
<test id="s1-t18" name="TC018 - Invalid Backend Authentication" line="296">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:32:38.787" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:32:38.787" endtime="20250923 07:32:40.517"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:32:40.518" endtime="20250923 07:32:40.884"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:32:40.884" endtime="20250923 07:32:40.885"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:32:40.885" endtime="20250923 07:32:40.892"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:43.893" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:32:40.892" endtime="20250923 07:32:43.894"/>
</kw>
<status status="PASS" starttime="20250923 07:32:38.787" endtime="20250923 07:32:43.894"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:43.896" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:43.895" endtime="20250923 07:32:43.905"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:44.907" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:32:43.906" endtime="20250923 07:32:44.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:32:44.908" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:32:44.908" endtime="20250923 07:32:44.908"/>
</kw>
<status status="PASS" starttime="20250923 07:32:43.894" endtime="20250923 07:32:44.908"/>
</kw>
<status status="PASS" starttime="20250923 07:32:38.787" endtime="20250923 07:32:44.909"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>auth_test</arg>
<arg>${BACKEND_URL}</arg>
<arg>timeout=30</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250923 07:32:44.909" level="INFO">Creating Session using : alias=auth_test, url=http://localhost:8000, headers={},                     cookies={}, auth=None, timeout=30, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20250923 07:32:44.909" endtime="20250923 07:32:44.910"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>email=invalid@demo.com</arg>
<arg>password=wrongpassword</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250923 07:32:44.910" level="INFO">${payload} = {'email': 'invalid@demo.com', 'password': 'wrongpassword'}</msg>
<status status="PASS" starttime="20250923 07:32:44.910" endtime="20250923 07:32:44.910"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>auth_test</arg>
<arg>/api/v1/auth/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250923 07:32:44.919" level="INFO">POST Request : url=http://localhost:8000/api/v1/auth/login 
 path_url=/api/v1/auth/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '58', 'Content-Type': 'application/json'} 
 body=b'{"email": "invalid@demo.com", "password": "wrongpassword"}' 
 </msg>
<msg timestamp="20250923 07:32:44.919" level="INFO">POST Response : url=http://localhost:8000/api/v1/auth/login 
 status=401, reason=Unauthorized 
 headers={'Content-Security-Policy': "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests", 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Resource-Policy': 'same-origin', 'Origin-Agent-Cluster': '?1', 'Referrer-Policy': 'no-referrer', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Content-Type-Options': 'nosniff', 'X-DNS-Prefetch-Control': 'off', 'X-Download-Options': 'noopen', 'X-Frame-Options': 'SAMEORIGIN', 'X-Permitted-Cross-Domain-Policies': 'none', 'X-XSS-Protection': '0', 'Access-Control-Allow-Origin': 'http://localhost:3000', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'X-RateLimit-Limit': '1000', 'X-RateLimit-Remaining': '998', 'Date': 'Tue, 23 Sep 2025 02:02:44 GMT', 'X-RateLimit-Reset': '1758593858', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '94', 'ETag': 'W/"5e-9T9AtAxLyKTGnuY/QFcHTB/LfOo"', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"success":false,"error":{"code":"INVALID_CREDENTIALS","message":"Invalid email or password"}} 
 </msg>
<msg timestamp="20250923 07:32:44.920" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20250923 07:32:44.910" endtime="20250923 07:32:44.920"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250923 07:32:44.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250923 07:32:44.920" endtime="20250923 07:32:44.921"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250923 07:32:44.922" level="INFO">${json_response} = {'success': False, 'error': {'code': 'INVALID_CREDENTIALS', 'message': 'Invalid email or password'}}</msg>
<status status="PASS" starttime="20250923 07:32:44.921" endtime="20250923 07:32:44.922"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json_response['success']}</arg>
<arg>${False}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250923 07:32:44.922" endtime="20250923 07:32:44.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json_response['message']}</arg>
<arg>Invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250923 07:32:44.925" level="FAIL">Resolving variable '${json_response['message']}' failed: KeyError: 'message'</msg>
<status status="FAIL" starttime="20250923 07:32:44.924" endtime="20250923 07:32:44.925"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:44.926" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:44.926" endtime="20250923 07:32:44.929"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:45.931" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:32:44.930" endtime="20250923 07:32:45.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:32:45.932" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:32:45.932" endtime="20250923 07:32:45.932"/>
</kw>
<status status="PASS" starttime="20250923 07:32:44.925" endtime="20250923 07:32:45.932"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:32:45.933" endtime="20250923 07:32:46.092"/>
</kw>
<status status="PASS" starttime="20250923 07:32:45.932" endtime="20250923 07:32:46.092"/>
</kw>
<status status="PASS" starttime="20250923 07:32:44.925" endtime="20250923 07:32:46.092"/>
</kw>
<doc>Test backend authentication with invalid credentials</doc>
<tag>api</tag>
<tag>authentication</tag>
<tag>backend</tag>
<tag>negative</tag>
<status status="FAIL" starttime="20250923 07:32:38.786" endtime="20250923 07:32:46.092">Resolving variable '${json_response['message']}' failed: KeyError: 'message'</status>
</test>
<test id="s1-t19" name="TC019 - Session Timeout Behavior" line="313">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:32:46.095" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:32:46.094" endtime="20250923 07:32:47.630"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:32:47.631" endtime="20250923 07:32:47.990"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:32:47.990" endtime="20250923 07:32:47.991"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:32:47.991" endtime="20250923 07:32:47.997"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:50.999" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:32:47.997" endtime="20250923 07:32:51.001"/>
</kw>
<status status="PASS" starttime="20250923 07:32:46.093" endtime="20250923 07:32:51.001"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:51.007" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:51.006" endtime="20250923 07:32:51.020"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:52.021" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:32:51.020" endtime="20250923 07:32:52.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:32:52.022" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:32:52.022" endtime="20250923 07:32:52.022"/>
</kw>
<status status="PASS" starttime="20250923 07:32:51.005" endtime="20250923 07:32:52.022"/>
</kw>
<status status="PASS" starttime="20250923 07:32:46.093" endtime="20250923 07:32:52.022"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:32:52.022" endtime="20250923 07:32:52.029"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:53.030" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:32:52.030" endtime="20250923 07:32:53.030"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:53.031" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:53.030" endtime="20250923 07:32:53.043"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:55.044" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:32:53.043" endtime="20250923 07:32:55.045"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:32:55.045" endtime="20250923 07:32:55.069"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:32:55.069" endtime="20250923 07:32:55.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:32:55.083" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:32:55.083" endtime="20250923 07:32:55.083"/>
</kw>
<status status="PASS" starttime="20250923 07:32:52.022" endtime="20250923 07:32:55.083"/>
</kw>
<status status="PASS" starttime="20250923 07:32:52.022" endtime="20250923 07:32:55.083"/>
</kw>
<status status="PASS" starttime="20250923 07:32:52.022" endtime="20250923 07:32:55.083"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:32:55.083" endtime="20250923 07:32:55.093"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:32:55.097" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:32:55.093" endtime="20250923 07:32:55.097"/>
</kw>
<status status="PASS" starttime="20250923 07:32:55.083" endtime="20250923 07:32:55.097"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>localStorage.removeItem('token');</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:55.098" level="INFO">Executing JavaScript:
localStorage.removeItem('token');
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:55.097" endtime="20250923 07:32:55.100"/>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20250923 07:32:55.100" endtime="20250923 07:32:55.149"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<arg>Page Should Contain Element</arg>
<arg>${LOGIN_BUTTON}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:32:55.163" level="INFO">Current page contains element 'xpath://button[contains(@onclick, 'openLoginModal')]'.</msg>
<status status="PASS" starttime="20250923 07:32:55.152" endtime="20250923 07:32:55.163"/>
</kw>
<status status="PASS" starttime="20250923 07:32:55.150" endtime="20250923 07:32:55.163"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:32:55.165" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:32:55.164" endtime="20250923 07:32:55.170"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:32:56.171" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:32:55.170" endtime="20250923 07:32:56.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:32:56.171" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:32:56.171" endtime="20250923 07:32:56.171"/>
</kw>
<status status="PASS" starttime="20250923 07:32:55.163" endtime="20250923 07:32:56.171"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:32:56.172" endtime="20250923 07:32:56.279"/>
</kw>
<status status="PASS" starttime="20250923 07:32:56.172" endtime="20250923 07:32:56.279"/>
</kw>
<status status="PASS" starttime="20250923 07:32:55.163" endtime="20250923 07:32:56.279"/>
</kw>
<doc>Test application behavior when session expires</doc>
<tag>authentication</tag>
<tag>session</tag>
<tag>timeout</tag>
<status status="PASS" starttime="20250923 07:32:46.092" endtime="20250923 07:32:56.279"/>
</test>
<test id="s1-t20" name="TC020 - Cross-Tab Session Sync" line="330">
<kw name="Test Mode Authentication Test Setup" type="SETUP">
<doc>Setup for each authentication test using Test Mode</doc>
<kw name="Open DepFlow Application" library="depflow_keywords">
<doc>Opens the DepFlow application in browser</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${APP_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250923 07:32:56.280" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:3000'.</msg>
<status status="PASS" starttime="20250923 07:32:56.280" endtime="20250923 07:32:57.551"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20250923 07:32:57.552" endtime="20250923 07:32:57.922"/>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<arg>${IMPLICIT_WAIT}</arg>
<doc>Sets the implicit wait value used by Selenium.</doc>
<status status="PASS" starttime="20250923 07:32:57.922" endtime="20250923 07:32:57.923"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=30s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:32:57.923" endtime="20250923 07:32:57.931"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:33:00.932" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250923 07:32:57.931" endtime="20250923 07:33:00.933"/>
</kw>
<status status="PASS" starttime="20250923 07:32:56.280" endtime="20250923 07:33:00.934"/>
</kw>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:33:00.936" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:33:00.935" endtime="20250923 07:33:00.948"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:33:01.949" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:33:00.948" endtime="20250923 07:33:01.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:33:01.950" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:33:01.950" endtime="20250923 07:33:01.950"/>
</kw>
<status status="PASS" starttime="20250923 07:33:00.934" endtime="20250923 07:33:01.950"/>
</kw>
<status status="PASS" starttime="20250923 07:32:56.280" endtime="20250923 07:33:01.950"/>
</kw>
<kw name="Login As Admin" library="depflow_keywords">
<doc>Quick login as admin user using test mode bypass</doc>
<kw name="Test Mode Admin Login" library="depflow_keywords">
<doc>Quick admin login using test mode</doc>
<kw name="Test Mode Login" library="depflow_keywords">
<arg>admin</arg>
<doc>Login using test mode bypass - no modal interaction required</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${LANDING_PAGE_LOGO}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:33:01.951" endtime="20250923 07:33:01.960"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:33:02.961" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:33:01.960" endtime="20250923 07:33:02.961"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeLogin === 'function') {</arg>
<arg>window.DepFlow.testModeLogin('${user_type}');</arg>
<arg>} else {</arg>
<arg>console.error('Test mode login function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:33:02.962" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeLogin === 'function') {window.DepFlow.testModeLogin('admin');} else {console.error('Test mode login function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:33:02.961" endtime="20250923 07:33:02.977"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:33:04.978" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250923 07:33:02.977" endtime="20250923 07:33:04.978"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:33:04.978" endtime="20250923 07:33:04.999"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=5s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:33:04.999" endtime="20250923 07:33:05.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Login Completed for ${user_type}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:33:05.011" level="INFO">Test Mode Login Completed for admin</msg>
<status status="PASS" starttime="20250923 07:33:05.011" endtime="20250923 07:33:05.011"/>
</kw>
<status status="PASS" starttime="20250923 07:33:01.951" endtime="20250923 07:33:05.011"/>
</kw>
<status status="PASS" starttime="20250923 07:33:01.951" endtime="20250923 07:33:05.011"/>
</kw>
<status status="PASS" starttime="20250923 07:33:01.950" endtime="20250923 07:33:05.011"/>
</kw>
<kw name="Navigate To Dashboard" library="depflow_keywords">
<doc>Navigates to the dashboard page</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DASHBOARD_PAGE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20250923 07:33:05.012" endtime="20250923 07:33:05.020"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20250923 07:33:05.023" level="INFO">Current page contains element 'id:userPanel'.</msg>
<status status="PASS" starttime="20250923 07:33:05.020" endtime="20250923 07:33:05.023"/>
</kw>
<status status="PASS" starttime="20250923 07:33:05.012" endtime="20250923 07:33:05.024"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.open('${APP_URL}', '_blank');</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:33:05.024" level="INFO">Executing JavaScript:
window.open('http://localhost:3000', '_blank');
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:33:05.024" endtime="20250923 07:33:05.070"/>
</kw>
<kw name="Get Window Handles" library="SeleniumLibrary">
<var>@{windows}</var>
<doc>Returns all child window handles of the selected browser as a list.</doc>
<msg timestamp="20250923 07:33:05.085" level="INFO">@{windows} = [ 423A8CBF8587FB15E400B82304BFC319 | BBED908D937DD16F869375072452CBC0 ]</msg>
<status status="PASS" starttime="20250923 07:33:05.070" endtime="20250923 07:33:05.085"/>
</kw>
<kw name="Switch Window" library="SeleniumLibrary">
<arg>${windows}[1]</arg>
<doc>Switches to browser window matching ``locator``.</doc>
<status status="PASS" starttime="20250923 07:33:05.085" endtime="20250923 07:33:05.182"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${USER_PANEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250923 07:33:05.182" endtime="20250923 07:33:05.213"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>admin@demo.com</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20250923 07:33:05.262" level="INFO">Current page contains text 'admin@demo.com'.</msg>
<status status="PASS" starttime="20250923 07:33:05.213" endtime="20250923 07:33:05.262"/>
</kw>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20250923 07:33:05.262" endtime="20250923 07:33:05.308"/>
</kw>
<kw name="Switch Window" library="SeleniumLibrary">
<arg>${windows}[0]</arg>
<doc>Switches to browser window matching ``locator``.</doc>
<status status="PASS" starttime="20250923 07:33:05.308" endtime="20250923 07:33:05.339"/>
</kw>
<kw name="Test Mode Authentication Test Teardown" type="TEARDOWN">
<doc>Cleanup after each authentication test using Test Mode</doc>
<kw name="Test Mode Reset" library="depflow_keywords">
<doc>Complete app state reset for clean test environment</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>if (typeof window.DepFlow.testModeReset === 'function') {</arg>
<arg>window.DepFlow.testModeReset();</arg>
<arg>} else {</arg>
<arg>console.error('Test mode reset function not available');</arg>
<arg>}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20250923 07:33:05.348" level="INFO">Executing JavaScript:
if (typeof window.DepFlow.testModeReset === 'function') {window.DepFlow.testModeReset();} else {console.error('Test mode reset function not available');}
Without any arguments.</msg>
<status status="PASS" starttime="20250923 07:33:05.339" endtime="20250923 07:33:05.353"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250923 07:33:06.370" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250923 07:33:05.354" endtime="20250923 07:33:06.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Test Mode Reset Completed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250923 07:33:06.371" level="INFO">Test Mode Reset Completed</msg>
<status status="PASS" starttime="20250923 07:33:06.371" endtime="20250923 07:33:06.371"/>
</kw>
<status status="PASS" starttime="20250923 07:33:05.339" endtime="20250923 07:33:06.372"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:33:06.372" endtime="20250923 07:33:06.495"/>
</kw>
<status status="PASS" starttime="20250923 07:33:06.372" endtime="20250923 07:33:06.495"/>
</kw>
<status status="PASS" starttime="20250923 07:33:05.339" endtime="20250923 07:33:06.495"/>
</kw>
<doc>Test session synchronization across browser tabs</doc>
<tag>authentication</tag>
<tag>multi_tab</tag>
<tag>session</tag>
<status status="PASS" starttime="20250923 07:32:56.280" endtime="20250923 07:33:06.495"/>
</test>
<kw name="Teardown Test Environment" library="depflow_keywords" type="TEARDOWN">
<doc>Tears down test environment</doc>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250923 07:33:06.497" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<status status="PASS" starttime="20250923 07:33:06.496" endtime="20250923 07:33:06.497"/>
</kw>
<kw name="Close DepFlow Application" library="depflow_keywords">
<doc>Closes the browser and cleans up</doc>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20250923 07:33:06.497" endtime="20250923 07:33:06.497"/>
</kw>
<status status="PASS" starttime="20250923 07:33:06.497" endtime="20250923 07:33:06.497"/>
</kw>
<status status="PASS" starttime="20250923 07:33:06.496" endtime="20250923 07:33:06.497"/>
</kw>
<doc>Authentication and Login Test Suite for DepFlow Application</doc>
<status status="FAIL" starttime="20250923 07:29:16.482" endtime="20250923 07:33:06.497"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="9" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">admin</stat>
<stat pass="0" fail="2" skip="0">api</stat>
<stat pass="8" fail="9" skip="0">authentication</stat>
<stat pass="0" fail="2" skip="0">backend</stat>
<stat pass="1" fail="0" skip="0">convenience</stat>
<stat pass="0" fail="1" skip="0">jwt</stat>
<stat pass="1" fail="0" skip="0">landing</stat>
<stat pass="0" fail="2" skip="0">logout</stat>
<stat pass="1" fail="0" skip="0">manual</stat>
<stat pass="2" fail="0" skip="0">modal</stat>
<stat pass="1" fail="0" skip="0">multi_tab</stat>
<stat pass="0" fail="4" skip="0">negative</stat>
<stat pass="1" fail="0" skip="0">persistence</stat>
<stat pass="2" fail="0" skip="0">role</stat>
<stat pass="0" fail="2" skip="0">security</stat>
<stat pass="3" fail="0" skip="0">session</stat>
<stat pass="3" fail="1" skip="0">smoke</stat>
<stat pass="0" fail="2" skip="0">storage</stat>
<stat pass="2" fail="0" skip="0">test_mode</stat>
<stat pass="1" fail="0" skip="0">timeout</stat>
<stat pass="0" fail="1" skip="0">token</stat>
<stat pass="4" fail="0" skip="0">ui</stat>
<stat pass="1" fail="1" skip="0">usability</stat>
<stat pass="1" fail="0" skip="0">user</stat>
<stat pass="0" fail="1" skip="0">validation</stat>
</tag>
<suite>
<stat pass="11" fail="9" skip="0" id="s1" name="01 Authentication Tests">01 Authentication Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
